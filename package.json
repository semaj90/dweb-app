{
  "name": "deeds-web-app",
  "version": "0.0.1",
  "private": true,
  "scripts": {
    "launch": "powershell -ExecutionPolicy Bypass -File ./one-click-legal-ai-launcher.ps1",
    "launch:setup": "powershell -ExecutionPolicy Bypass -File ./one-click-legal-ai-launcher.ps1 -Setup",
    "launch:setup-gpu": "powershell -ExecutionPolicy Bypass -File ./one-click-legal-ai-launcher.ps1 -Setup -GPU",
    "launch:quick": "powershell -ExecutionPolicy Bypass -File ./one-click-legal-ai-launcher.ps1 -Quick",
    "launch:gpu": "powershell -ExecutionPolicy Bypass -File ./one-click-legal-ai-launcher.ps1 -GPU",
    "launch:reset": "powershell -ExecutionPolicy Bypass -File ./one-click-legal-ai-launcher.ps1 -Reset",
    "launch:native-db": "powershell -ExecutionPolicy Bypass -File ./one-click-legal-ai-launcher.ps1 -Setup -Native",
    "native:setup": "powershell -ExecutionPolicy Bypass -File ./check-native-services.ps1 -Setup",
    "native:setup-gpu": "powershell -ExecutionPolicy Bypass -File ./check-native-services.ps1 -Setup -GPU",
    "native:start": "powershell -ExecutionPolicy Bypass -File ./check-native-services.ps1 -Status",
    "native:stop": "echo 'Stop individual services manually or use Windows Services manager'",
    "native:status": "powershell -ExecutionPolicy Bypass -File ./check-native-services.ps1 -Status",
    "native:reset": "echo 'Reset individual services manually or reinstall'",
    "status": "powershell -ExecutionPolicy Bypass -File ./system-status-monitor.ps1",
    "status:detailed": "powershell -ExecutionPolicy Bypass -File ./system-status-monitor.ps1 -Detailed",
    "status:performance": "powershell -ExecutionPolicy Bypass -File ./system-status-monitor.ps1 -Performance",
    "status:logs": "powershell -ExecutionPolicy Bypass -File ./system-status-monitor.ps1 -Logs",
    "start": "powershell -ExecutionPolicy Bypass -File ./scripts/start-dev-environment.ps1",
    "start:quick": "powershell -ExecutionPolicy Bypass -File ./scripts/start-dev-environment.ps1 -Quick",
    "start:gpu": "powershell -ExecutionPolicy Bypass -File ./scripts/start-dev-environment.ps1 -GPU",
    "start:prod": "powershell -ExecutionPolicy Bypass -File ./scripts/start-dev-environment.ps1 -Production",
    "dev": "cd sveltekit-frontend && npm run dev",
    "check:claude": "npx tsx scripts/check-and-analyze.ts",
    "check:fix": "npx tsx scripts/multi-agent-check-fix.ts",
    "check:fix:enhanced": "npx tsx scripts/multi-agent-check-fix-simple.ts",
    "rag:enhanced": "npx tsx scripts/enhanced-rag-phase-integration.ts",
    "rag:demo": "npx tsx scripts/enhanced-rag-demo.ts",
    "rag:test": "npx tsx scripts/test-rag-search.ts",
    "vector:cli": "npx tsx scripts/vector-search-cli.ts",
    "vector:claude": "npx tsx scripts/claude-vector-integration.ts",
    "dev:status": "npx tsx scripts/quick-dev-status.ts",
    "psql": "scripts\\psql-shortcuts.bat",
    "build": "vite build",
    "preview": "vite preview",
    "check": "npx tsx scripts/check-quick.ts",
    "check:enhanced": "npx tsx scripts/enhanced-check-complete.ts",
    "check:basic": "svelte-kit sync && svelte-check --tsconfig ./tsconfig.json",
    "check:watch": "svelte-kit sync && svelte-check --tsconfig ./tsconfig.json --watch",
    "db:init": "node scripts/init-db.js",
    "ollama:start": "cd local-models && .\\RUN-GPU-SETUP.bat",
    "ollama:stop": "powershell -ExecutionPolicy Bypass -File ./scripts/start-ollama-service.ps1 stop",
    "ollama:restart": "powershell -ExecutionPolicy Bypass -File ./scripts/start-ollama-service.ps1 restart",
    "ollama:status": "powershell -ExecutionPolicy Bypass -File ./scripts/start-ollama-service.ps1 status",
    "ollama:models": "powershell -ExecutionPolicy Bypass -File ./scripts/start-ollama-service.ps1 models",
    "ollama:pull": "powershell -ExecutionPolicy Bypass -File ./scripts/start-ollama-service.ps1 pull",
    "ollama:health": "powershell -ExecutionPolicy Bypass -File ./scripts/start-ollama-service.ps1 health",
    "ollama:setup": "powershell -ExecutionPolicy Bypass -File ./scripts/start-ollama-service.ps1 setup",
    "ollama:gpu": "powershell -ExecutionPolicy Bypass -File ./scripts/start-ollama-service.ps1 start -GPU",
    "test": "vitest",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:headed": "playwright test --headed",
    "test:rag": "playwright test tests/rag-integration.spec.ts",
    "test:rag:comprehensive": "playwright test tests/comprehensive-rag-system.spec.ts",
    "test:ollama": "playwright test tests/ollama-gpu.spec.ts",
    "test:token-usage": "playwright test tests/token-usage.spec.ts",
    "test:chromium": "playwright test --project=chromium",
    "test:gpu": "playwright test tests/ollama-gpu.spec.ts tests/comprehensive-rag-system.spec.ts",
    "test:cuda": "playwright test tests/ollama-gpu.spec.ts --grep=\"CUDA\"",
    "test:postgresql": "playwright test --grep=\"PostgreSQL|pgvector|Drizzle\"",
    "test:sveltekit": "playwright test --grep=\"SvelteKit|Svelte\"",
    "test:performance": "playwright test --grep=\"performance|GPU|speed\"",
    "test:all": "npm run test:integration && npm run test:e2e",
    "test:legal-ai": "playwright test tests/comprehensive-rag-system.spec.ts tests/token-usage.spec.ts",
    "test:comprehensive": "node run-comprehensive-tests.mjs",
    "test:comprehensive-quick": "node run-comprehensive-tests.mjs --quick",
    "test:gpu-only": "node run-comprehensive-tests.mjs --gpu",
    "test:dev": "node run-development-tests.mjs",
    "test:dev:headed": "node run-development-tests.mjs --headed",
    "test:dev:verbose": "node run-development-tests.mjs --verbose",
    "test:environment": "playwright test tests/development-environment.spec.ts",
    "test:postgresql-crud": "playwright test tests/postgresql-crud-pgvector.spec.ts",
    "test:rag-enhanced": "playwright test tests/enhanced-rag-system.spec.ts",
    "test:claude-cli": "playwright test tests/claude-vector-cli.spec.ts",
    "test:sveltekit-endpoints": "playwright test tests/sveltekit-endpoints.spec.ts",
    "test:rag-integration": "playwright test tests/comprehensive-rag-system-integration.spec.ts",
    "test:rag-full": "playwright test tests/comprehensive-rag-system-integration.spec.ts --headed",
    "test:worker-threads": "playwright test tests/comprehensive-rag-system-integration.spec.ts --grep=\"Worker Threads\"",
    "test:simd": "playwright test tests/comprehensive-rag-system-integration.spec.ts --grep=\"SIMD\"",
    "test:cuda-integration": "playwright test tests/comprehensive-rag-system-integration.spec.ts --grep=\"CUDA\"",
    "test:memory-optimization": "playwright test tests/comprehensive-rag-system-integration.spec.ts --grep=\"memory optimization\"",
    "test:one-click-launcher": "playwright test tests/comprehensive-rag-system-integration.spec.ts --grep=\"One-Click Launcher\"",
    "demo:worker-threads": "node worker-simd-copilot-demo.mjs",
    "demo:worker-simd": "powershell -ExecutionPolicy Bypass -File ./run-worker-simd-demo.ps1",
    "demo:worker-simd:verbose": "powershell -ExecutionPolicy Bypass -File ./run-worker-simd-demo.ps1 -Verbose",
    "demo:worker-simd:large": "powershell -ExecutionPolicy Bypass -File ./run-worker-simd-demo.ps1 -DocumentCount 200 -WorkerCount 8",
    "demo:copilot-regex": "node -e \"console.log('ðŸ¤– See GITHUB_COPILOT_REGEX_GUIDE.md for comprehensive regex prompting examples')\"",
    "guide:worker-threads": "code WORKER_THREADS_SIMD_COPILOT_GUIDE.md",
    "guide:copilot-regex": "code GITHUB_COPILOT_REGEX_GUIDE.md",
    "guide:copilot": "code copilot.md",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:status": "docker-compose ps",
    "docker:restart": "docker-compose restart",
    "docker:clean": "docker system prune -f",
    "docker:rebuild": "docker-compose down && docker-compose build --no-cache && docker-compose up -d",
    "docker:cli": "powershell -ExecutionPolicy Bypass -File ./docker-cli-manager.ps1",
    "docker:wsl": "bash ./docker-wsl-manager.sh",
    "wsl:start": "bash ./start-wsl.sh",
    "ai:setup": "powershell -ExecutionPolicy Bypass -File ./scripts/setup-ai-models.ps1",
    "ai:test": "node scripts/test-ai-integration.mjs",
    "test:integration": "node scripts/test-integration.mjs",
    "test:quick": "npm run test:integration",
    "dev:frontend": "cd sveltekit-frontend && npm run dev",
    "dev:ollama": "npm run ollama:start && npm run ollama:setup",
    "dev:full": "concurrently \"npm run docker:up\" \"npm run dev:ollama\" \"npm run dev:frontend\"",
    "dev:gpu": "concurrently \"npm run docker:up\" \"npm run ollama:gpu\" \"npm run dev:frontend\"",
    "dev:quick": "concurrently \"npm run ollama:health\" \"npm run dev:frontend\"",
    "health": "node scripts/health-check.js",
    "deploy:prod": "powershell -ExecutionPolicy Bypass -File ./deploy-production-clean.ps1",
    "deploy:gpu": "powershell -ExecutionPolicy Bypass -File ./deploy-production-clean.ps1 -EnableGPU",
    "deploy:optimized": "powershell -ExecutionPolicy Bypass -File ./deploy-production-clean.ps1 -EnableGPU -OptimizeMemory"
  },
  "devDependencies": {
    "@playwright/test": "^1.47.0",
    "@sveltejs/adapter-auto": "^6.0.1",
    "@sveltejs/adapter-node": "^5.0.0",
    "@sveltejs/kit": "^2.0.0",
    "@sveltejs/vite-plugin-svelte": "^3.0.0",
    "@types/pg": "^8.11.0",
    "concurrently": "^8.2.2",
    "playwright": "^1.47.0",
    "svelte": "^5.0.0",
    "svelte-check": "^3.8.6",
    "svelte-preprocess": "^6.0.3",
    "tslib": "^2.4.1",
    "typescript": "^5.0.0",
    "unocss": "^0.58.0",
    "vite": "^5.0.0",
    "vitest": "^1.0.0"
  },
  "dependencies": {
    "@langchain/community": "^0.0.20",
    "@langchain/core": "^0.1.20",
    "@langchain/ollama": "^0.2.3",
    "@types/node": "^24.1.0",
    "@unocss/reset": "^0.58.0",
    "@unocss/svelte-scoped": "^0.58.0",
    "bits-ui": "^0.11.0",
    "drizzle-orm": "^0.29.5",
    "fuse.js": "^7.1.0",
    "langchain": "^0.1.20",
    "lokijs": "^1.5.12",
    "mammoth": "^1.6.0",
    "node-fetch": "^3.3.2",
    "pdf-parse": "^1.1.1",
    "pg": "^8.11.0",
    "pgvector": "^0.1.8",
    "express": "^4.19.2",
    "cors": "^2.8.5"
  },
  "type": "module",
  "engines": {
    "node": ">=18"
  }
}
