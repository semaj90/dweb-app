# Production RAG System - Docker Compose Configuration
# For Native Windows: Use individual service installations instead

version: '3.9'

services:
  # PostgreSQL with pgvector
  postgresql:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_USER: legal_admin
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: legal_ai_db
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./infrastructure/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U legal_admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - ./data/qdrant:/qdrant/storage
    environment:
      QDRANT__SERVICE__GRPC_PORT: 6334
      QDRANT__SERVICE__ENABLE_TLS: false

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
    command: redis-server --appendonly yes

  # NATS for messaging
  nats:
    image: nats:latest
    ports:
      - "4222:4222"  # Client connections
      - "8222:8222"  # HTTP management
      - "6222:6222"  # Cluster
    volumes:
      - ./infrastructure/nats/nats.conf:/nats.conf
    command: ["-c", "/nats.conf"]

  # RabbitMQ for task queuing
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
    volumes:
      - ./data/rabbitmq:/var/lib/rabbitmq

  # Ory Kratos for authentication
  kratos:
    image: oryd/kratos:v1.0
    ports:
      - "4433:4433"  # Public
      - "4434:4434"  # Admin
    environment:
      DSN: postgres://legal_admin:123456@postgresql:5432/kratos_db?sslmode=disable
    volumes:
      - ./infrastructure/kratos:/etc/config/kratos
    command: serve -c /etc/config/kratos/kratos.yml --dev

  # MinIO for object storage (file uploads)
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - ./data/minio:/data
    command: server /data --console-address ":9001"

networks:
  default:
    name: production-rag-network
    driver: bridge

volumes:
  postgres_data:
  qdrant_data:
  redis_data:
  rabbitmq_data:
  minio_data:
