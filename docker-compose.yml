version: '3.8'

services:
  # GPU-Accelerated Legal AI Service
  legal-ai-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: legal-ai-gpu
    ports:
      - "8084:8084"
    environment:
      - REDIS_ADDR=redis:6379
      - POSTGRES_URL=postgres://postgres:postgres@postgres:5432/legal_ai_db
      - PORT=8084
      - OLLAMA_URL=http://ollama:11434
      - GEMMA_MODEL_NAME=gemma3-legal:latest
      - MAX_CONCURRENCY=3
      - CACHE_EXPIRATION_MINUTES=30
      - ENABLE_GPU=true
      - MODEL_CONTEXT=4096
      - TEMPERATURE=0.2
      - STREAMING_ENABLED=true
      - BATCH_SIZE=5
      - GPU_MEMORY_LIMIT_MB=6000
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
        limits:
          memory: 8G
    depends_on:
      - redis
      - postgres
      - ollama
    networks:
      - legal-ai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: legal-ai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 2gb --maxmemory-policy allkeys-lru
    networks:
      - legal-ai-network
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: legal-ai-postgres
    environment:
      POSTGRES_DB: legal_ai_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_MAX_CONNECTIONS: 100
      POSTGRES_SHARED_BUFFERS: 256MB
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - legal-ai-network
    restart: unless-stopped

  # Ollama with GPU Support
  ollama:
    image: ollama/ollama:latest
    container_name: legal-ai-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_NUM_GPU=1
      - OLLAMA_GPU_LAYERS=32
      - OLLAMA_KEEP_ALIVE=5m
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - legal-ai-network
    restart: unless-stopped
    command: serve

  # Nginx Load Balancer (optional for scaling)
  nginx:
    image: nginx:alpine
    container_name: legal-ai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - legal-ai-service
    networks:
      - legal-ai-network
    restart: unless-stopped

  # Prometheus for Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: legal-ai-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - legal-ai-network
    restart: unless-stopped

  # Grafana for Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: legal-ai-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - legal-ai-network
    restart: unless-stopped

  # NVIDIA GPU Exporter for Monitoring
  nvidia-exporter:
    image: nvidia/dcgm-exporter:latest
    container_name: legal-ai-nvidia-exporter
    ports:
      - "9835:9400"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - legal-ai-network
    restart: unless-stopped

networks:
  legal-ai-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local
  ollama_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local