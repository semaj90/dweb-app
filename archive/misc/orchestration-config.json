{
  "orchestration": {
    "metadata": {
      "version": "1.0.0",
      "environment": "development",
      "created": "2025-01-13",
      "description": "Legal AI Enterprise Orchestration Configuration"
    },
    "services": {
      "kratos": {
        "name": "Legal AI Kratos Server",
        "type": "microservice",
        "host": "localhost",
        "port": 8080,
        "healthEndpoint": "/health",
        "startupCommand": "cd go-services && go run cmd/kratos-server/main.go",
        "dependencies": ["nats", "database"],
        "tags": ["microservice", "go", "kratos"],
        "capabilities": [
          "service-coordination",
          "load-balancing",
          "circuit-breaking"
        ]
      },
      "nats": {
        "name": "NATS Message Queue",
        "type": "message-queue",
        "host": "localhost",
        "port": 4222,
        "managementPort": 8222,
        "healthEndpoint": "/healthz",
        "startupCommand": "cd message-queue/nats && start-nats.bat",
        "dependencies": [],
        "tags": ["messaging", "nats", "jetstream"],
        "capabilities": [
          "pub-sub",
          "request-reply",
          "persistence",
          "clustering"
        ]
      },
      "node-cluster": {
        "name": "Node.js Cluster Manager",
        "type": "cluster",
        "host": "localhost",
        "port": 3000,
        "healthEndpoint": "/health",
        "startupCommand": "cd node-cluster && node cluster-manager.js",
        "dependencies": ["nats"],
        "tags": ["nodejs", "cluster", "workers"],
        "workers": {
          "legal": {
            "count": 3,
            "memory": "512MB",
            "port": 3010,
            "capabilities": ["pdf-processing", "ocr", "text-extraction"]
          },
          "ai": {
            "count": 2,
            "memory": "1GB",
            "port": 3020,
            "capabilities": ["llm-integration", "semantic-analysis"]
          },
          "vector": {
            "count": 2,
            "memory": "256MB",
            "port": 3030,
            "capabilities": ["embedding-generation", "similarity-search"]
          },
          "database": {
            "count": 3,
            "memory": "256MB",
            "port": 3040,
            "capabilities": ["query-optimization", "connection-pooling"]
          }
        }
      },
      "quic-gateway": {
        "name": "QUIC Protocol Gateway",
        "type": "protocol-gateway",
        "host": "localhost",
        "port": 8443,
        "httpPort": 8444,
        "healthEndpoint": "/health",
        "startupCommand": "cd quic-services && start-quic.bat",
        "dependencies": ["kratos"],
        "tags": ["quic", "http3", "ultra-low-latency"],
        "capabilities": [
          "document-streaming",
          "real-time-collaboration",
          "0-rtt-resumption"
        ]
      },
      "windows-services": {
        "name": "Windows Service Manager",
        "type": "service-manager",
        "host": "localhost",
        "port": 9000,
        "healthEndpoint": "/health",
        "startupCommand": "cd windows-service && start-service.bat",
        "dependencies": [],
        "tags": ["windows", "native", "ipc"],
        "services": [
          {
            "name": "LegalAIManager",
            "port": 9000,
            "description": "Master service controller"
          },
          {
            "name": "LegalAIDatabase",
            "port": 9001,
            "description": "PostgreSQL and vector database management"
          },
          {
            "name": "LegalAIVector",
            "port": 9002,
            "description": "Qdrant vector database management"
          },
          {
            "name": "LegalAIEngine",
            "port": 9003,
            "description": "Ollama LLM inference engine"
          }
        ]
      },
      "webgpu-engine": {
        "name": "WebGPU Tensor Engine",
        "type": "compute-engine",
        "host": "localhost",
        "port": 7000,
        "healthEndpoint": "/health",
        "startupCommand": "cd webgpu && start-webgpu-server.bat",
        "dependencies": ["vector-service"],
        "tags": ["webgpu", "tensor", "gpu-acceleration"],
        "capabilities": [
          "legal-embedding-acceleration",
          "vector-similarity-gpu",
          "neural-inference-gpu"
        ]
      },
      "xstate-orchestrator": {
        "name": "XState Workflow Orchestrator",
        "type": "workflow-engine",
        "host": "localhost",
        "port": 6000,
        "healthEndpoint": "/health",
        "startupCommand": "cd xstate && start-xstate-server.bat",
        "dependencies": ["kratos", "nats"],
        "tags": ["xstate", "workflow", "state-machine"],
        "workflows": [
          "legal-case-lifecycle",
          "evidence-processing-pipeline",
          "ai-analysis-orchestrator",
          "multi-agent-coordinator"
        ]
      },
      "elk-stack": {
        "name": "ELK Monitoring Stack",
        "type": "monitoring",
        "services": {
          "elasticsearch": {
            "host": "localhost",
            "port": 9200,
            "healthEndpoint": "/_cluster/health"
          },
          "logstash": {
            "host": "localhost",
            "port": 5044,
            "healthEndpoint": "/"
          },
          "kibana": {
            "host": "localhost",
            "port": 5601,
            "healthEndpoint": "/api/status"
          }
        },
        "startupCommand": "cd elk-stack && start-elk.bat",
        "dependencies": [],
        "tags": ["elasticsearch", "logstash", "kibana", "monitoring"]
      }
    },
    "communication": {
      "message-routing": {
        "legal-documents": {
          "subject": "legal.document.*",
          "producers": ["node-cluster:legal", "quic-gateway"],
          "consumers": ["kratos", "xstate-orchestrator"],
          "retention": "24h"
        },
        "ai-analysis": {
          "subject": "legal.ai.*",
          "producers": ["node-cluster:ai", "webgpu-engine"],
          "consumers": ["xstate-orchestrator", "kratos"],
          "retention": "1h"
        },
        "vector-operations": {
          "subject": "legal.vector.*",
          "producers": ["node-cluster:vector", "webgpu-engine"],
          "consumers": ["windows-services:vector"],
          "retention": "30m"
        },
        "system-events": {
          "subject": "legal.system.*",
          "producers": ["all-services"],
          "consumers": ["elk-stack"],
          "retention": "7d"
        }
      },
      "service-mesh": {
        "discovery": {
          "method": "nats-based",
          "heartbeat-interval": "30s",
          "timeout": "10s"
        },
        "load-balancing": {
          "strategy": "round-robin",
          "health-check-interval": "15s"
        },
        "circuit-breaker": {
          "failure-threshold": 5,
          "timeout": "60s",
          "half-open-max-calls": 3
        }
      }
    },
    "monitoring": {
      "health-checks": {
        "interval": "30s",
        "timeout": "5s",
        "retries": 3,
        "endpoints": [
          "http://localhost:8080/health",
          "http://localhost:4222/healthz",
          "http://localhost:3000/health",
          "https://localhost:8444/health",
          "http://localhost:9000/health",
          "http://localhost:7000/health",
          "http://localhost:6000/health",
          "http://localhost:9200/_cluster/health"
        ]
      },
      "metrics": {
        "collection-interval": "10s",
        "retention": "30d",
        "dashboards": [
          "legal-ai-overview",
          "service-performance",
          "message-queue-metrics",
          "gpu-utilization",
          "workflow-execution"
        ]
      },
      "alerting": {
        "rules": [
          {
            "name": "service-down",
            "condition": "health_check_failures > 3",
            "severity": "critical",
            "notification": "immediate"
          },
          {
            "name": "high-latency",
            "condition": "response_time > 1000ms",
            "severity": "warning",
            "notification": "delayed"
          },
          {
            "name": "memory-usage",
            "condition": "memory_usage > 80%",
            "severity": "warning",
            "notification": "delayed"
          }
        ]
      }
    },
    "configuration": {
      "environment-variables": {
        "LEGAL_AI_ENV": "development",
        "LOG_LEVEL": "info",
        "NATS_URL": "nats://localhost:4222",
        "POSTGRES_URL": "postgresql://legal_admin:123456@localhost:5432/legal_ai_db",
        "QDRANT_URL": "http://localhost:6333",
        "OLLAMA_URL": "http://localhost:11434",
        "ELASTICSEARCH_URL": "http://localhost:9200"
      },
      "feature-flags": {
        "gpu-acceleration": true,
        "quic-protocol": true,
        "windows-services": true,
        "distributed-tracing": true,
        "auto-scaling": false
      }
    },
    "deployment": {
      "startup-order": [
        "elk-stack",
        "nats",
        "windows-services",
        "kratos",
        "node-cluster",
        "webgpu-engine",
        "xstate-orchestrator",
        "quic-gateway"
      ],
      "graceful-shutdown-timeout": "30s",
      "restart-policy": "on-failure",
      "health-check-grace-period": "60s"
    }
  }
}