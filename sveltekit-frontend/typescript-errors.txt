
> prosecutor-web-frontend@0.0.1 check
> svelte-kit sync && svelte-check --tsconfig ./tsconfig.json


====================================
Loading svelte-check in workspace: c:\Users\james\Desktop\web-app\sveltekit-frontend
Getting Svelte diagnostics...

node.exe : 9:57:12 PM [vite-plugin-svelte] WARNING: The 
following packages have a svelte field in their package.json 
but no exports condition for svelte.
At C:\Program Files\nodejs\npm.ps1:29 char:3
+   & $NODE_EXE $NPM_CLI_JS $args
+   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (9:57:12 PM [vit... 
   ion for svelte.:String) [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError
 

svelte-grid-responsive@1.2.4
svelte-infinite-scroll@2.0.1

Please see https://github.com/sveltejs/vite-plugin-svelte/blob/m
ain/docs/faq.md#missing-exports-condition for details.
9:57:12 PM [vite-plugin-svelte] Option "experimental.inspector" 
is no longer experimental and has moved to "inspector". Please 
update your Svelte or Vite config.
c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\ui\modal\Modal.svelte[39m:63:5
[33mWarn[39m: Elements with the 'dialog' interactive role must have a tabindex value
https://svelte.dev/e/a11y_interactive_supports_focus (svelte)
[36m    <!-- Modal -->
    [35m<div
      class="bg-white rounded-lg shadow-xl w-full {sizeClass} max-h-[90vh] overflow-hidden"
      transition:fly={{ y: 50, duration: 300 }}
      on:click|stopPropagation
      on:keydown|stopPropagation
      role="dialog"
      aria-modal="true"
      aria-labelledby={title ? 'modal-title' : undefined}
    >
      <!-- Header -->
      {#if title || closable}
        <div
          class="flex items-center justify-between p-4 border-b border-gray-200"
        >
          {#if title}
            <h2 id="modal-title" class="text-lg font-semibold text-gray-900">{title}</h2>
          {:else}
            <div></div>
          {/if}

          {#if closable}
            <button
              on:click={() => close()}
              class="p-1 text-gray-400 hover:text-gray-600 hover:bg-gray-100 rounded focus:outline-none focus:ring-2 focus:ring-blue-500"
            >
              <X class="w-5 h-5" />
            </button>
          {/if}
        </div>
      {/if}

      <!-- Content -->
      <div class="overflow-y-auto max-h-[calc(90vh-80px)]">
        <slot />
      </div>
    </div>[36m
  </div>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\hooks.server.ts[39m:40:23
[31mError[39m: Property 'createdAt' does not exist on type 'User'. 
[36m      emailVerified: Boolean(user.emailVerified),
      createdAt: user.[35mcreatedAt[36m ? new Date(user.createdAt) : new Date(),
      updatedAt: user.updatedAt ? new Date(user.updatedAt) : new Date(),
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\hooks.server.ts[39m:40:49
[31mError[39m: Property 'createdAt' does not exist on type 'User'. 
[36m      emailVerified: Boolean(user.emailVerified),
      createdAt: user.createdAt ? new Date(user.[35mcreatedAt[36m) : new Date(),
      updatedAt: user.updatedAt ? new Date(user.updatedAt) : new Date(),
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\hooks.server.ts[39m:41:23
[31mError[39m: Property 'updatedAt' does not exist on type 'User'. 
[36m      createdAt: user.createdAt ? new Date(user.createdAt) : new Date(),
      updatedAt: user.[35mupdatedAt[36m ? new Date(user.updatedAt) : new Date(),
    };
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\hooks.server.ts[39m:41:49
[31mError[39m: Property 'updatedAt' does not exist on type 'User'. 
[36m      createdAt: user.createdAt ? new Date(user.createdAt) : new Date(),
      updatedAt: user.updatedAt ? new Date(user.[35mupdatedAt[36m) : new Date(),
    };
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\ui\ModalManager.svelte[39m:107:26
[31mError[39m: This expression is not callable.
  Type 'void' has no call signatures. (ts)
[36m		class="fixed inset-0 z-50 flex items-center justify-center p-4"
		on:click={() => (e) => [35mhandleBackdropClick(e, modal)[36m()}
		on:keydown={(e) => handleKeydown(e, modal)}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\stores\saved-notes.ts[39m:4:18
[31mError[39m: Cannot find module 'fuse' or its corresponding type declarations. 
[36mimport { set, get, del, keys } from 'idb-keyval';
import Fuse from [35m"fuse"[36m;

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\config\local-llm.ts[39m:149:21
[31mError[39m: Argument of type '{ name: string; pid: number | undefined; url: string; }' is not assignable to parameter of type 'never'. 
[36m      
      services.push([35m{
        name: 'Ollama',
        pid: ollamaProcess.pid,
        url: LOCAL_LLM_PATHS.ollama.baseUrl
      }[36m);
      
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\session.ts[39m:33:35
[31mError[39m: Type 'import("c:/Users/james/Desktop/web-app/sveltekit-frontend/src/lib/server/db/queries").User' is not assignable to type 'import("c:/Users/james/Desktop/web-app/sveltekit-frontend/src/lib/server/session").User'.
  Types of property 'name' are incompatible.
    Type 'string | null' is not assignable to type 'string'.
      Type 'null' is not assignable to type 'string'. 
[36m                };
                return { session, [35muser[36m };
            }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\services\ai-service.ts[39m:261:24
[31mError[39m: Argument of type '{ id: string; embedding: number[] | number[][]; classification: string; summary: string; }' is not assignable to parameter of type 'never'. 
[36m
          results.push([35m{
            id: doc.id,
            embedding: embedding,
            classification: classification,
            summary: summary,
          }[36m);
        } catch (error) {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\services\ai-service.ts[39m:268:24
[31mError[39m: Argument of type '{ id: string; embedding: never[]; error: string; }' is not assignable to parameter of type 'never'. 
[36m        } catch (error) {
          results.push([35m{
            id: doc.id,
            embedding: [],
            error: error instanceof Error ? error.message : "Processing failed",
          }[36m);
        }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\services\ai-service.ts[39m:290:24
[31mError[39m: Argument of type '{ id: string; embedding: number[]; summary: string; }' is not assignable to parameter of type 'never'. 
[36m
          results.push([35m{
            id: doc.id,
            embedding,
            summary,
          }[36m);
        } catch (error) {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\services\ai-service.ts[39m:296:24
[31mError[39m: Argument of type '{ id: string; embedding: never[]; error: string; }' is not assignable to parameter of type 'never'. 
[36m        } catch (error) {
          results.push([35m{
            id: doc.id,
            embedding: [],
            error: error instanceof Error ? error.message : "Unknown error",
          }[36m);
        }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\services\ai-service.ts[39m:364:9
[31mError[39m: Cannot find name 'env'. 
[36m    // Check Ollama availability
    if ([35menv[36m.OLLAMA_URL) {
      return "ollama";
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\services\ai-service.ts[39m:409:10
[31mError[39m: Cannot find name 'env'. 
[36m  private async generateOpenAIEmbeddings(texts: string[]): Promise<number[][]> {
    if (![35menv[36m.OPENAI_API_KEY) {
      throw new Error("OpenAI API key not configured");
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\services\ai-service.ts[39m:416:34
[31mError[39m: Cannot find name 'env'. 
[36m      headers: {
        Authorization: `Bearer ${[35menv[36m.OPENAI_API_KEY}`,
        "Content-Type": "application/json",
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\services\ai-service.ts[39m:438:10
[31mError[39m: Cannot find name 'env'. 
[36m  ): Promise<string> {
    if (![35menv[36m.OPENAI_API_KEY) {
      throw new Error("OpenAI API key not configured");
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\services\ai-service.ts[39m:445:34
[31mError[39m: Cannot find name 'env'. 
[36m      headers: {
        Authorization: `Bearer ${[35menv[36m.OPENAI_API_KEY}`,
        "Content-Type": "application/json",
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\services\ai-service.ts[39m:469:23
[31mError[39m: Cannot find name 'env'. 
[36m  ): Promise<string> {
    const ollamaUrl = [35menv[36m.OLLAMA_URL || "http://localhost:11434";

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\services\ai-service.ts[39m:475:16
[31mError[39m: Cannot find name 'env'. 
[36m      body: JSON.stringify({
        model: [35menv[36m.OLLAMA_MODEL || "llama2",
        prompt,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\services\ai-service.ts[39m:508:23
[31mError[39m: Argument of type 'string' is not assignable to parameter of type 'never'. 
[36m      if (matches) {
        entities.push([35m...matches.map((match) => `${type}: ${match}`)[36m);
      }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\ai\embeddings-enhanced.ts[39m:145:5
[31mError[39m: Type '"local" | "openai" | "legal-bert"' is not assignable to type 'EmbeddingProvider'.
  Type '"local"' is not assignable to type 'EmbeddingProvider'. 
[36m  if (requested && requested !== "auto") {
    [35mreturn[36m requested;
  }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\ai\embeddings-enhanced.ts[39m:221:7
[31mError[39m: Type '{ classification: any; keyEntities: string[]; similarity: number; summary: string; riskAssessment: string; }' is not assignable to type 'null'. 
[36m    try {
      [35mclassification[36m = await aiService.analyzeLegalDocument(documentText);
      confidence = classification.similarity || 0.8;
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\ai\embeddings-enhanced.ts[39m:222:20
[31mError[39m: 'classification' is possibly 'null'. 
[36m      classification = await aiService.analyzeLegalDocument(documentText);
      confidence = [35mclassification[36m.similarity || 0.8;
    } catch (error) {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\ai\embeddings-enhanced.ts[39m:251:7
[31mError[39m: Type '"tauri-legal-bert"' is not assignable to type '"auto" | "local" | "openai" | "legal-bert" | undefined'. 
[36m    const embeddings = (await generateEnhancedEmbedding([doc1, doc2], {
      [35mprovider[36m: "tauri-legal-bert",
      legalDomain: true,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\ai\embeddings.ts[39m:170:9
[31mError[39m: Object literal may only specify known properties, and 'titleEmbedding' does not exist in type '{ title?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; caseNumber?: string | SQL<...> | PgColumn<...> | undefined; ... 20 more ...; closedAt?: Date | ... 3 more ... | undefined; }'. 
[36m      .set({
        [35mtitleEmbedding[36m: JSON.stringify(titleEmbedding),
        descriptionEmbedding: JSON.stringify(descriptionEmbedding),
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\ai\embeddings.ts[39m:231:9
[31mError[39m: Object literal may only specify known properties, and 'titleEmbedding' does not exist in type '{ title?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; evidenceType?: string | SQL<...> | PgColumn<...> | undefined; ... 26 more ...; uploadedAt?: Date | ... 2 more ... | undefined; }'. 
[36m      .set({
        [35mtitleEmbedding[36m: JSON.stringify(titleEmbedding),
        descriptionEmbedding: JSON.stringify(descriptionEmbedding),
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\database\vector-schema.ts[39m:26:5
[31mError[39m: No overload matches this call.
  The last overload gave the following error.
    Object literal may only specify known properties, and 'id' does not exist in type '(columnTypes: { bigint: { <TMode extends PgBigIntConfig["mode"]>(config: PgBigIntConfig<TMode>): TMode extends "number" ? PgBigInt53BuilderInitial<""> : PgBigInt64BuilderInitial<...>; <TName extends string, TMode extends PgBigIntConfig["mode"]>(name: TName, config: PgBigIntConfig<...>): TMode extends "number" ? PgBi...'. 
[36m  {
    [35mid[36m: uuid("id")
      .primaryKey()
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\database\vector-schema.ts[39m:52:5
[31mError[39m: No overload matches this call.
  The last overload gave the following error.
    Object literal may only specify known properties, and 'id' does not exist in type '(columnTypes: { bigint: { <TMode extends PgBigIntConfig["mode"]>(config: PgBigIntConfig<TMode>): TMode extends "number" ? PgBigInt53BuilderInitial<""> : PgBigInt64BuilderInitial<...>; <TName extends string, TMode extends PgBigIntConfig["mode"]>(name: TName, config: PgBigIntConfig<...>): TMode extends "number" ? PgBi...'. 
[36m  {
    [35mid[36m: uuid("id")
      .primaryKey()
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\database\vector-schema.ts[39m:76:5
[31mError[39m: No overload matches this call.
  The last overload gave the following error.
    Object literal may only specify known properties, and 'id' does not exist in type '(columnTypes: { bigint: { <TMode extends PgBigIntConfig["mode"]>(config: PgBigIntConfig<TMode>): TMode extends "number" ? PgBigInt53BuilderInitial<""> : PgBigInt64BuilderInitial<...>; <TName extends string, TMode extends PgBigIntConfig["mode"]>(name: TName, config: PgBigIntConfig<...>): TMode extends "number" ? PgBi...'. 
[36m  {
    [35mid[36m: uuid("id")
      .primaryKey()
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\database\vector-schema.ts[39m:106:5
[31mError[39m: No overload matches this call.
  The last overload gave the following error.
    Object literal may only specify known properties, and 'id' does not exist in type '(columnTypes: { bigint: { <TMode extends PgBigIntConfig["mode"]>(config: PgBigIntConfig<TMode>): TMode extends "number" ? PgBigInt53BuilderInitial<""> : PgBigInt64BuilderInitial<...>; <TName extends string, TMode extends PgBigIntConfig["mode"]>(name: TName, config: PgBigIntConfig<...>): TMode extends "number" ? PgBi...'. 
[36m  {
    [35mid[36m: uuid("id")
      .primaryKey()
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\database\vector-schema.ts[39m:133:5
[31mError[39m: No overload matches this call.
  The last overload gave the following error.
    Object literal may only specify known properties, and 'id' does not exist in type '(columnTypes: { bigint: { <TMode extends PgBigIntConfig["mode"]>(config: PgBigIntConfig<TMode>): TMode extends "number" ? PgBigInt53BuilderInitial<""> : PgBigInt64BuilderInitial<...>; <TName extends string, TMode extends PgBigIntConfig["mode"]>(name: TName, config: PgBigIntConfig<...>): TMode extends "number" ? PgBi...'. 
[36m  {
    [35mid[36m: uuid("id")
      .primaryKey()
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\db\seed.ts[39m:569:8
[31mError[39m: Declaration or statement expected. 
[36m  return await seedDatabase()
      }[35m)[36m
      .onConflictDoNothing();
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\db\seed.ts[39m:570:7
[31mError[39m: Declaration or statement expected. 
[36m      })
      [35m.[36monConflictDoNothing();

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\db\seed.ts[39m:621:1
[31mError[39m: Declaration or statement expected. 
[36m
[35m}[36m

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\db\seed.ts[39m:13:8
[31mError[39m: '"./unified-schema"' has no exported member named 'UserSettings'. Did you mean 'UserSettingsExt'? 
[36m  savedCitations,
  type [35mUserSettings[36m,
  UserSettingsSchema,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\db\seed.ts[39m:15:8
[31mError[39m: '"./unified-schema"' has no exported member named 'CaseMetadata'. Did you mean 'CaseMetadataType'? 
[36m  UserSettingsSchema,
  type [35mCaseMetadata[36m,
  CaseMetadataSchema,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\db\seed.ts[39m:17:8
[31mError[39m: '"./unified-schema"' has no exported member named 'EvidenceMetadata'. Did you mean 'EvidenceMetadataType'? 
[36m  CaseMetadataSchema,
  type [35mEvidenceMetadata[36m,
  EvidenceMetadataSchema
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\db\seed.ts[39m:439:44
[31mError[39m: No overload matches this call.
  Overload 1 of 2, '(value: { title: string | SQL<unknown> | Placeholder<string, any>; content: string | SQL<unknown> | Placeholder<string, any>; status?: string | SQL<unknown> | Placeholder<...> | undefined; ... 18 more ...; readingTime?: number | ... 2 more ... | undefined; }): PgInsertBase<...>', gave the following error.
    Argument of type '{ id: string; caseId: string; title: string; content: string; documentType: string; status: string; authorId: string; metadata: { author: string; version: string; status: string; tags: string[]; wordCount: number; estimatedReadTime: number; }; isPublic: boolean; tags: string[]; }[]' is not assignable to parameter of type '{ title: string | SQL<unknown> | Placeholder<string, any>; content: string | SQL<unknown> | Placeholder<string, any>; status?: string | SQL<unknown> | Placeholder<...> | undefined; ... 18 more ...; readingTime?: number | ... 2 more ... | undefined; }'.
      Type '{ id: string; caseId: string; title: string; content: string; documentType: string; status: string; authorId: string; metadata: { author: string; version: string; status: string; tags: string[]; wordCount: number; estimatedReadTime: number; }; isPublic: boolean; tags: string[]; }[]' is missing the following properties from type '{ title: string | SQL<unknown> | Placeholder<string, any>; content: string | SQL<unknown> | Placeholder<string, any>; status?: string | SQL<unknown> | Placeholder<...> | undefined; ... 18 more ...; readingTime?: number | ... 2 more ... | undefined; }': title, content
  Overload 2 of 2, '(values: { title: string | SQL<unknown> | Placeholder<string, any>; content: string | SQL<unknown> | Placeholder<string, any>; status?: string | SQL<unknown> | Placeholder<...> | undefined; ... 18 more ...; readingTime?: number | ... 2 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Argument of type '{ id: string; caseId: string; title: string; content: string; documentType: string; status: string; authorId: string; metadata: { author: string; version: string; status: string; tags: string[]; wordCount: number; estimatedReadTime: number; }; isPublic: boolean; tags: string[]; }[]' is not assignable to parameter of type '{ title: string | SQL<unknown> | Placeholder<string, any>; content: string | SQL<unknown> | Placeholder<string, any>; status?: string | SQL<unknown> | Placeholder<...> | undefined; ... 18 more ...; readingTime?: number | ... 2 more ... | undefined; }[]'.
      Type '{ id: string; caseId: string; title: string; content: string; documentType: string; status: string; authorId: string; metadata: { author: string; version: string; status: string; tags: string[]; wordCount: number; estimatedReadTime: number; }; isPublic: boolean; tags: string[]; }' is not assignable to type '{ title: string | SQL<unknown> | Placeholder<string, any>; content: string | SQL<unknown> | Placeholder<string, any>; status?: string | SQL<unknown> | Placeholder<...> | undefined; ... 18 more ...; readingTime?: number | ... 2 more ... | undefined; }'.
        Types of property 'metadata' are incompatible.
          Type '{ author: string; version: string; status: string; tags: string[]; wordCount: number; estimatedReadTime: number; }' is not assignable to type 'SQL<unknown> | { confidentialityLevel: "public" | "restricted" | "confidential"; keywords: string[]; customFields: Record<string, unknown>; jurisdiction?: string | undefined; template?: string | undefined; courtLevel?: string | undefined; } | Placeholder<...> | undefined'. 
[36m    console.log("≡ƒôä Inserting legal documents...");
    await db.insert(legalDocuments).values([35msampleLegalDocuments[36m);

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\db\seed.ts[39m:447:44
[31mError[39m: No overload matches this call.
  Overload 1 of 2, '(value: { citationData: SQL<unknown> | { type: "case" | "statute" | "regulation"; id: string; source: string; text: string; page?: number | undefined; relevanceScore?: number | undefined; } | Placeholder<...>; ... 13 more ...; lastUsedAt?: Date | ... 3 more ... | undefined; }): PgInsertBase<...>', gave the following error.
    Argument of type '({ id: string; userId: string; caseId: string; citation: string; context: string; tags: string[]; category: string; jurisdiction: string; relevanceScore: number; metadata: { court: string; year: number; ... 4 more ...; usc?: undefined; }; } | { ...; })[]' is not assignable to parameter of type '{ citationData: SQL<unknown> | { type: "case" | "statute" | "regulation"; id: string; source: string; text: string; page?: number | undefined; relevanceScore?: number | undefined; } | Placeholder<string, any>; ... 13 more ...; lastUsedAt?: Date | ... 3 more ... | undefined; }'.
      Property 'citationData' is missing in type '({ id: string; userId: string; caseId: string; citation: string; context: string; tags: string[]; category: string; jurisdiction: string; relevanceScore: number; metadata: { court: string; year: number; ... 4 more ...; usc?: undefined; }; } | { ...; })[]' but required in type '{ citationData: SQL<unknown> | { type: "case" | "statute" | "regulation"; id: string; source: string; text: string; page?: number | undefined; relevanceScore?: number | undefined; } | Placeholder<string, any>; ... 13 more ...; lastUsedAt?: Date | ... 3 more ... | undefined; }'.
  Overload 2 of 2, '(values: { citationData: SQL<unknown> | { type: "case" | "statute" | "regulation"; id: string; source: string; text: string; page?: number | undefined; relevanceScore?: number | undefined; } | Placeholder<...>; ... 13 more ...; lastUsedAt?: Date | ... 3 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Argument of type '({ id: string; userId: string; caseId: string; citation: string; context: string; tags: string[]; category: string; jurisdiction: string; relevanceScore: number; metadata: { court: string; year: number; ... 4 more ...; usc?: undefined; }; } | { ...; })[]' is not assignable to parameter of type '{ citationData: SQL<unknown> | { type: "case" | "statute" | "regulation"; id: string; source: string; text: string; page?: number | undefined; relevanceScore?: number | undefined; } | Placeholder<string, any>; ... 13 more ...; lastUsedAt?: Date | ... 3 more ... | undefined; }[]'.
      Type '{ id: string; userId: string; caseId: string; citation: string; context: string; tags: string[]; category: string; jurisdiction: string; relevanceScore: number; metadata: { court: string; year: number; ... 4 more ...; usc?: undefined; }; } | { ...; }' is not assignable to type '{ citationData: SQL<unknown> | { type: "case" | "statute" | "regulation"; id: string; source: string; text: string; page?: number | undefined; relevanceScore?: number | undefined; } | Placeholder<string, any>; ... 13 more ...; lastUsedAt?: Date | ... 3 more ... | undefined; }'.
        Property 'citationData' is missing in type '{ id: string; userId: string; caseId: string; citation: string; context: string; tags: string[]; category: string; jurisdiction: string; relevanceScore: number; metadata: { court: string; year: number; ... 4 more ...; usc?: undefined; }; }' but required in type '{ citationData: SQL<unknown> | { type: "case" | "statute" | "regulation"; id: string; source: string; text: string; page?: number | undefined; relevanceScore?: number | undefined; } | Placeholder<string, any>; ... 13 more ...; lastUsedAt?: Date | ... 3 more ... | undefined; }'. 
[36m    console.log("≡ƒôÜ Inserting saved citations...");
    await db.insert(savedCitations).values([35msampleCitations[36m);

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\db\seed.ts[39m:570:8
[31mError[39m: Cannot find name 'onConflictDoNothing'. 
[36m      })
      .[35monConflictDoNothing[36m();

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\db\seed.ts[39m:576:14
[31mError[39m: Cannot find name 'eq'. 
[36m      .from(users)
      .where([35meq[36m(users.email, "admin@example.com"))
      .limit(1);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\db\seed.ts[39m:600:16
[31mError[39m: Cannot find name 'eq'. 
[36m        .from(cases)
        .where([35meq[36m(cases.caseNumber, "CASE-2024-001"))
        .limit(1);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\search\vector-search.ts[39m:4:14
[31mError[39m: Module '"$lib/server/db/index"' has no exported member 'isPostgreSQL'. 
[36mimport { browser } from "$app/environment";
import { db, [35misPostgreSQL[36m } from "$lib/server/db/index";
import { and, eq, or, sql } from "drizzle-orm";
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\search\vector-search.ts[39m:288:26
[31mError[39m: Untyped function calls may not accept type arguments. 
[36m    const cacheKey = `vector_search:${JSON.stringify({ query, ...options })}`;
    const cached = await [35mcache.get<VectorSearchResult[]>(cacheKey)[36m;
    if (cached) {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\services\embedding-service.ts[39m:46:54
[31mError[39m: 'error' is of type 'unknown'. 
[36m    console.error(`Error getting embedding from ${provider}:`, error);
    throw new Error(`Failed to generate embedding: ${[35merror[36m.message}`);
  }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\services\vector-service.ts[39m:178:11
[31mError[39m: This kind of expression is always truthy. 
[36m        metadata:
          [35m{
            contentType: contentType,
            caseId: options.caseId,
            ...options.metadata,
          }[36m || {},
      })
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\services\vector-service.ts[39m:181:24
[31mError[39m: Property 'metadata' does not exist on type 'EmbeddingOptions'. 
[36m            caseId: options.caseId,
            ...options.[35mmetadata[36m,
          } || {},
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\services\vector-service.ts[39m:205:8
[31mError[39m: No overload matches this call.
  Overload 1 of 2, '(value: { role: string | SQL<unknown> | Placeholder<string, any>; content: string | SQL<unknown> | Placeholder<string, any>; embedding: string | SQL<unknown> | Placeholder<...>; ... 4 more ...; metadata?: unknown; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'userId' does not exist in type '{ role: string | SQL<unknown> | Placeholder<string, any>; content: string | SQL<unknown> | Placeholder<string, any>; embedding: string | SQL<unknown> | Placeholder<...>; ... 4 more ...; metadata?: unknown; }'.
  Overload 2 of 2, '(values: { role: string | SQL<unknown> | Placeholder<string, any>; content: string | SQL<unknown> | Placeholder<string, any>; embedding: string | SQL<unknown> | Placeholder<...>; ... 4 more ...; metadata?: unknown; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'conversationId' does not exist in type '{ role: string | SQL<unknown> | Placeholder<string, any>; content: string | SQL<unknown> | Placeholder<string, any>; embedding: string | SQL<unknown> | Placeholder<...>; ... 4 more ...; metadata?: unknown; }[]'. 
[36m      .insert(chatEmbeddings)
      .[35mvalues[36m({
        conversationId,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\services\vector-service.ts[39m:236:8
[31mError[39m: No overload matches this call.
  Overload 1 of 2, '(value: { content: string | SQL<unknown> | Placeholder<string, any>; embedding: string | SQL<unknown> | Placeholder<string, any>; id?: string | SQL<unknown> | Placeholder<...> | undefined; createdAt?: Date | ... 2 more ... | undefined; metadata?: unknown; evidenceId?: string | ... 3 more ... | undefined; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'caseId' does not exist in type '{ content: string | SQL<unknown> | Placeholder<string, any>; embedding: string | SQL<unknown> | Placeholder<string, any>; id?: string | SQL<unknown> | Placeholder<...> | undefined; createdAt?: Date | ... 2 more ... | undefined; metadata?: unknown; evidenceId?: string | ... 3 more ... | undefined; }'.
  Overload 2 of 2, '(values: { content: string | SQL<unknown> | Placeholder<string, any>; embedding: string | SQL<unknown> | Placeholder<string, any>; id?: string | SQL<unknown> | Placeholder<...> | undefined; createdAt?: Date | ... 2 more ... | undefined; metadata?: unknown; evidenceId?: string | ... 3 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'evidenceId' does not exist in type '{ content: string | SQL<unknown> | Placeholder<string, any>; embedding: string | SQL<unknown> | Placeholder<string, any>; id?: string | SQL<unknown> | Placeholder<...> | undefined; createdAt?: Date | ... 2 more ... | undefined; metadata?: unknown; evidenceId?: string | ... 3 more ... | undefined; }[]'. 
[36m      .insert(evidenceVectors)
      .[35mvalues[36m({
        evidenceId,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\services\vector-service.ts[39m:282:20
[31mError[39m: Property 'rows' does not exist on type 'RowList<Record<string, unknown>[]>'. 
[36m
    return results.[35mrows[36m.map((row: any) => ({
      id: row.id,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\services\vector-service.ts[39m:327:20
[31mError[39m: Property 'rows' does not exist on type 'RowList<Record<string, unknown>[]>'. 
[36m
    return results.[35mrows[36m.map((row: any) => ({
      id: row.id,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\services\vector-service.ts[39m:353:20
[31mError[39m: Property 'rows' does not exist on type 'RowList<Record<string, unknown>[]>'. 
[36m
    return results.[35mrows[36m
      .reverse() // Return in chronological order
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\services\vector-service.ts[39m:430:25
[31mError[39m: Property 'ensureInitialized' does not exist on type 'OllamaService'. 
[36m    // Generate response using Ollama with enhanced context
    await ollamaService.[35mensureInitialized[36m();
    const response = await ollamaService.generateResponse(contextPrompt);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\services\vector-service.ts[39m:431:42
[31mError[39m: Property 'generateResponse' does not exist on type 'OllamaService'. 
[36m    await ollamaService.ensureInitialized();
    const response = await ollamaService.[35mgenerateResponse[36m(contextPrompt);

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\services\qdrant-service.ts[39m:110:7
[31mError[39m: Type '"ollama"' is not assignable to type '"local" | "nomic" | undefined'. 
[36m    const embedding = await vectorService.generateEmbedding(content, {
      [35mmodel[36m: 'ollama',
      caseId: metadata.caseId
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\services\qdrant-service.ts[39m:138:25
[31mError[39m: Property 'storeEvidenceVector' does not exist on type 'VectorService'. 
[36m    // Also store in pgvector for redundancy and complex queries
    await vectorService.[35mstoreEvidenceVector[36m({
      evidenceId,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\services\qdrant-service.ts[39m:176:7
[31mError[39m: Type '"ollama"' is not assignable to type '"local" | "nomic" | undefined'. 
[36m    const queryEmbedding = await vectorService.generateEmbedding(query, {
      [35mmodel[36m: 'ollama',
      caseId
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\services\qdrant-service.ts[39m:242:25
[31mError[39m: Property 'updateEvidenceMetadata' does not exist on type 'VectorService'. 
[36m    // Also update pgvector record
    await vectorService.[35mupdateEvidenceMetadata[36m(evidenceId, {
      tags: newTags,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\services\qdrant-service.ts[39m:267:44
[31mError[39m: Property 'generateResponse' does not exist on type 'OllamaService'. 
[36m
      const response = await ollamaService.[35mgenerateResponse[36m(tagPrompt, {
        model: 'gemma3-legal',
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\services\qdrant-service.ts[39m:346:32
[31mError[39m: No overload matches this call.
  Overload 1 of 4, '(value: string | number | Date): Date', gave the following error.
    Argument of type '{}' is not assignable to parameter of type 'string | number | Date'.
  Overload 2 of 4, '(value: string | number): Date', gave the following error.
    Argument of type '{}' is not assignable to parameter of type 'string | number'. 
[36m    const recentActivity = evidencePoints
      .sort((a, b) => new Date([35mb.payload?.updatedAt || 0[36m).getTime() - new Date(a.payload?.updatedAt || 0).getTime())
      .slice(0, 5)
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\services\qdrant-service.ts[39m:346:80
[31mError[39m: No overload matches this call.
  Overload 1 of 4, '(value: string | number | Date): Date', gave the following error.
    Argument of type '{}' is not assignable to parameter of type 'string | number | Date'.
  Overload 2 of 4, '(value: string | number): Date', gave the following error.
    Argument of type '{}' is not assignable to parameter of type 'string | number'. 
[36m    const recentActivity = evidencePoints
      .sort((a, b) => new Date(b.payload?.updatedAt || 0).getTime() - new Date([35ma.payload?.updatedAt || 0[36m).getTime())
      .slice(0, 5)
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\services\qdrant-service.ts[39m:350:18
[31mError[39m: 'point.payload.content' is of type 'unknown'. 
[36m        id: point.id as string,
        content: [35mpoint.payload?.content[36m.substring(0, 100) + '...' || '',
        timestamp: point.payload?.updatedAt || ''
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\services\qdrant-service.ts[39m:358:7
[31mError[39m: Type '{ id: string; content: string; timestamp: {}; }[]' is not assignable to type '{ id: string; content: string; timestamp: string; }[]'.
  Type '{ id: string; content: string; timestamp: {}; }' is not assignable to type '{ id: string; content: string; timestamp: string; }'.
    Types of property 'timestamp' are incompatible.
      Type '{}' is not assignable to type 'string'. 
[36m      topTags,
      [35mrecentActivity[36m
    };
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\services\qdrant-service.ts[39m:370:25
[31mError[39m: Property 'deleteEvidenceVector' does not exist on type 'VectorService'. 
[36m    // Also delete from pgvector
    await vectorService.[35mdeleteEvidenceVector[36m(evidenceId);
  }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\server\services\vector.service.ts[39m:166:39
[31mError[39m: Property 'where' does not exist on type 'Omit<PgSelectBase<"document_embeddings", { id: PgColumn<{ name: "id"; tableName: "document_embeddings"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 4 more ...; similarity: SQL<...>; }, ... 5 more ....'. 
[36m        if (documentType) {
            searchQuery = searchQuery.[35mwhere[36m(eq(documentEmbeddings.documentType, documentType));
        }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\services\aiSummarizationService.ts[39m:453:26
[31mError[39m: Argument of type '{ type: string; attrs: { level: number; }; content: { type: string; text: string; }[]; }' is not assignable to parameter of type 'never'. 
[36m        // Add heading
        doc.content.push([35m{
          type: 'heading',
          attrs: { level: 2 },
          content: [{ type: 'text', text: section.replace(/_/g, ' ').toUpperCase() }]
        }[36m);

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\services\aiSummarizationService.ts[39m:460:26
[31mError[39m: Argument of type '{ type: string; content: { type: string; text: string; }[]; }' is not assignable to parameter of type 'never'. 
[36m        // Add content
        doc.content.push([35m{
          type: 'paragraph',
          content: [{ type: 'text', text: String(text) }]
        }[36m);
      }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\services\aiSummarizationService.ts[39m:466:24
[31mError[39m: Argument of type '{ type: string; content: { type: string; text: string; }[]; }' is not assignable to parameter of type 'never'. 
[36m    } else {
      doc.content.push([35m{
        type: 'paragraph',
        content: [{ type: 'text', text: String(content) }]
      }[36m);
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\services\aiSummarizationService.ts[39m:644:21
[31mError[39m: Argument of type '{ id: `${string}-${string}-${string}-${string}-${string}`; type: string; position: { x: number; y: number; }; size: { width: number; height: number; }; content: { title: string; text: string; }; style: { backgroundColor: string; borderColor: string; }; connections: string[]; }' is not assignable to parameter of type 'CanvasElement'.
  Types of property 'type' are incompatible.
    Type 'string' is not assignable to type '"text" | "evidence" | "connection" | "note" | "timeline"'. 
[36m      
      elements.push([35melement[36m);
    });
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\services\local-llm-manager.ts[39m:256:5
[31mError[39m: Type '{ isDesktop: false | { convertFileSrc: (src: string, protocol: string) => string; }; hasGPU: boolean; availableMemory: number; supportedModels: string[]; }' is not assignable to type '{ isDesktop: boolean; hasGPU: boolean; availableMemory: number; supportedModels: string[]; }'.
  Types of property 'isDesktop' are incompatible.
    Type 'false | { convertFileSrc: (src: string, protocol: string) => string; }' is not assignable to type 'boolean'.
      Type '{ convertFileSrc: (src: string, protocol: string) => string; }' is not assignable to type 'boolean'. 
[36m
    [35mreturn[36m systemInfo;
  }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\stores\ai-store.ts[39m:100:5
[31mError[39m: Object literal may only specify known properties, and 'modelName' does not exist in type 'Gemma3Config'. 
[36m  gemma3Config: {
    [35mmodelName[36m: 'gemma2:2b',
    temperature: 0.7,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\stores\ai-store.ts[39m:268:29
[31mError[39m: Argument of type '(conversation: AIConversationState) => { id: string; messages: ({ id: string; role: "system" | "user" | "assistant"; content: string; timestamp: number; sources?: { ...; }[] | undefined; metadata?: { ...; } | undefined; } | { ...; } | { ...; })[]; isActive: true; lastUpdated: number; }' is not assignable to parameter of type '(value: AIConversationState) => AIConversationState'.
  Call signature return types '{ id: string; messages: ({ id: string; role: "system" | "user" | "assistant"; content: string; timestamp: number; sources?: { id: string; title: string; content: string; score: number; type: string; }[] | undefined; metadata?: { ...; } | undefined; } | { ...; } | { ...; })[]; isActive: true; lastUpdated: number; }' and 'AIConversationState' are incompatible.
    The types of 'messages' are incompatible between these types.
      Type '({ id: string; role: "system" | "user" | "assistant"; content: string; timestamp: number; sources?: { id: string; title: string; content: string; score: number; type: string; }[] | undefined; metadata?: { ...; } | undefined; } | { ...; } | { ...; })[]' is not assignable to type '{ id: string; role: "system" | "user" | "assistant"; content: string; timestamp: number; sources?: { id: string; title: string; content: string; score: number; type: string; }[] | undefined; metadata?: { ...; } | undefined; }[]'.
        Type '{ id: string; role: "system" | "user" | "assistant"; content: string; timestamp: number; sources?: { id: string; title: string; content: string; score: number; type: string; }[] | undefined; metadata?: { ...; } | undefined; } | { ...; } | { ...; }' is not assignable to type '{ id: string; role: "system" | "user" | "assistant"; content: string; timestamp: number; sources?: { id: string; title: string; content: string; score: number; type: string; }[] | undefined; metadata?: { ...; } | undefined; }'.
          Type '{ id: string; role: "assistant"; content: any; timestamp: number; sources: any; metadata: { provider: any; model: any; confidence: number | undefined; executionTime: any; fromCache: any; }; }' is not assignable to type '{ id: string; role: "system" | "user" | "assistant"; content: string; timestamp: number; sources?: { id: string; title: string; content: string; score: number; type: string; }[] | undefined; metadata?: { ...; } | undefined; }'.
            The types of 'metadata.confidence' are incompatible between these types.
              Type 'number | undefined' is not assignable to type 'number'.
                Type 'undefined' is not assignable to type 'number'. 
[36m      // Add to conversation
      aiConversation.update([35mconversation => {[36m
        const messageId = `msg_${Date.now()}`;
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\stores\ai-store.ts[39m:279:31
[31mError[39m: Property 'answer' does not exist on type 'AIResponse'. 
[36m          role: 'assistant' as const,
          content: aiResponse.[35manswer[36m,
          timestamp: Date.now(),
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\stores\ai-store.ts[39m:281:31
[31mError[39m: Property 'sources' does not exist on type 'AIResponse'. 
[36m          timestamp: Date.now(),
          sources: aiResponse.[35msources[36m,
          metadata: {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\stores\ai-store.ts[39m:283:34
[31mError[39m: Property 'provider' does not exist on type 'AIResponse'. 
[36m          metadata: {
            provider: aiResponse.[35mprovider[36m,
            model: aiResponse.model,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\stores\ai-store.ts[39m:284:31
[31mError[39m: Property 'model' does not exist on type 'AIResponse'. 
[36m            provider: aiResponse.provider,
            model: aiResponse.[35mmodel[36m,
            confidence: aiResponse.confidence,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\stores\ai-store.ts[39m:286:39
[31mError[39m: Property 'executionTime' does not exist on type 'AIResponse'. 
[36m            confidence: aiResponse.confidence,
            executionTime: aiResponse.[35mexecutionTime[36m,
            fromCache: aiResponse.fromCache
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\stores\ai-store.ts[39m:287:35
[31mError[39m: Property 'fromCache' does not exist on type 'AIResponse'. 
[36m            executionTime: aiResponse.executionTime,
            fromCache: aiResponse.[35mfromCache[36m
          }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\stores\ai-store.ts[39m:341:32
[31mError[39m: Argument of type '(history: ConversationHistory[]) => (ConversationHistory | { id: string; title: string; messages: { id: string; role: "system" | "user" | "assistant"; content: string; timestamp: number; sources?: { ...; }[] | undefined; metadata?: { ...; } | undefined; }[]; timestamp: number; metadata: { ...; }; })[]' is not assignable to parameter of type '(value: ConversationHistory[]) => ConversationHistory[]'.
  Type '(ConversationHistory | { id: string; title: string; messages: { id: string; role: "system" | "user" | "assistant"; content: string; timestamp: number; sources?: { id: string; title: string; content: string; score: number; type: string; }[] | undefined; metadata?: { ...; } | undefined; }[]; timestamp: number; metadat...' is not assignable to type 'ConversationHistory[]'.
    Type 'ConversationHistory | { id: string; title: string; messages: { id: string; role: "system" | "user" | "assistant"; content: string; timestamp: number; sources?: { id: string; title: string; content: string; score: number; type: string; }[] | undefined; metadata?: { ...; } | undefined; }[]; timestamp: number; metadata...' is not assignable to type 'ConversationHistory'.
      Type '{ id: string; title: string; messages: { id: string; role: "system" | "user" | "assistant"; content: string; timestamp: number; sources?: { id: string; title: string; content: string; score: number; type: string; }[] | undefined; metadata?: { ...; } | undefined; }[]; timestamp: number; metadata: { ...; }; }' is missing the following properties from type 'ConversationHistory': role, content 
[36m
    conversationHistory.update([35mhistory => {[36m
      const newHistory = [
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\stores\ai-store.ts[39m:370:31
[31mError[39m: Property 'messages' does not exist on type 'ConversationHistory'. 
[36m        id: historyItem.id,
        messages: historyItem.[35mmessages[36m,
        isActive: true,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\stores\autoTaggingMachine.ts[39m:62:48
[31mError[39m: Property 'message' does not exist on type '{}'. 
[36m          actions: assign({
            error: ({ event }) => event.error?.[35mmessage[36m || 'AI tagging failed',
            retryCount: ({ context }) => context.retryCount + 1
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\stores\autoTaggingMachine.ts[39m:122:5
[31mError[39m: Type '({ input }: { input: any; }) => Promise<any>' is not assignable to type 'ActorLogic<any, any, any, AnyActorSystem, any>'. 
[36m  actors: {
    [35mtagWithAI[36m: async ({ input }: { input: any }) => {
      const response = await fetch('/api/ai/tag', {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\stores\evidence-store.ts[39m:3:18
[31mError[39m: Cannot find module 'fuse' or its corresponding type declarations. 
[36mimport type { Writable } from 'svelte/store';
import Fuse from [35m"fuse"[36m;

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\utils\accessibility.ts[39m:404:42
[31mError[39m: Property 'name' does not exist on type 'HTMLElement'. 
[36m        errors.push(
          `Input ${element.id || element.[35mname[36m || "unknown"} is missing a label`
        );
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\utils\accessibility.ts[39m:420:51
[31mError[39m: Property 'name' does not exist on type 'HTMLElement'. 
[36m        errors.push(
          `Required field ${element.id || element.[35mname[36m || "unknown"} is missing proper indication`
        );
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\utils\data-export.ts[39m:572:32
[31mError[39m: Property 'blob' does not exist on type 'ExportResult'. 
[36m
  if (result.success && result.[35mblob[36m) {
    // Download the file
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\utils\data-export.ts[39m:574:44
[31mError[39m: Property 'blob' does not exist on type 'ExportResult'. 
[36m    // Download the file
    const url = URL.createObjectURL(result.[35mblob[36m);
    const a = document.createElement("a");
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\utils\database-sync.ts[39m:339:22
[31mError[39m: Argument of type '{ success: boolean; result: any; }' is not assignable to parameter of type 'never'. 
[36m        }
        results.push([35m{ success: true, result }[36m);
      } catch (error) {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\utils\database-sync.ts[39m:341:22
[31mError[39m: Argument of type '{ success: boolean; error: unknown; }' is not assignable to parameter of type 'never'. 
[36m      } catch (error) {
        results.push([35m{ success: false, error }[36m);
      }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\utils\fuzzy.ts[39m:1:18
[31mError[39m: Cannot find module 'fuse' or its corresponding type declarations. 
[36mimport Fuse from [35m"fuse"[36m;
import Loki from 'lokijs';
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\utils\loki-evidence.ts[39m:136:38
[31mError[39m: No overload matches this call.
  The last overload gave the following error.
    Argument of type '{ timeline: { updatedAt: string; createdAt?: string | undefined; collectedAt?: string; }; id: string; title: string; description: string; type: string; caseId: string; fileUrl?: string; metadata?: Record<string, any>; ... 5 more ...; meta: any; }' is not assignable to parameter of type 'LokiEvidence | LokiEvidence[]'.
      Type '{ timeline: { updatedAt: string; createdAt?: string | undefined; collectedAt?: string; }; id: string; title: string; description: string; type: string; caseId: string; fileUrl?: string; metadata?: Record<string, any>; ... 5 more ...; meta: any; }' is not assignable to type 'LokiEvidence'.
        The types of 'timeline.createdAt' are incompatible between these types.
          Type 'string | undefined' is not assignable to type 'string'.
            Type 'undefined' is not assignable to type 'string'. 
[36m      };
      this.evidenceCollection.update([35mupdated[36m);

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\+layout.ts[39m:15:23
[31mError[39m: Property 'session' does not exist on type '{ user: User | null; loginForm: SuperValidated<{ email: string; password: string; }, any, { email: string; password: string; }>; registerForm: SuperValidated<{ email: string; password: string; name: string; confirmPassword: string; role: "prosecutor" | ... 2 more ... | "analyst"; terms: "on"; }, any, { ...; }>; }'. 
[36m        user: data.user,
        session: data.[35msession[36m
    };
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\activities\+server.ts[39m:34:20
[31mError[39m: Argument of type 'SQL<unknown>' is not assignable to parameter of type 'never'. 
[36m    if (caseId) {
      filters.push([35meq(caseActivities.caseId, caseId)[36m);
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\activities\+server.ts[39m:39:20
[31mError[39m: Argument of type 'SQL<unknown>' is not assignable to parameter of type 'never'. 
[36m    if (activityType) {
      filters.push([35meq(caseActivities.activityType, activityType)[36m);
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\activities\+server.ts[39m:44:20
[31mError[39m: Argument of type 'SQL<unknown>' is not assignable to parameter of type 'never'. 
[36m    if (status) {
      filters.push([35meq(caseActivities.status, status)[36m);
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\activities\+server.ts[39m:49:20
[31mError[39m: Argument of type 'SQL<unknown>' is not assignable to parameter of type 'never'. 
[36m    if (priority) {
      filters.push([35meq(caseActivities.priority, priority)[36m);
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\activities\+server.ts[39m:54:20
[31mError[39m: Argument of type 'SQL<unknown>' is not assignable to parameter of type 'never'. 
[36m    if (assignedTo) {
      filters.push([35meq(caseActivities.assignedTo, assignedTo)[36m);
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\activities\+server.ts[39m:60:9
[31mError[39m: Argument of type 'SQL<unknown> | undefined' is not assignable to parameter of type 'never'.
  Type 'undefined' is not assignable to type 'never'. 
[36m      filters.push(
        [35mor(
          like(caseActivities.title, `%${search}%`),
          like(caseActivities.description, `%${search}%`)
        )[36m
      );
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\activities\+server.ts[39m:69:7
[31mError[39m: Type 'Omit<PgSelectBase<"case_activities", { id: PgColumn<{ name: "id"; tableName: "case_activities"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; ... 5 more ...; generated: undefined; }, {}, {}>; ... 14 more ...; updatedAt: PgColumn<...>...' is missing the following properties from type 'PgSelectBase<"case_activities", { id: PgColumn<{ name: "id"; tableName: "case_activities"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; ... 5 more ...; generated: undefined; }, {}, {}>; ... 14 more ...; updatedAt: PgColumn<...>; }, ...': config, joinsNotNullableMap, tableName, isPartialSelect, and 6 more. 
[36m    if (filters.length > 0) {
      [35mquery[36m = query.where(and(...filters));
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\activities\+server.ts[39m:82:5
[31mError[39m: Type 'Omit<PgSelectBase<"case_activities", { id: PgColumn<{ name: "id"; tableName: "case_activities"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; ... 5 more ...; generated: undefined; }, {}, {}>; ... 14 more ...; updatedAt: PgColumn<...>...' is missing the following properties from type 'PgSelectBase<"case_activities", { id: PgColumn<{ name: "id"; tableName: "case_activities"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; ... 5 more ...; generated: undefined; }, {}, {}>; ... 14 more ...; updatedAt: PgColumn<...>; }, ...': config, joinsNotNullableMap, tableName, isPartialSelect, and 6 more. 
[36m
    [35mquery[36m = query.orderBy(
      sortOrder === "asc" ? orderColumn : desc(orderColumn)
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\activities\+server.ts[39m:87:5
[31mError[39m: Type 'Omit<PgSelectBase<"case_activities", { id: PgColumn<{ name: "id"; tableName: "case_activities"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; ... 5 more ...; generated: undefined; }, {}, {}>; ... 14 more ...; updatedAt: PgColumn<...>...' is missing the following properties from type 'PgSelectBase<"case_activities", { id: PgColumn<{ name: "id"; tableName: "case_activities"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; ... 5 more ...; generated: undefined; }, {}, {}>; ... 14 more ...; updatedAt: PgColumn<...>; }, ...': config, joinsNotNullableMap, tableName, isPartialSelect, and 7 more. 
[36m    // Add pagination
    [35mquery[36m = query.limit(limit).offset(offset);

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\activities\+server.ts[39m:94:7
[31mError[39m: Type 'Omit<PgSelectBase<"case_activities", { count: SQL<number>; }, "partial", Record<"case_activities", "not-null">, false, "where", { count: number; }[], { count: DrizzleTypeError<"You cannot reference this field without assigning it an alias first - use `.as(<alias>)`">; }>, "where">' is missing the following properties from type 'PgSelectBase<"case_activities", { count: SQL<number>; }, "partial", Record<"case_activities", "not-null">, false, never, { count: number; }[], { count: DrizzleTypeError<"You cannot reference this field without assigning it an alias first - use `.as(<alias>)`">; }>': config, joinsNotNullableMap, tableName, isPartialSelect, and 6 more. 
[36m    if (filters.length > 0) {
      [35mcountQuery[36m = countQuery.where(and(...filters));
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\ai\ask\+server.ts[39m:16:72
[31mError[39m: Property 'default' does not exist on type 'typeof import("c:/Users/james/Desktop/web-app/sveltekit-frontend/src/lib/server/search/vector-search")'. 
[36m  const vectorSearchModule = await import('../../../../lib/server/search/vector-search.js');
  vectorSearch = vectorSearchModule.vectorSearch || vectorSearchModule.[35mdefault[36m;
} catch (error) {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\ai\ask\+server.ts[39m:87:28
[31mError[39m: Untyped function calls may not accept type arguments. 
[36m    if (useCache) {
      const cached = await [35mcache.get<AIResponse>(cacheKey)[36m;
      if (cached) {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\ai\ask\+server.ts[39m:156:25
[31mError[39m: Property 'isAvailable' is private and only accessible within class 'OllamaService'. 
[36m      // Try Ollama Gemma3 first (web environment)
      if (ollamaService.[35misAvailable[36m()) {
        console.log('Using Ollama Gemma3 for inference');
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\ai\ask\+server.ts[39m:156:25
[31mError[39m: This expression is not callable.
  Type 'Boolean' has no call signatures. 
[36m      // Try Ollama Gemma3 first (web environment)
      if (ollamaService.[35misAvailable[36m()) {
        console.log('Using Ollama Gemma3 for inference');
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\ai\ask\+server.ts[39m:171:46
[31mError[39m: Property 'generateResponse' does not exist on type 'OllamaService'. 
[36m
        const response = await ollamaService.[35mgenerateResponse[36m(query, {
          model: 'gemma2:2b', // Default Gemma3 model
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\ai\ask\+server.ts[39m:292:13
[31mError[39m: Cannot find name 'isOllamaAvailable'. 
[36m  // Try Ollama first (local LLM)
  if (await [35misOllamaAvailable[36m()) {
    return generateOllamaResponse(query, context, conversationHistory);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\ai\history\+server.ts[39m:1:25
[31mError[39m: Cannot find module '$lib/db' or its corresponding type declarations. 
[36mimport { drizzle } from [35m"$lib/db"[36m;
import { aiHistory } from "$lib/db/schema/aiHistory";
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\ai\history\+server.ts[39m:25:31
[31mError[39m: Property 'eq' does not exist on type 'PgColumn<{ name: "user_id"; tableName: "ai_history"; dataType: "string"; columnType: "PgText"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>'. 
[36m      .from(aiHistory)
      .where(aiHistory.userId.[35meq[36m(userId));
    return json({ history });
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\ai\suggest\+server.ts[39m:37:23
[31mError[39m: Property 'ensureInitialized' does not exist on type 'OllamaService'. 
[36m		// Use the ollama service instance
		await ollamaService.[35mensureInitialized[36m();

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\ai\suggest\+server.ts[39m:44:42
[31mError[39m: Property 'generateResponse' does not exist on type 'OllamaService'. 
[36m		// Get response from Ollama
		const aiResponse = await ollamaService.[35mgenerateResponse[36m(enhancedPrompt, {
			temperature: getTemperatureForVibe(vibe),
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\ai\suggest\+server.ts[39m:155:16
[31mError[39m: Argument of type '{ type: string; text: string; data: { priority: string; }; }' is not assignable to parameter of type 'never'. 
[36m	if (response.toLowerCase().includes('highlight') || prompt.toLowerCase().includes('evidence')) {
		actions.push([35m{
			type: 'highlight',
			text: 'Mark important evidence',
			data: { priority: 'high' }
		}[36m);
	}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\ai\suggest\+server.ts[39m:163:16
[31mError[39m: Argument of type '{ type: string; text: string; data: { category: string; }; }' is not assignable to parameter of type 'never'. 
[36m	if (response.toLowerCase().includes('timeline') || prompt.toLowerCase().includes('timeline')) {
		actions.push([35m{
			type: 'annotation',
			text: 'Add timeline notes',
			data: { category: 'timeline' }
		}[36m);
	}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\ai\suggest\+server.ts[39m:171:16
[31mError[39m: Argument of type '{ type: string; text: string; data: { keywords: string[]; }; }' is not assignable to parameter of type 'never'. 
[36m	if (response.toLowerCase().includes('research') || response.toLowerCase().includes('precedent')) {
		actions.push([35m{
			type: 'research',
			text: 'Research legal precedents',
			data: { keywords: extractKeywords(prompt) }
		}[36m);
	}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\ai\suggest\+server.ts[39m:180:16
[31mError[39m: Argument of type '{ type: string; text: string; data: { category: string; }; }' is not assignable to parameter of type 'never'. 
[36m	if (actions.length === 0) {
		actions.push([35m{
			type: 'annotation',
			text: 'Add detailed notes',
			data: { category: 'general' }
		}[36m);
	}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\ai\summarize\+server.ts[39m:90:9
[31mError[39m: 'error' is of type 'unknown'. 
[36m    // Check if it's an Ollama connection error
    if ([35merror[36m.message.includes('fetch')) {
      return json({ 
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\ai\summarize\+server.ts[39m:97:14
[31mError[39m: 'error' is of type 'unknown'. 
[36m    return json({ 
      error: [35merror[36m.message || 'Failed to generate summary' 
    }, { status: 500 });
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\ai\tag\+server.ts[39m:130:58
[31mError[39m: Property 'response' does not exist on type 'never'. 
[36m
    const parsedResult = await parseAndReturnTags(result.[35mresponse[36m, fileName, fileType, enhanced, modelUsed);
    
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\analytics\+server.ts[39m:4:27
[31mError[39m: Module '"$lib/server/db/schema"' has no exported member 'participants'. 
[36mimport { db } from "$lib/server/db/index";
import { cases, evidence, [35mparticipants[36m } from "$lib/server/db/schema";
import { sql, and, gte, lte, eq, desc, count } from 'drizzle-orm';
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\analytics\+server.ts[39m:18:14
[31mError[39m: Property 'created_at' does not exist on type 'PgTableWithColumns<{ name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; closedAt: PgColumn<...>; };...'. Did you mean 'createdAt'? 
[36m		const timeFilter = and(
			gte(cases.[35mcreated_at[36m, startDate),
			lte(cases.created_at, endDate)
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\analytics\+server.ts[39m:19:14
[31mError[39m: Property 'created_at' does not exist on type 'PgTableWithColumns<{ name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; closedAt: PgColumn<...>; };...'. Did you mean 'createdAt'? 
[36m			gte(cases.created_at, startDate),
			lte(cases.[35mcreated_at[36m, endDate)
		);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\analytics\+server.ts[39m:49:20
[31mError[39m: Property 'type' does not exist on type 'PgTableWithColumns<{ name: "evidence"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "evidence"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 27 more ...; updatedAt: PgColumn<....'. 
[36m				total: count(),
				type: evidence.[35mtype[36m
			})
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\analytics\+server.ts[39m:52:34
[31mError[39m: Property 'case_id' does not exist on type 'PgTableWithColumns<{ name: "evidence"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "evidence"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 27 more ...; updatedAt: PgColumn<....'. Did you mean 'caseId'? 
[36m			.from(evidence)
			.innerJoin(cases, eq(evidence.[35mcase_id[36m, cases.id))
			.where(baseFilter)
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\analytics\+server.ts[39m:54:22
[31mError[39m: Property 'type' does not exist on type 'PgTableWithColumns<{ name: "evidence"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "evidence"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 27 more ...; updatedAt: PgColumn<....'. 
[36m			.where(baseFilter)
			.groupBy(evidence.[35mtype[36m);

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\analytics\+server.ts[39m:63:23
[31mError[39m: Property 'created_at' does not exist on type 'PgTableWithColumns<{ name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; closedAt: PgColumn<...>; };...'. Did you mean 'createdAt'? 
[36m				priority: cases.priority,
				created_at: cases.[35mcreated_at[36m,
				updated_at: cases.updated_at
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\analytics\+server.ts[39m:64:23
[31mError[39m: Property 'updated_at' does not exist on type 'PgTableWithColumns<{ name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; closedAt: PgColumn<...>; };...'. Did you mean 'updatedAt'? 
[36m				created_at: cases.created_at,
				updated_at: cases.[35mupdated_at[36m
			})
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\analytics\+server.ts[39m:68:24
[31mError[39m: Property 'updated_at' does not exist on type 'PgTableWithColumns<{ name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; closedAt: PgColumn<...>; };...'. Did you mean 'updatedAt'? 
[36m			.where(timeFilter)
			.orderBy(desc(cases.[35mupdated_at[36m))
			.limit(10);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\analytics\+server.ts[39m:74:36
[31mError[39m: Property 'created_at' does not exist on type 'PgTableWithColumns<{ name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; closedAt: PgColumn<...>; };...'. Did you mean 'createdAt'? 
[36m			.select({
				date: sql<string>`DATE(${cases.[35mcreated_at[36m})`,
				count: count()
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\analytics\+server.ts[39m:79:30
[31mError[39m: Property 'created_at' does not exist on type 'PgTableWithColumns<{ name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; closedAt: PgColumn<...>; };...'. Did you mean 'createdAt'? 
[36m			.where(timeFilter)
			.groupBy(sql`DATE(${cases.[35mcreated_at[36m})`)
			.orderBy(sql`DATE(${cases.created_at})`);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\analytics\+server.ts[39m:80:30
[31mError[39m: Property 'created_at' does not exist on type 'PgTableWithColumns<{ name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; closedAt: PgColumn<...>; };...'. Did you mean 'createdAt'? 
[36m			.groupBy(sql`DATE(${cases.created_at})`)
			.orderBy(sql`DATE(${cases.[35mcreated_at[36m})`);

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\analytics\+server.ts[39m:94:66
[31mError[39m: Property 'created_at' does not exist on type 'PgTableWithColumns<{ name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; closedAt: PgColumn<...>; };...'. Did you mean 'createdAt'? 
[36m			.select({
				avgAge: sql<number>`AVG(JULIANDAY('now') - JULIANDAY(${cases.[35mcreated_at[36m}))`
			})
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\canvas\+server.ts[39m:32:20
[31mError[39m: Object is possibly 'null'. 
[36m          updatedAt: new Date(),
          version: [35mexisting[0].version[36m + 1
        })
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\canvas\+server.ts[39m:40:10
[31mError[39m: No overload matches this call.
  Overload 1 of 2, '(value: { name: string | SQL<unknown> | Placeholder<string, any>; canvasData: unknown; id?: string | SQL<unknown> | Placeholder<string, any> | undefined; createdAt?: Date | ... 2 more ... | undefined; ... 4 more ...; isDefault?: boolean | ... 3 more ... | undefined; }): PgInsertBase<...>', gave the following error.
    Argument of type '{ id: `${string}-${string}-${string}-${string}-${string}`; caseId: any; canvasData: any; version: number; createdAt: Date; updatedAt: Date; }' is not assignable to parameter of type '{ name: string | SQL<unknown> | Placeholder<string, any>; canvasData: unknown; id?: string | SQL<unknown> | Placeholder<string, any> | undefined; createdAt?: Date | SQL<...> | Placeholder<...> | undefined; ... 4 more ...; isDefault?: boolean | ... 3 more ... | undefined; }'.
      Property 'name' is missing in type '{ id: `${string}-${string}-${string}-${string}-${string}`; caseId: any; canvasData: any; version: number; createdAt: Date; updatedAt: Date; }' but required in type '{ name: string | SQL<unknown> | Placeholder<string, any>; canvasData: unknown; id?: string | SQL<unknown> | Placeholder<string, any> | undefined; createdAt?: Date | SQL<...> | Placeholder<...> | undefined; ... 4 more ...; isDefault?: boolean | ... 3 more ... | undefined; }'.
  Overload 2 of 2, '(values: { name: string | SQL<unknown> | Placeholder<string, any>; canvasData: unknown; id?: string | SQL<unknown> | Placeholder<string, any> | undefined; createdAt?: Date | ... 2 more ... | undefined; ... 4 more ...; isDefault?: boolean | ... 3 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'id' does not exist in type '{ name: string | SQL<unknown> | Placeholder<string, any>; canvasData: unknown; id?: string | SQL<unknown> | Placeholder<string, any> | undefined; createdAt?: Date | SQL<...> | Placeholder<...> | undefined; ... 4 more ...; isDefault?: boolean | ... 3 more ... | undefined; }[]'. 
[36m        .insert(canvasStates)
        .[35mvalues[36m({
          id: randomUUID(),
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\canvas-states\+server.ts[39m:45:18
[31mError[39m: Argument of type 'SQL<unknown>' is not assignable to parameter of type 'never'. 
[36m			if (caseId) {
				filters.push([35meq(canvasStates.caseId, caseId)[36m);
			}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\canvas-states\+server.ts[39m:50:18
[31mError[39m: Argument of type 'SQL<unknown>' is not assignable to parameter of type 'never'. 
[36m			if (search) {
				filters.push([35mlike(canvasStates.name, `%${search}%`)[36m);
			}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\canvas-states\+server.ts[39m:55:18
[31mError[39m: Argument of type 'SQL<unknown>' is not assignable to parameter of type 'never'. 
[36m			if (isTemplate !== null) {
				filters.push([35meq(canvasStates.isDefault, isTemplate === 'true')[36m);
			}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\canvas-states\+server.ts[39m:60:5
[31mError[39m: Type 'Omit<PgSelectBase<"canvas_states", { id: PgColumn<{ name: "id"; tableName: "canvas_states"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; ... 5 more ...; generated: undefined; }, {}, {}>; ... 7 more ...; updatedAt: PgColumn<...>; }, ...' is missing the following properties from type 'PgSelectBase<"canvas_states", { id: PgColumn<{ name: "id"; tableName: "canvas_states"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; ... 5 more ...; generated: undefined; }, {}, {}>; ... 7 more ...; updatedAt: PgColumn<...>; }, ... 5...': config, joinsNotNullableMap, tableName, isPartialSelect, and 6 more. 
[36m			if (filters.length > 0) {
				[35mquery[36m = query.where(and(...filters));
			}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\canvas-states\+server.ts[39m:69:4
[31mError[39m: Type 'Omit<PgSelectBase<"canvas_states", { id: PgColumn<{ name: "id"; tableName: "canvas_states"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; ... 5 more ...; generated: undefined; }, {}, {}>; ... 7 more ...; updatedAt: PgColumn<...>; }, ...' is missing the following properties from type 'PgSelectBase<"canvas_states", { id: PgColumn<{ name: "id"; tableName: "canvas_states"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; ... 5 more ...; generated: undefined; }, {}, {}>; ... 7 more ...; updatedAt: PgColumn<...>; }, ... 5...': config, joinsNotNullableMap, tableName, isPartialSelect, and 6 more. 
[36m
			[35mquery[36m = query.orderBy(
				sortOrder === "asc" ? orderColumn : desc(orderColumn)
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\canvas-states\+server.ts[39m:74:4
[31mError[39m: Type 'Omit<PgSelectBase<"canvas_states", { id: PgColumn<{ name: "id"; tableName: "canvas_states"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; ... 5 more ...; generated: undefined; }, {}, {}>; ... 7 more ...; updatedAt: PgColumn<...>; }, ...' is missing the following properties from type 'PgSelectBase<"canvas_states", { id: PgColumn<{ name: "id"; tableName: "canvas_states"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; ... 5 more ...; generated: undefined; }, {}, {}>; ... 7 more ...; updatedAt: PgColumn<...>; }, ... 5...': config, joinsNotNullableMap, tableName, isPartialSelect, and 7 more. 
[36m			// Add pagination
			[35mquery[36m = query.limit(limit).offset(offset);

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\canvas-states\+server.ts[39m:81:5
[31mError[39m: Type 'Omit<PgSelectBase<"canvas_states", { count: SQL<number>; }, "partial", Record<"canvas_states", "not-null">, false, "where", { count: number; }[], { count: DrizzleTypeError<"You cannot reference this field without assigning it an alias first - use `.as(<alias>)`">; }>, "where">' is missing the following properties from type 'PgSelectBase<"canvas_states", { count: SQL<number>; }, "partial", Record<"canvas_states", "not-null">, false, never, { count: number; }[], { count: DrizzleTypeError<"You cannot reference this field without assigning it an alias first - use `.as(<alias>)`">; }>': config, joinsNotNullableMap, tableName, isPartialSelect, and 6 more. 
[36m			if (filters.length > 0) {
				[35mcountQuery[36m = countQuery.where(and(...filters));
			}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\cases\+server.ts[39m:30:7
[31mError[39m: Type 'Omit<PgSelectBase<"cases", { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; closedAt: PgColumn<....' is missing the following properties from type 'PgSelectBase<"cases", { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; closedAt: PgColumn<...>; ...': config, joinsNotNullableMap, tableName, isPartialSelect, and 6 more. 
[36m    if (search) {
      [35mquery[36m = query.where(
        or(
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\cases\+server.ts[39m:42:7
[31mError[39m: Type 'Omit<PgSelectBase<"cases", { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; closedAt: PgColumn<....' is missing the following properties from type 'PgSelectBase<"cases", { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; closedAt: PgColumn<...>; ...': config, joinsNotNullableMap, tableName, isPartialSelect, and 6 more. 
[36m    if (status) {
      [35mquery[36m = query.where(
        search 
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\cases\+server.ts[39m:60:7
[31mError[39m: Type 'Omit<PgSelectBase<"cases", { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; closedAt: PgColumn<....' is missing the following properties from type 'PgSelectBase<"cases", { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; closedAt: PgColumn<...>; ...': config, joinsNotNullableMap, tableName, isPartialSelect, and 6 more. 
[36m      const existingWhere = search || status;
      [35mquery[36m = query.where(
        existingWhere
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\cases\+server.ts[39m:84:5
[31mError[39m: Type 'Omit<PgSelectBase<"cases", { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; closedAt: PgColumn<....' is missing the following properties from type 'PgSelectBase<"cases", { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; closedAt: PgColumn<...>; ...': config, joinsNotNullableMap, tableName, isPartialSelect, and 6 more. 
[36m
    [35mquery[36m = query.orderBy(
      sortOrder === "asc" ? orderColumn : desc(orderColumn)
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\cases\+server.ts[39m:89:5
[31mError[39m: Type 'Omit<PgSelectBase<"cases", { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; closedAt: PgColumn<....' is missing the following properties from type 'PgSelectBase<"cases", { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; closedAt: PgColumn<...>; ...': config, joinsNotNullableMap, tableName, isPartialSelect, and 7 more. 
[36m    // Add pagination
    [35mquery[36m = query.limit(limit).offset(offset);

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\cases\[caseId]\deep-analysis\+server.ts[39m:139:7
[31mError[39m: Argument of type 'Promise<{ source: string; data: any; ok: boolean; }>' is not assignable to parameter of type 'never'. 
[36m    promises.push(
      [35mfetch(`${NLP_SERVICE_URL}/generate-with-local-llm`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          prompt:
            basePrompt +
            '\n\nReturn your analysis as a valid JSON object with "summary" and "recommendations" keys.',
          max_tokens: 1024,
          grammar: jsonGrammar, // Pass the grammar to constrain the output
        }),
      }).then((res) =>
        res.json().then((data) => ({ source: "firm_ai", data, ok: res.ok }))
      )[36m
    );
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\cases\[caseId]\deep-analysis\+server.ts[39m:157:9
[31mError[39m: Argument of type 'Promise<{ source: string; data: any; ok: boolean; }>' is not assignable to parameter of type 'never'. 
[36m      promises.push(
        [35mfetch("https://api.openai.com/v1/chat/completions", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${OPENAI_API_KEY}`,
          },
          body: JSON.stringify({
            model: "gpt-3.5-turbo",
            messages: [{ role: "user", content: basePrompt }],
            max_tokens: 512,
          }),
        }).then((res) =>
          res.json().then((data) => ({ source: "openai", data, ok: res.ok }))
        )[36m
      );
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\cases\[caseId]\deep-analysis\+server.ts[39m:179:57
[31mError[39m: Property 'ok' does not exist on type 'never'. 
[36m    settledResults.forEach((result) => {
      if (result.status === "fulfilled" && result.value.[35mok[36m) {
        const { source, data } = result.value;
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\cases\[caseId]\deep-analysis\+server.ts[39m:184:52
[31mError[39m: Property 'response' does not exist on type 'never'. 
[36m            // The output should be valid JSON because of the grammar
            const parsedResponse = JSON.parse(data.[35mresponse[36m);
            analysisResults.firm_ai = {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\cases\[caseId]\deep-analysis\+server.ts[39m:193:20
[31mError[39m: Property 'response' does not exist on type 'never'. 
[36m              "Local LLM output was not valid JSON:",
              data.[35mresponse[36m
            );
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\cases\[caseId]\deep-analysis\+server.ts[39m:196:28
[31mError[39m: Property 'response' does not exist on type 'never'. 
[36m            analysisResults.firm_ai = {
              output: data.[35mresponse[36m,
              source: "Local LLM (Raw)",
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\cases\[caseId]\deep-analysis\+server.ts[39m:202:26
[31mError[39m: Property 'choices' does not exist on type 'never'. 
[36m          analysisResults.openai = {
            output: data.[35mchoices[36m[0].message.content,
            source: "OpenAI API",
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\cases\[caseId]\deep-analysis\+server.ts[39m:209:49
[31mError[39m: Property 'detail' does not exist on type 'never'. 
[36m        const { source, data } = result.value;
        analysisResults[source] = { error: data.[35mdetail[36m || "API Error" };
      } else {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\cases\[caseId]\pois\+server.ts[39m:33:8
[31mError[39m: No overload matches this call.
  Overload 1 of 2, '(value: { name: string | SQL<unknown> | Placeholder<string, any>; status?: string | SQL<unknown> | Placeholder<string, any> | null | undefined; id?: string | SQL<...> | Placeholder<...> | undefined; ... 9 more ...; relationship?: string | ... 3 more ... | undefined; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'profileImageUrl' does not exist in type '{ name: string | SQL<unknown> | Placeholder<string, any>; status?: string | SQL<unknown> | Placeholder<string, any> | null | undefined; id?: string | SQL<unknown> | Placeholder<...> | undefined; ... 9 more ...; relationship?: string | ... 3 more ... | undefined; }'.
  Overload 2 of 2, '(values: { name: string | SQL<unknown> | Placeholder<string, any>; status?: string | SQL<unknown> | Placeholder<string, any> | null | undefined; id?: string | SQL<...> | Placeholder<...> | undefined; ... 9 more ...; relationship?: string | ... 3 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'caseId' does not exist in type '{ name: string | SQL<unknown> | Placeholder<string, any>; status?: string | SQL<unknown> | Placeholder<string, any> | null | undefined; id?: string | SQL<unknown> | Placeholder<...> | undefined; ... 9 more ...; relationship?: string | ... 3 more ... | undefined; }[]'. 
[36m      .insert(personsOfInterest)
      .[35mvalues[36m({
        caseId,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\cases\summary\+server.ts[39m:98:70
[31mError[39m: Property 'summary' does not exist on type '{}'. 
[36m
      if (existingSummary.length > 0 && existingSummary[0].metadata?.[35msummary[36m) {
        return json({
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\cases\summary\+server.ts[39m:101:48
[31mError[39m: Property 'summary' does not exist on type '{}'. 
[36m          success: true,
          summary: existingSummary[0].metadata.[35msummary[36m,
        } as CaseSummaryResponse);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\cases\summary\+server.ts[39m:119:25
[31mError[39m: Property 'storeCaseEmbedding' does not exist on type 'VectorService'. Did you mean 'storeUserEmbedding'? 
[36m
    await vectorService.[35mstoreCaseEmbedding[36m({
      caseId,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\cases\summary\+server.ts[39m:124:9
[31mError[39m: Type '"ollama"' is not assignable to type '"local" | "nomic" | undefined'. 
[36m        caseId,
        [35mmodel[36m: "ollama",
      }),
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\cases\summary\+server.ts[39m:201:43
[31mError[39m: Property 'summary' does not exist on type '{}'. 
[36m      success: true,
      summary: summaryRecord[0].metadata?.[35msummary[36m,
      analytics,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\cases\summary\+server.ts[39m:228:33
[31mError[39m: Property 'caseId' does not exist on type 'PgTableWithColumns<{ name: "evidence_vectors"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "evidence_vectors"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 4 more ...; createdAt: PgColumn<...>...'. 
[36m      .from(evidenceVectors)
      .where(eq(evidenceVectors.[35mcaseId[36m, caseId));

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\cases\summary\+server.ts[39m:233:15
[31mError[39m: Property 'vectorType' does not exist on type '{ id: string; evidenceId: string | null; content: string; embedding: string; metadata: unknown; createdAt: Date; }'. 
[36m      content: e.content,
      type: e.[35mvectorType[36m,
      metadata: e.metadata,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\cases\summary\+server.ts[39m:322:40
[31mError[39m: Property 'generateResponse' does not exist on type 'OllamaService'. 
[36m
  const response = await ollamaService.[35mgenerateResponse[36m(analysisPrompt, {
    model: "gemma3-legal",
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\cases\summary\+server.ts[39m:397:31
[31mError[39m: Property 'caseId' does not exist on type 'PgTableWithColumns<{ name: "evidence_vectors"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "evidence_vectors"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 4 more ...; createdAt: PgColumn<...>...'. 
[36m    .from(evidenceVectors)
    .where(eq(evidenceVectors.[35mcaseId[36m, caseId));

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\chat\+server.ts[39m:74:7
[31mError[39m: Type '"ollama"' is not assignable to type '"local" | "nomic" | undefined'. 
[36m    const messageEmbedding = await vectorService.generateEmbedding(message, {
      [35mmodel[36m: "ollama",
      userId,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\chat\+server.ts[39m:81:25
[31mError[39m: Expected 5-7 arguments, but got 1. 
[36m    // Store user message embedding
    await vectorService.[35mstoreChatEmbedding[36m({
      conversationId,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\chat\+server.ts[39m:95:50
[31mError[39m: Property 'findSimilar' does not exist on type 'VectorService'. 
[36m    if (useContext) {
      const similarContext = await vectorService.[35mfindSimilar[36m(messageEmbedding, {
        limit: 3,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\chat\+server.ts[39m:103:9
[31mError[39m: Type '{ similar_cases: any; similar_evidence: any; previous_chats: any; }' is not assignable to type 'null'. 
[36m      if (similarContext.length > 0) {
        [35mcontextData[36m = {
          similar_cases: similarContext.filter(
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\chat\+server.ts[39m:144:42
[31mError[39m: Property 'generateResponse' does not exist on type 'OllamaService'. 
[36m
    const response = await ollamaService.[35mgenerateResponse[36m(fullPrompt, {
      model: "gemma3-legal",
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\chat\+server.ts[39m:159:9
[31mError[39m: Type '"ollama"' is not assignable to type '"local" | "nomic" | undefined'. 
[36m      {
        [35mmodel[36m: "ollama",
        userId,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\chat\+server.ts[39m:166:25
[31mError[39m: Expected 5-7 arguments, but got 1. 
[36m
    await vectorService.[35mstoreChatEmbedding[36m({
      conversationId,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\chat\+server.ts[39m:246:34
[31mError[39m: Property 'contextUsed' does not exist on type '{}'. 
[36m      timestamp: msg.createdAt,
      contextUsed: msg.metadata?.[35mcontextUsed[36m,
      suggestions: msg.metadata?.suggestions,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\chat\+server.ts[39m:247:34
[31mError[39m: Property 'suggestions' does not exist on type '{}'. 
[36m      contextUsed: msg.metadata?.contextUsed,
      suggestions: msg.metadata?.[35msuggestions[36m,
      actions: msg.metadata?.actions,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\chat\+server.ts[39m:248:30
[31mError[39m: Property 'actions' does not exist on type '{}'. 
[36m      suggestions: msg.metadata?.suggestions,
      actions: msg.metadata?.[35mactions[36m,
    }));
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\criminals\+server.ts[39m:32:9
[31mError[39m: Argument of type 'SQL<unknown> | undefined' is not assignable to parameter of type 'never'.
  Type 'undefined' is not assignable to type 'never'. 
[36m      filters.push(
        [35mor(
          like(criminals.firstName, `%${search}%`),
          like(criminals.lastName, `%${search}%`),
          like(criminals.middleName, `%${search}%`),
          like(criminals.socialSecurityNumber, `%${search}%`),
          like(criminals.driversLicense, `%${search}%`)
        )[36m
      );
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\criminals\+server.ts[39m:44:20
[31mError[39m: Argument of type 'SQL<unknown>' is not assignable to parameter of type 'never'. 
[36m    if (threatLevel) {
      filters.push([35meq(criminals.threatLevel, threatLevel)[36m);
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\criminals\+server.ts[39m:49:20
[31mError[39m: Argument of type 'SQL<unknown>' is not assignable to parameter of type 'never'. 
[36m    if (status) {
      filters.push([35meq(criminals.status, status)[36m);
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\criminals\+server.ts[39m:54:7
[31mError[39m: Type 'Omit<PgSelectBase<"criminals", { id: PgColumn<{ name: "id"; tableName: "criminals"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; ... 5 more ...; generated: undefined; }, {}, {}>; ... 25 more ...; updatedAt: PgColumn<...>; }, ... 5 m...' is missing the following properties from type 'PgSelectBase<"criminals", { id: PgColumn<{ name: "id"; tableName: "criminals"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 25 more ...; updatedAt: PgColu...': config, joinsNotNullableMap, tableName, isPartialSelect, and 6 more. 
[36m    if (filters.length > 0) {
      [35mquery[36m = query.where(and(...filters));
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\criminals\+server.ts[39m:65:5
[31mError[39m: Type 'Omit<PgSelectBase<"criminals", { id: PgColumn<{ name: "id"; tableName: "criminals"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; ... 5 more ...; generated: undefined; }, {}, {}>; ... 25 more ...; updatedAt: PgColumn<...>; }, ... 5 m...' is missing the following properties from type 'PgSelectBase<"criminals", { id: PgColumn<{ name: "id"; tableName: "criminals"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 25 more ...; updatedAt: PgColu...': config, joinsNotNullableMap, tableName, isPartialSelect, and 6 more. 
[36m
    [35mquery[36m = query.orderBy(
      sortOrder === "asc" ? orderColumn : desc(orderColumn)
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\criminals\+server.ts[39m:70:5
[31mError[39m: Type 'Omit<PgSelectBase<"criminals", { id: PgColumn<{ name: "id"; tableName: "criminals"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; ... 5 more ...; generated: undefined; }, {}, {}>; ... 25 more ...; updatedAt: PgColumn<...>; }, ... 5 m...' is missing the following properties from type 'PgSelectBase<"criminals", { id: PgColumn<{ name: "id"; tableName: "criminals"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 25 more ...; updatedAt: PgColu...': config, joinsNotNullableMap, tableName, isPartialSelect, and 7 more. 
[36m    // Add pagination
    [35mquery[36m = query.limit(limit).offset(offset);

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\criminals\+server.ts[39m:77:7
[31mError[39m: Type 'Omit<PgSelectBase<"criminals", { count: SQL<number>; }, "partial", Record<"criminals", "not-null">, false, "where", { count: number; }[], { count: DrizzleTypeError<"You cannot reference this field without assigning it an alias first - use `.as(<alias>)`">; }>, "where">' is missing the following properties from type 'PgSelectBase<"criminals", { count: SQL<number>; }, "partial", Record<"criminals", "not-null">, false, never, { count: number; }[], { count: DrizzleTypeError<"You cannot reference this field without assigning it an alias first - use `.as(<alias>)`">; }>': config, joinsNotNullableMap, tableName, isPartialSelect, and 6 more. 
[36m    if (filters.length > 0) {
      [35mcountQuery[36m = countQuery.where(and(...filters));
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\documents\+server.ts[39m:82:25
[31mError[39m: Argument of type 'SQL<unknown>' is not assignable to parameter of type 'never'. 
[36m      if (caseId) {
        conditions.push([35meq(legalDocuments.caseId, caseId)[36m);
      }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\documents\+server.ts[39m:86:25
[31mError[39m: Argument of type 'SQL<unknown>' is not assignable to parameter of type 'never'. 
[36m      if (documentType) {
        conditions.push([35meq(legalDocuments.documentType, documentType)[36m);
      }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\documents\+server.ts[39m:90:25
[31mError[39m: Argument of type 'SQL<unknown>' is not assignable to parameter of type 'never'. 
[36m      if (status) {
        conditions.push([35meq(legalDocuments.status, status)[36m);
      }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\documents\+server.ts[39m:95:11
[31mError[39m: Argument of type 'SQL<unknown> | undefined' is not assignable to parameter of type 'never'.
  Type 'undefined' is not assignable to type 'never'. 
[36m        conditions.push(
          [35mor(
            like(legalDocuments.title, `%${search}%`),
            like(legalDocuments.content, `%${search}%`)
          )[36m
        );
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\documents\+server.ts[39m:211:10
[31mError[39m: No overload matches this call.
  Overload 1 of 2, '(value: { title: string | SQL<unknown> | Placeholder<string, any>; content: string | SQL<unknown> | Placeholder<string, any>; status?: string | SQL<unknown> | Placeholder<...> | undefined; ... 18 more ...; readingTime?: number | ... 2 more ... | undefined; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'tags' does not exist in type '{ title: string | SQL<unknown> | Placeholder<string, any>; content: string | SQL<unknown> | Placeholder<string, any>; status?: string | SQL<unknown> | Placeholder<...> | undefined; ... 18 more ...; readingTime?: number | ... 2 more ... | undefined; }'.
  Overload 2 of 2, '(values: { title: string | SQL<unknown> | Placeholder<string, any>; content: string | SQL<unknown> | Placeholder<string, any>; status?: string | SQL<unknown> | Placeholder<...> | undefined; ... 18 more ...; readingTime?: number | ... 2 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'title' does not exist in type '{ title: string | SQL<unknown> | Placeholder<string, any>; content: string | SQL<unknown> | Placeholder<string, any>; status?: string | SQL<unknown> | Placeholder<...> | undefined; ... 18 more ...; readingTime?: number | ... 2 more ... | undefined; }[]'. 
[36m        .insert(legalDocuments)
        .[35mvalues[36m({
          title,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\documents\[id]\auto-save\+server.ts[39m:80:43
[31mError[39m: Property 'lastSavedAt' does not exist on type '{ id: string; caseId: string | null; userId: string | null; title: string; content: string; documentType: string; status: string; version: number; metadata: { confidentialityLevel: "public" | "restricted" | "confidential"; ... 4 more ...; courtLevel?: string | undefined; }; ... 12 more ...; archivedAt: Date | null; }'. 
[36m          id: updatedDocument[0].id,
          lastSavedAt: updatedDocument[0].[35mlastSavedAt[36m,
          wordCount: updatedDocument[0].wordCount,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\documents\[id]\auto-save\+server.ts[39m:82:39
[31mError[39m: Property 'isDirty' does not exist on type '{ id: string; caseId: string | null; userId: string | null; title: string; content: string; documentType: string; status: string; version: number; metadata: { confidentialityLevel: "public" | "restricted" | "confidential"; ... 4 more ...; courtLevel?: string | undefined; }; ... 12 more ...; archivedAt: Date | null; }'. 
[36m          wordCount: updatedDocument[0].wordCount,
          isDirty: updatedDocument[0].[35misDirty[36m,
        },
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\documents\[id]\auto-save\+server.ts[39m:134:35
[31mError[39m: Property 'isDirty' does not exist on type 'PgTableWithColumns<{ name: "legal_documents"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "legal_documents"; dataType: "string"; columnType: "PgText"; data: string; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 20 more ...; archivedAt: PgColumn<...>...'. 
[36m          id: legalDocuments.id,
          isDirty: legalDocuments.[35misDirty[36m,
          lastSavedAt: legalDocuments.lastSavedAt,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\documents\[id]\auto-save\+server.ts[39m:135:39
[31mError[39m: Property 'lastSavedAt' does not exist on type 'PgTableWithColumns<{ name: "legal_documents"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "legal_documents"; dataType: "string"; columnType: "PgText"; data: string; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 20 more ...; archivedAt: PgColumn<...>...'. 
[36m          isDirty: legalDocuments.isDirty,
          lastSavedAt: legalDocuments.[35mlastSavedAt[36m,
          autoSaveData: legalDocuments.autoSaveData,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\embed\+server.ts[39m:60:7
[31mError[39m: Type '"ollama" | "openai"' is not assignable to type '"local" | "nomic" | undefined'.
  Type '"ollama"' is not assignable to type '"local" | "nomic" | undefined'. 
[36m    const vector = await vectorService.generateEmbedding(text, {
      [35mmodel[36m,
      userId: metadata.userId,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\embed\+server.ts[39m:81:48
[31mError[39m: Expected 3-4 arguments, but got 1. 
[36m
        const userResult = await vectorService.[35mstoreUserEmbedding[36m({
          userId: metadata.userId,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\embed\+server.ts[39m:88:31
[31mError[39m: Property 'id' does not exist on type 'string'. 
[36m        });
        insertId = userResult.[35mid[36m;
        break;
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\embed\+server.ts[39m:102:48
[31mError[39m: Expected 5-7 arguments, but got 1. 
[36m
        const chatResult = await vectorService.[35mstoreChatEmbedding[36m({
          conversationId: metadata.conversationId,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\embed\+server.ts[39m:110:31
[31mError[39m: Property 'id' does not exist on type 'string'. 
[36m        });
        insertId = chatResult.[35mid[36m;
        break;
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\embed\+server.ts[39m:124:52
[31mError[39m: Property 'storeEvidenceVector' does not exist on type 'VectorService'. 
[36m
        const evidenceResult = await vectorService.[35mstoreEvidenceVector[36m({
          evidenceId: metadata.evidenceId,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\embed\+server.ts[39m:146:48
[31mError[39m: Property 'storeCaseEmbedding' does not exist on type 'VectorService'. Did you mean 'storeUserEmbedding'? 
[36m
        const caseResult = await vectorService.[35mstoreCaseEmbedding[36m({
          caseId: metadata.caseId,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\embed\+server.ts[39m:167:51
[31mError[39m: Property 'findSimilar' does not exist on type 'VectorService'. 
[36m    // Find similar content for context
    const similarityResults = await vectorService.[35mfindSimilar[36m(vector, {
      limit: 5,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\embed\+server.ts[39m:221:51
[31mError[39m: Property 'findSimilar' does not exist on type 'VectorService'. 
[36m
    const similarityResults = await vectorService.[35mfindSimilar[36m(vector, {
      limit,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\embeddings\+server.ts[39m:48:53
[31mError[39m: Argument of type 'string | undefined' is not assignable to parameter of type 'EmbeddingOptions | undefined'.
  Type 'string' has no properties in common with type 'EmbeddingOptions'. 
[36m
    const embedding = await generateEmbedding(text, [35mmodel[36m);

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\embeddings\+server.ts[39m:54:21
[31mError[39m: 'embedding' is possibly 'null'. 
[36m        embedding,
        dimensions: [35membedding[36m.length,
        text: text.substring(0, 100) + (text.length > 100 ? "..." : ""),
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\embeddings\+server.ts[39m:97:68
[31mError[39m: Expected 1-2 arguments, but got 3. 
[36m
    const embeddings = await generateBatchEmbeddings(texts, model, [35mbatchSize[36m);

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\embeddings\+server.ts[39m:142:28
[31mError[39m: Cannot find name 'syncDocumentEmbeddings'. 
[36m      case "cases":
        syncResult = await [35msyncDocumentEmbeddings[36m(
          "cases",
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\embeddings\+server.ts[39m:149:28
[31mError[39m: Cannot find name 'syncDocumentEmbeddings'. 
[36m      case "evidence":
        syncResult = await [35msyncDocumentEmbeddings[36m(
          "evidence",
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\embeddings\+server.ts[39m:156:28
[31mError[39m: Cannot find name 'syncDocumentEmbeddings'. 
[36m      case "documents":
        syncResult = await [35msyncDocumentEmbeddings[36m(
          "documents",
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\embeddings\+server.ts[39m:163:35
[31mError[39m: Cannot find name 'syncDocumentEmbeddings'. 
[36m      case "all":
        const casesResult = await [35msyncDocumentEmbeddings[36m(
          "cases",
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\embeddings\+server.ts[39m:168:38
[31mError[39m: Cannot find name 'syncDocumentEmbeddings'. 
[36m        );
        const evidenceResult = await [35msyncDocumentEmbeddings[36m(
          "evidence",
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\embeddings\+server.ts[39m:173:39
[31mError[39m: Cannot find name 'syncDocumentEmbeddings'. 
[36m        );
        const documentsResult = await [35msyncDocumentEmbeddings[36m(
          "documents",
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\evidence\+server.ts[39m:67:20
[31mError[39m: Argument of type 'SQL<unknown>' is not assignable to parameter of type 'never'. 
[36m    if (caseId) {
      filters.push([35meq(evidence.caseId, caseId)[36m);
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\evidence\+server.ts[39m:71:20
[31mError[39m: Argument of type 'SQL<unknown>' is not assignable to parameter of type 'never'. 
[36m    if (criminalId) {
      filters.push([35meq(evidence.criminalId, criminalId)[36m);
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\evidence\+server.ts[39m:75:20
[31mError[39m: Argument of type 'SQL<unknown>' is not assignable to parameter of type 'never'. 
[36m    if (evidenceType) {
      filters.push([35meq(evidence.evidenceType, evidenceType)[36m);
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\evidence\+server.ts[39m:81:9
[31mError[39m: Argument of type 'SQL<unknown> | undefined' is not assignable to parameter of type 'never'.
  Type 'undefined' is not assignable to type 'never'. 
[36m      filters.push(
        [35mor(
          like(evidence.title, `%${search}%`),
          like(evidence.description, `%${search}%`),
          like(evidence.fileName, `%${search}%`),
          like(evidence.summary, `%${search}%`)
        )[36m
      );
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\evidence\+server.ts[39m:92:7
[31mError[39m: Type 'Omit<PgSelectBase<"evidence", { id: PgColumn<{ name: "id"; tableName: "evidence"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 27 more ...; updatedAt: PgC...' is missing the following properties from type 'PgSelectBase<"evidence", { id: PgColumn<{ name: "id"; tableName: "evidence"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 27 more ...; updatedAt: PgColumn...': config, joinsNotNullableMap, tableName, isPartialSelect, and 6 more. 
[36m    if (filters.length > 0) {
      [35mquery[36m = query.where(and(...filters));
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\evidence\+server.ts[39m:102:5
[31mError[39m: Type 'Omit<PgSelectBase<"evidence", { id: PgColumn<{ name: "id"; tableName: "evidence"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 27 more ...; updatedAt: PgC...' is missing the following properties from type 'PgSelectBase<"evidence", { id: PgColumn<{ name: "id"; tableName: "evidence"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 27 more ...; updatedAt: PgColumn...': config, joinsNotNullableMap, tableName, isPartialSelect, and 6 more. 
[36m
    [35mquery[36m = query.orderBy(
      sortOrder === "asc" ? orderColumn : desc(orderColumn)
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\evidence\+server.ts[39m:107:5
[31mError[39m: Type 'Omit<PgSelectBase<"evidence", { id: PgColumn<{ name: "id"; tableName: "evidence"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 27 more ...; updatedAt: PgC...' is missing the following properties from type 'PgSelectBase<"evidence", { id: PgColumn<{ name: "id"; tableName: "evidence"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 27 more ...; updatedAt: PgColumn...': config, joinsNotNullableMap, tableName, isPartialSelect, and 7 more. 
[36m    // Add pagination
    [35mquery[36m = query.limit(limit).offset(offset);

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\evidence\+server.ts[39m:114:7
[31mError[39m: Type 'Omit<PgSelectBase<"evidence", { count: SQL<number>; }, "partial", Record<"evidence", "not-null">, false, "where", { count: number; }[], { count: DrizzleTypeError<"You cannot reference this field without assigning it an alias first - use `.as(<alias>)`">; }>, "where">' is missing the following properties from type 'PgSelectBase<"evidence", { count: SQL<number>; }, "partial", Record<"evidence", "not-null">, false, never, { count: number; }[], { count: DrizzleTypeError<"You cannot reference this field without assigning it an alias first - use `.as(<alias>)`">; }>': config, joinsNotNullableMap, tableName, isPartialSelect, and 6 more. 
[36m    if (filters.length > 0) {
      [35mcountQuery[36m = countQuery.where(and(...filters));
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\evidence\save-node\+server.ts[39m:164:25
[31mError[39m: Argument of type 'any' is not assignable to parameter of type 'never'. 
[36m        const responseData = await nodeResult.json();
        savedNodes.push([35mresponseData.evidence[36m);
      }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\evidence\save-node\+server.ts[39m:217:24
[31mError[39m: Argument of type 'Response' is not assignable to parameter of type 'never'. 
[36m        if (result.status === 'fulfilled') {
          results.push([35mresult.value[36m);
        } else {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\evidence\save-node\+server.ts[39m:219:23
[31mError[39m: Argument of type '{ index: number; error: any; }' is not assignable to parameter of type 'never'. 
[36m        } else {
          errors.push([35m{
            index: i + index,
            error: result.reason
          }[36m);
        }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\evidence\upload\+server.ts[39m:10:32
[31mError[39m: Property 'auth' does not exist on type 'Locals'. 
[36m  // Check authentication
  const session = await locals.[35mauth[36m?.validate();
  if (!session) {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\evidence\validate\+server.ts[39m:37:31
[31mError[39m: Argument of type '{}' is not assignable to parameter of type 'string'. 
[36m    try {
      aiAnalysis = JSON.parse([35mevidenceRecord.aiAnalysis || "{}"[36m);
    } catch (e) {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\evidence\validate\+server.ts[39m:54:21
[31mError[39m: Property 'validations' does not exist on type '{}'. 
[36m    // Update AI analysis with validation feedback
    if (!aiAnalysis.[35mvalidations[36m) {
      aiAnalysis.validations = [];
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\evidence\validate\+server.ts[39m:55:18
[31mError[39m: Property 'validations' does not exist on type '{}'. 
[36m    if (!aiAnalysis.validations) {
      aiAnalysis.[35mvalidations[36m = [];
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\evidence\validate\+server.ts[39m:57:16
[31mError[39m: Property 'validations' does not exist on type '{}'. 
[36m    }
    aiAnalysis.[35mvalidations[36m.push(validation);

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\evidence\validate\+server.ts[39m:62:20
[31mError[39m: Property 'summary' does not exist on type '{}'. 
[36m      if (corrections.summary) {
        aiAnalysis.[35msummary[36m = corrections.summary;
      }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\evidence\validate\+server.ts[39m:65:20
[31mError[39m: Property 'tags' does not exist on type '{}'. 
[36m      if (corrections.tags && Array.isArray(corrections.tags)) {
        aiAnalysis.[35mtags[36m = corrections.tags;
      }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\evidence\validate\+server.ts[39m:68:20
[31mError[39m: Property 'evidenceType' does not exist on type '{}'. 
[36m      if (corrections.evidenceType) {
        aiAnalysis.[35mevidenceType[36m = corrections.evidenceType;
      }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\evidence\validate\+server.ts[39m:73:41
[31mError[39m: Property 'validations' does not exist on type '{}'. 
[36m    // Calculate validation confidence score
    const validValidations = aiAnalysis.[35mvalidations[36m.filter(
      (v) => v.valid
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\evidence\validate\+server.ts[39m:76:41
[31mError[39m: Property 'validations' does not exist on type '{}'. 
[36m    ).length;
    const totalValidations = aiAnalysis.[35mvalidations[36m.length;
    aiAnalysis.validationScore =
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\evidence\validate\+server.ts[39m:77:16
[31mError[39m: Property 'validationScore' does not exist on type '{}'. 
[36m    const totalValidations = aiAnalysis.validations.length;
    aiAnalysis.[35mvalidationScore[36m =
      totalValidations > 0 ? validValidations / totalValidations : 0;
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\evidence\validate\+server.ts[39m:162:31
[31mError[39m: Argument of type '{}' is not assignable to parameter of type 'string'. 
[36m    try {
      aiAnalysis = JSON.parse([35mevidenceRecord.aiAnalysis || "{}"[36m);
    } catch (e) {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\evidence\validate\+server.ts[39m:167:36
[31mError[39m: Property 'validations' does not exist on type '{}'. 
[36m
    const validations = aiAnalysis.[35mvalidations[36m || [];

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\evidence\validate\+server.ts[39m:173:35
[31mError[39m: Property 'validationScore' does not exist on type '{}'. 
[36m      validations,
      validationScore: aiAnalysis.[35mvalidationScore[36m || 0,
      totalValidations: validations.length,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\export\+server.ts[39m:61:9
[31mError[39m: Type 'Omit<PgSelectBase<"cases", { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; closedAt: PgColumn<....' is missing the following properties from type 'PgSelectBase<"cases", { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; closedAt: PgColumn<...>; ...': config, joinsNotNullableMap, tableName, isPartialSelect, and 6 more. 
[36m      if (caseIds?.length) {
        [35mcaseQuery[36m = caseQuery.where(sql`${cases.id} IN (${caseIds.join(",")})`);
      }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\export\+server.ts[39m:65:9
[31mError[39m: Type 'Omit<PgSelectBase<"cases", { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; closedAt: PgColumn<....' is missing the following properties from type 'PgSelectBase<"cases", { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; closedAt: PgColumn<...>; ...': config, joinsNotNullableMap, tableName, isPartialSelect, and 6 more. 
[36m      if (dateRange?.from) {
        [35mcaseQuery[36m = caseQuery.where(
          sql`${cases.createdAt} >= ${dateRange.from}`
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\export\+server.ts[39m:71:9
[31mError[39m: Type 'Omit<PgSelectBase<"cases", { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; closedAt: PgColumn<....' is missing the following properties from type 'PgSelectBase<"cases", { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; closedAt: PgColumn<...>; ...': config, joinsNotNullableMap, tableName, isPartialSelect, and 6 more. 
[36m      if (dateRange?.to) {
        [35mcaseQuery[36m = caseQuery.where(sql`${cases.createdAt} <= ${dateRange.to}`);
      }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\export\+server.ts[39m:83:9
[31mError[39m: Type 'Omit<PgSelectBase<"evidence", { id: PgColumn<{ name: "id"; tableName: "evidence"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 27 more ...; updatedAt: PgC...' is missing the following properties from type 'PgSelectBase<"evidence", { id: PgColumn<{ name: "id"; tableName: "evidence"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 27 more ...; updatedAt: PgColumn...': config, joinsNotNullableMap, tableName, isPartialSelect, and 6 more. 
[36m      if (caseIds?.length) {
        [35mevidenceQuery[36m = evidenceQuery.where(
          sql`${evidence.caseId} IN (${caseIds.join(",")})`
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\export\+server.ts[39m:89:9
[31mError[39m: Type 'Omit<PgSelectBase<"evidence", { id: PgColumn<{ name: "id"; tableName: "evidence"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 27 more ...; updatedAt: PgC...' is missing the following properties from type 'PgSelectBase<"evidence", { id: PgColumn<{ name: "id"; tableName: "evidence"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 27 more ...; updatedAt: PgColumn...': config, joinsNotNullableMap, tableName, isPartialSelect, and 6 more. 
[36m      if (dateRange?.from) {
        [35mevidenceQuery[36m = evidenceQuery.where(
          sql`${evidence.createdAt} >= ${dateRange.from}`
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\export\+server.ts[39m:90:26
[31mError[39m: Property 'createdAt' does not exist on type 'PgTableWithColumns<{ name: "evidence"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "evidence"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 27 more ...; updatedAt: PgColumn<....'. 
[36m        evidenceQuery = evidenceQuery.where(
          sql`${evidence.[35mcreatedAt[36m} >= ${dateRange.from}`
        );
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\export\+server.ts[39m:95:9
[31mError[39m: Type 'Omit<PgSelectBase<"evidence", { id: PgColumn<{ name: "id"; tableName: "evidence"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 27 more ...; updatedAt: PgC...' is missing the following properties from type 'PgSelectBase<"evidence", { id: PgColumn<{ name: "id"; tableName: "evidence"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 27 more ...; updatedAt: PgColumn...': config, joinsNotNullableMap, tableName, isPartialSelect, and 6 more. 
[36m      if (dateRange?.to) {
        [35mevidenceQuery[36m = evidenceQuery.where(
          sql`${evidence.createdAt} <= ${dateRange.to}`
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\export\+server.ts[39m:96:26
[31mError[39m: Property 'createdAt' does not exist on type 'PgTableWithColumns<{ name: "evidence"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "evidence"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 27 more ...; updatedAt: PgColumn<....'. 
[36m        evidenceQuery = evidenceQuery.where(
          sql`${evidence.[35mcreatedAt[36m} <= ${dateRange.to}`
        );
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\export\+server.ts[39m:101:23
[31mError[39m: Property 'createdAt' does not exist on type 'PgTableWithColumns<{ name: "evidence"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "evidence"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 27 more ...; updatedAt: PgColumn<....'. 
[36m      const evidenceData = await evidenceQuery.orderBy(
        desc(evidence.[35mcreatedAt[36m)
      );
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\import\+server.ts[39m:130:15
[31mError[39m: Object literal may only specify known properties, but 'updated_at' does not exist in type '{ title?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; caseNumber?: string | SQL<...> | PgColumn<...> | undefined; ... 20 more ...; closedAt?: Date | ... 3 more ... | undefined; }'. Did you mean to write 'updatedAt'? 
[36m              priority: caseData.priority,
              [35mupdated_at[36m: new Date(),
            })
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\import\+server.ts[39m:150:39
[31mError[39m: No overload matches this call.
  Overload 1 of 2, '(value: { title: string | SQL<unknown> | Placeholder<string, any>; caseNumber: string | SQL<unknown> | Placeholder<string, any>; status?: string | SQL<unknown> | Placeholder<...> | undefined; ... 19 more ...; closedAt?: Date | ... 3 more ... | undefined; }): PgInsertBase<...>', gave the following error.
    Argument of type '{ title: any; description: any; status: any; priority: any; created_at: Date; updated_at: Date; }' is not assignable to parameter of type '{ title: string | SQL<unknown> | Placeholder<string, any>; caseNumber: string | SQL<unknown> | Placeholder<string, any>; status?: string | SQL<unknown> | Placeholder<...> | undefined; ... 19 more ...; closedAt?: Date | ... 3 more ... | undefined; }'.
      Property 'caseNumber' is missing in type '{ title: any; description: any; status: any; priority: any; created_at: Date; updated_at: Date; }' but required in type '{ title: string | SQL<unknown> | Placeholder<string, any>; caseNumber: string | SQL<unknown> | Placeholder<string, any>; status?: string | SQL<unknown> | Placeholder<...> | undefined; ... 19 more ...; closedAt?: Date | ... 3 more ... | undefined; }'.
  Overload 2 of 2, '(values: { title: string | SQL<unknown> | Placeholder<string, any>; caseNumber: string | SQL<unknown> | Placeholder<string, any>; status?: string | SQL<unknown> | Placeholder<...> | undefined; ... 19 more ...; closedAt?: Date | ... 3 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Argument of type '{ title: any; description: any; status: any; priority: any; created_at: Date; updated_at: Date; }' is not assignable to parameter of type '{ title: string | SQL<unknown> | Placeholder<string, any>; caseNumber: string | SQL<unknown> | Placeholder<string, any>; status?: string | SQL<unknown> | Placeholder<...> | undefined; ... 19 more ...; closedAt?: Date | ... 3 more ... | undefined; }[]'.
      Type '{ title: any; description: any; status: any; priority: any; created_at: Date; updated_at: Date; }' is missing the following properties from type '{ title: string | SQL<unknown> | Placeholder<string, any>; caseNumber: string | SQL<unknown> | Placeholder<string, any>; status?: string | SQL<unknown> | Placeholder<...> | undefined; ... 19 more ...; closedAt?: Date | ... 3 more ... | undefined; }[]': length, pop, push, concat, and 35 more. 
[36m
        await db.insert(cases).values([35mnewCase[36m);
        results.imported++;
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\import\+server.ts[39m:201:15
[31mError[39m: Object literal may only specify known properties, but 'case_id' does not exist in type '{ title?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; evidenceType?: string | SQL<...> | PgColumn<...> | undefined; ... 26 more ...; uploadedAt?: Date | ... 2 more ... | undefined; }'. Did you mean to write 'caseId'? 
[36m            .set({
              [35mcase_id[36m: evidenceItem.case_id,
              type: evidenceItem.type,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\import\+server.ts[39m:227:42
[31mError[39m: No overload matches this call.
  Overload 1 of 2, '(value: { title: string | SQL<unknown> | Placeholder<string, any>; evidenceType: string | SQL<unknown> | Placeholder<string, any>; description?: string | SQL<...> | Placeholder<...> | null | undefined; ... 25 more ...; uploadedAt?: Date | ... 2 more ... | undefined; }): PgInsertBase<...>', gave the following error.
    Argument of type '{ case_id: any; type: any; description: any; file_path: any; metadata: any; created_at: Date; updated_at: Date; }' is not assignable to parameter of type '{ title: string | SQL<unknown> | Placeholder<string, any>; evidenceType: string | SQL<unknown> | Placeholder<string, any>; description?: string | SQL<unknown> | Placeholder<...> | null | undefined; ... 25 more ...; uploadedAt?: Date | ... 2 more ... | undefined; }'.
      Type '{ case_id: any; type: any; description: any; file_path: any; metadata: any; created_at: Date; updated_at: Date; }' is missing the following properties from type '{ title: string | SQL<unknown> | Placeholder<string, any>; evidenceType: string | SQL<unknown> | Placeholder<string, any>; description?: string | SQL<unknown> | Placeholder<...> | null | undefined; ... 25 more ...; uploadedAt?: Date | ... 2 more ... | undefined; }': title, evidenceType
  Overload 2 of 2, '(values: { title: string | SQL<unknown> | Placeholder<string, any>; evidenceType: string | SQL<unknown> | Placeholder<string, any>; description?: string | SQL<...> | Placeholder<...> | null | undefined; ... 25 more ...; uploadedAt?: Date | ... 2 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Argument of type '{ case_id: any; type: any; description: any; file_path: any; metadata: any; created_at: Date; updated_at: Date; }' is not assignable to parameter of type '{ title: string | SQL<unknown> | Placeholder<string, any>; evidenceType: string | SQL<unknown> | Placeholder<string, any>; description?: string | SQL<unknown> | Placeholder<...> | null | undefined; ... 25 more ...; uploadedAt?: Date | ... 2 more ... | undefined; }[]'.
      Type '{ case_id: any; type: any; description: any; file_path: any; metadata: any; created_at: Date; updated_at: Date; }' is missing the following properties from type '{ title: string | SQL<unknown> | Placeholder<string, any>; evidenceType: string | SQL<unknown> | Placeholder<string, any>; description?: string | SQL<unknown> | Placeholder<...> | null | undefined; ... 25 more ...; uploadedAt?: Date | ... 2 more ... | undefined; }[]': length, pop, push, concat, and 35 more. 
[36m
        await db.insert(evidence).values([35mnewEvidence[36m);
        results.imported++;
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\import\+server.ts[39m:274:15
[31mError[39m: Object literal may only specify known properties, and 'case_id' does not exist in type '{ firstName?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; lastName?: string | SQL<...> | PgColumn<...> | undefined; ... 24 more ...; notes?: string | ... 3 more ... | undefined; }'. 
[36m            .set({
              [35mcase_id[36m: participant.case_id,
              name: participant.name,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\import\+server.ts[39m:298:43
[31mError[39m: No overload matches this call.
  Overload 1 of 2, '(value: { firstName: string | SQL<unknown> | Placeholder<string, any>; lastName: string | SQL<unknown> | Placeholder<string, any>; email?: string | SQL<unknown> | Placeholder<...> | null | undefined; ... 23 more ...; notes?: string | ... 3 more ... | undefined; }): PgInsertBase<...>', gave the following error.
    Argument of type '{ case_id: any; name: any; role: any; contact_info: any; created_at: Date; updated_at: Date; }' is not assignable to parameter of type '{ firstName: string | SQL<unknown> | Placeholder<string, any>; lastName: string | SQL<unknown> | Placeholder<string, any>; email?: string | SQL<unknown> | Placeholder<...> | null | undefined; ... 23 more ...; notes?: string | ... 3 more ... | undefined; }'.
      Type '{ case_id: any; name: any; role: any; contact_info: any; created_at: Date; updated_at: Date; }' is missing the following properties from type '{ firstName: string | SQL<unknown> | Placeholder<string, any>; lastName: string | SQL<unknown> | Placeholder<string, any>; email?: string | SQL<unknown> | Placeholder<...> | null | undefined; ... 23 more ...; notes?: string | ... 3 more ... | undefined; }': firstName, lastName
  Overload 2 of 2, '(values: { firstName: string | SQL<unknown> | Placeholder<string, any>; lastName: string | SQL<unknown> | Placeholder<string, any>; email?: string | SQL<unknown> | Placeholder<...> | null | undefined; ... 23 more ...; notes?: string | ... 3 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Argument of type '{ case_id: any; name: any; role: any; contact_info: any; created_at: Date; updated_at: Date; }' is not assignable to parameter of type '{ firstName: string | SQL<unknown> | Placeholder<string, any>; lastName: string | SQL<unknown> | Placeholder<string, any>; email?: string | SQL<unknown> | Placeholder<...> | null | undefined; ... 23 more ...; notes?: string | ... 3 more ... | undefined; }[]'.
      Type '{ case_id: any; name: any; role: any; contact_info: any; created_at: Date; updated_at: Date; }' is missing the following properties from type '{ firstName: string | SQL<unknown> | Placeholder<string, any>; lastName: string | SQL<unknown> | Placeholder<string, any>; email?: string | SQL<unknown> | Placeholder<...> | null | undefined; ... 23 more ...; notes?: string | ... 3 more ... | undefined; }[]': length, pop, push, concat, and 35 more. 
[36m
        await db.insert(criminals).values([35mnewParticipant[36m);
        results.imported++;
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\import\+server.ts[39m:328:15
[31mError[39m: Argument of type 'any' is not assignable to parameter of type 'never'. 
[36m
    data.push([35mrow[36m);
  }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\legal\documents\+server.ts[39m:79:23
[31mError[39m: Argument of type 'SQL<unknown>' is not assignable to parameter of type 'never'. 
[36m    if (caseId) {
      conditions.push([35meq(legalDocuments.caseId, caseId)[36m);
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\legal\documents\+server.ts[39m:83:23
[31mError[39m: Argument of type 'SQL<unknown>' is not assignable to parameter of type 'never'. 
[36m    if (documentType) {
      conditions.push([35meq(legalDocuments.documentType, documentType)[36m);
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\legal\documents\+server.ts[39m:87:23
[31mError[39m: Argument of type 'SQL<unknown>' is not assignable to parameter of type 'never'. 
[36m    if (status) {
      conditions.push([35meq(legalDocuments.status, status)[36m);
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\legal\documents\+server.ts[39m:92:9
[31mError[39m: Argument of type 'SQL<unknown> | undefined' is not assignable to parameter of type 'never'.
  Type 'undefined' is not assignable to type 'never'. 
[36m      conditions.push(
        [35mor(
          like(legalDocuments.title, `%${search}%`),
          like(legalDocuments.content, `%${search}%`)
        )[36m
      );
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\pois\[id]\+server.ts[39m:37:9
[31mError[39m: Object literal may only specify known properties, and 'profileImageUrl' does not exist in type '{ name?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; status?: string | SQL<unknown> | PgColumn<...> | null | undefined; ... 10 more ...; relationship?: string | ... 3 more ... | undefined; }'. 
[36m        aliases: data.aliases,
        [35mprofileImageUrl[36m: data.profileImageUrl,
        profileData: data.profileData,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\qdrant\+server.ts[39m:44:37
[31mError[39m: Property 'syncFromPostgreSQL' does not exist on type '{ searchCases: (query: string, options?: SearchOptions) => Promise<any[]>; searchEvidence: (query: string, options?: SearchOptions) => Promise<any[]>; ... 5 more ...; collections: { ...; }; }'. 
[36m    // Sync embeddings to Qdrant
    const syncResult = await qdrant.[35msyncFromPostgreSQL[36m({
      collection,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\qdrant\+server.ts[39m:76:36
[31mError[39m: Property 'healthCheck' does not exist on type '{ searchCases: (query: string, options?: SearchOptions) => Promise<any[]>; searchEvidence: (query: string, options?: SearchOptions) => Promise<any[]>; ... 5 more ...; collections: { ...; }; }'. 
[36m    // Get Qdrant health status
    const isHealthy = await qdrant.[35mhealthCheck[36m();
    
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\qdrant\+server.ts[39m:86:38
[31mError[39m: Property 'listCollections' does not exist on type '{ searchCases: (query: string, options?: SearchOptions) => Promise<any[]>; searchEvidence: (query: string, options?: SearchOptions) => Promise<any[]>; ... 5 more ...; collections: { ...; }; }'. Did you mean 'collections'? 
[36m    // Get collection information
    const collections = await qdrant.[35mlistCollections[36m();
    const collectionInfo = await qdrant.getCollectionInfo(collection);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\qdrant\+server.ts[39m:87:41
[31mError[39m: Property 'getCollectionInfo' does not exist on type '{ searchCases: (query: string, options?: SearchOptions) => Promise<any[]>; searchEvidence: (query: string, options?: SearchOptions) => Promise<any[]>; ... 5 more ...; collections: { ...; }; }'. 
[36m    const collections = await qdrant.listCollections();
    const collectionInfo = await qdrant.[35mgetCollectionInfo[36m(collection);

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\qdrant\+server.ts[39m:143:33
[31mError[39m: Property 'createCollection' does not exist on type '{ searchCases: (query: string, options?: SearchOptions) => Promise<any[]>; searchEvidence: (query: string, options?: SearchOptions) => Promise<any[]>; ... 5 more ...; collections: { ...; }; }'. 
[36m    // Create collection
    const result = await qdrant.[35mcreateCollection[36m(name, {
      vectorSize,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\qdrant\+server.ts[39m:199:33
[31mError[39m: Property 'deleteCollection' does not exist on type '{ searchCases: (query: string, options?: SearchOptions) => Promise<any[]>; searchEvidence: (query: string, options?: SearchOptions) => Promise<any[]>; ... 5 more ...; collections: { ...; }; }'. 
[36m
    const result = await qdrant.[35mdeleteCollection[36m(collection);

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\qdrant\tag\+server.ts[39m:344:18
[31mError[39m: Object literal may only specify known properties, and 'any' does not exist in type '{ value: string; }'. 
[36m        key: 'evidenceType',
        match: { [35many[36m: filters.evidenceType }
      });
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\qdrant\tag\+server.ts[39m:351:18
[31mError[39m: Object literal may only specify known properties, and 'any' does not exist in type '{ value: string; }'. 
[36m        key: 'legalRelevance',
        match: { [35many[36m: filters.legalRelevance }
      });
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\qdrant\tag\+server.ts[39m:365:18
[31mError[39m: Object literal may only specify known properties, and 'any' does not exist in type '{ value: string; }'. 
[36m        key: 'tags',
        match: { [35many[36m: filters.tags }
      });
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\qdrant\tag\+server.ts[39m:446:22
[31mError[39m: Argument of type '{ batchIndex: number; count: number; operation_id: string; status: string; }' is not assignable to parameter of type 'never'. 
[36m
        results.push([35m{
          batchIndex: Math.floor(i / batchSize),
          count: batch.length,
          operation_id: response.operation_id,
          status: response.status
        }[36m);

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\qdrant\tag\+server.ts[39m:454:21
[31mError[39m: Argument of type '{ batchIndex: number; error: string; }' is not assignable to parameter of type 'never'. 
[36m      } catch (error) {
        errors.push([35m{
          batchIndex: Math.floor(i / batchSize),
          error: error instanceof Error ? error.message : 'Unknown error'
        }[36m);
      }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\qdrant\tag\+server.ts[39m:716:54
[31mError[39m: Type 'string | null' is not assignable to type 'string | undefined'.
  Type 'null' is not assignable to type 'string | undefined'. 
[36m      case 'list_documents':
        return await listDocuments(session.userId, { [35mcaseId[36m, limit });
      
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\reports\+server.ts[39m:84:7
[31mError[39m: Type 'Omit<PgSelectBase<"reports", { count: SQL<number>; }, "partial", Record<"reports", "not-null">, false, "where", { count: number; }[], { count: DrizzleTypeError<"You cannot reference this field without assigning it an alias first - use `.as(<alias>)`">; }>, "where">' is missing the following properties from type 'PgSelectBase<"reports", { count: SQL<number>; }, "partial", Record<"reports", "not-null">, false, never, { count: number; }[], { count: DrizzleTypeError<"You cannot reference this field without assigning it an alias first - use `.as(<alias>)`">; }>': config, joinsNotNullableMap, tableName, isPartialSelect, and 6 more. 
[36m    if (conditions.length > 0) {
      [35mcountQuery[36m = countQuery.where(and(...conditions));
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\reports\[reportId]\export\pdf\+server.ts[39m:60:40
[31mError[39m: Property 'wordCount' does not exist on type '{ id: string; caseId: string | null; title: string; content: string | null; reportType: string | null; status: string | null; isPublic: boolean | null; tags: unknown; metadata: unknown; createdBy: string | null; createdAt: Date; updatedAt: Date; }'. 
[36m      options: exportOptions,
      estimatedPages: Math.ceil(report.[35mwordCount[36m / 250), // Rough estimate
      fileSize: "~2.5MB", // Placeholder
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\reports\save\+server.ts[39m:84:21
[31mError[39m: Property 'where' does not exist on type 'Omit<PgSelectBase<"ai_reports", { id: PgColumn<{ name: "id"; tableName: "ai_reports"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; ... 5 more ...; generated: undefined; }, {}, {}>; ... 12 more ...; updatedAt: PgColumn<...>; }, ... 5...'. 
[36m    if (reportType) {
      query = query.[35mwhere[36m(
        and(eq(aiReports.caseId, caseId), eq(aiReports.reportType, reportType))
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\search\cases\+server.ts[39m:10:14
[31mError[39m: Module '"../../../../lib/server/db/index"' has no exported member 'isPostgreSQL'. 
[36m} from "../../../../lib/server/cache/redis";
import { db, [35misPostgreSQL[36m } from "../../../../lib/server/db/index";
import type { RequestHandler } from "./$types";
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\search\cases\+server.ts[39m:60:9
[31mError[39m: Type 'any[]' is not assignable to type 'never[]'.
  Type 'any' is not assignable to type 'never'. 
[36m      case "text":
        [35mresults[36m = await searchCasesText(query, limit + offset, filters);
        break;
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\search\cases\+server.ts[39m:65:11
[31mError[39m: Type 'any[]' is not assignable to type 'never[]'.
  Type 'any' is not assignable to type 'never'. 
[36m        if (isPostgreSQL()) {
          [35mresults[36m = await searchCasesSemantic(query, limit + offset, filters);
        } else {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\search\cases\+server.ts[39m:68:11
[31mError[39m: Type 'any[]' is not assignable to type 'never[]'.
  Type 'any' is not assignable to type 'never'. 
[36m          // Fallback to text search in development
          [35mresults[36m = await searchCasesText(query, limit + offset, filters);
        }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\search\cases\+server.ts[39m:75:11
[31mError[39m: Type 'any[]' is not assignable to type 'never[]'.
  Type 'any' is not assignable to type 'never'. 
[36m        if (isPostgreSQL()) {
          [35mresults[36m = await searchCasesHybrid(query, limit + offset, filters);
        } else {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\search\cases\+server.ts[39m:78:11
[31mError[39m: Type 'any[]' is not assignable to type 'never[]'.
  Type 'any' is not assignable to type 'never'. 
[36m          // Fallback to text search in development
          [35mresults[36m = await searchCasesText(query, limit + offset, filters);
        }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\search\cases\+server.ts[39m:202:15
[31mError[39m: Argument of type '{ searchScore: SQL<number>; _: { readonly brand: "Table"; readonly config: { name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; ... 10 more ...; generated: undefined; }, {}, {}>; ... 24 more ...; closedAt: PgColumn<...>; }; dialect: "...' is not assignable to parameter of type 'SelectedFields'.
  Property '_' is incompatible with index signature.
    Type '{ readonly brand: "Table"; readonly config: { name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; ... 8 more ...; generated: undefined; }, {}, {}>; ... 24 more ...; closedAt: PgColumn<...>; }; dialect...' is not assignable to type 'SQL<unknown> | Aliased<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | PgTable<TableConfig> | SelectedFieldsFlat<...>'.
      Type '{ readonly brand: "Table"; readonly config: { name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; ... 8 more ...; generated: undefined; }, {}, {}>; ... 24 more ...; closedAt: PgColumn<...>; }; dialect...' is not assignable to type 'SelectedFieldsFlat<PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>>'.
        Property 'brand' is incompatible with index signature.
          Type 'string' is not assignable to type 'SQL<unknown> | Aliased<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>'. 
[36m    const results = await db
      .select([35m{
        ...cases,
        searchScore: sql<number>`1 - (${cases.titleEmbedding} <=> ${JSON.stringify(embedding)}::vector)`,
      }[36m)
      .from(cases)
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\search\evidence\+server.ts[39m:29:9
[31mError[39m: Type '{ id: string; caseId: string | null; title: string; description: string | null; evidenceType: string; fileName: string | null; fileUrl: string | null; tags: unknown; summary: string | null; uploadedAt: Date; similarity: number; searchType: string; }[]' is not assignable to type 'never[]'.
  Type '{ id: string; caseId: string | null; title: string; description: string | null; evidenceType: string; fileName: string | null; fileUrl: string | null; tags: unknown; summary: string | null; uploadedAt: Date; similarity: number; searchType: string; }' is not assignable to type 'never'. 
[36m        // Fast metadata search
        [35mresults[36m = await searchEvidenceText(query, {
          caseId,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\search\evidence\+server.ts[39m:38:9
[31mError[39m: Type '{ similarity: any; searchType: "content"; contentMatch: any; id: string; caseId: string | null; title: string; description: string | null; evidenceType: string; fileName: string | null; fileUrl: string | null; tags: unknown; summary: string | null; uploadedAt: Date; }[] | { ...; }[]' is not assignable to type 'never[]'.
  Type '{ similarity: any; searchType: "content"; contentMatch: any; id: string; caseId: string | null; title: string; description: string | null; evidenceType: string; fileName: string | null; fileUrl: string | null; tags: unknown; summary: string | null; uploadedAt: Date; }[]' is not assignable to type 'never[]'.
    Type '{ similarity: any; searchType: "content"; contentMatch: any; id: string; caseId: string | null; title: string; description: string | null; evidenceType: string; fileName: string | null; fileUrl: string | null; tags: unknown; summary: string | null; uploadedAt: Date; }' is not assignable to type 'never'. 
[36m        // Deep content search using Qdrant
        [35mresults[36m = await searchEvidenceContent(query, {
          caseId,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\search\evidence\+server.ts[39m:47:9
[31mError[39m: Type '{ id: string; caseId: string | null; title: string; description: string | null; evidenceType: string; fileName: string | null; fileUrl: string | null; tags: unknown; summary: string | null; uploadedAt: Date; similarity: number; searchType: string; }[]' is not assignable to type 'never[]'.
  Type '{ id: string; caseId: string | null; title: string; description: string | null; evidenceType: string; fileName: string | null; fileUrl: string | null; tags: unknown; summary: string | null; uploadedAt: Date; similarity: number; searchType: string; }' is not assignable to type 'never'. 
[36m        // PostgreSQL vector search
        [35mresults[36m = await searchEvidenceSemantic(query, {
          caseId,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\search\evidence\+server.ts[39m:57:9
[31mError[39m: Type 'any[]' is not assignable to type 'never[]'.
  Type 'any' is not assignable to type 'never'. 
[36m        // Best of all worlds
        [35mresults[36m = await searchEvidenceHybrid(query, {
          caseId,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\search\evidence\+server.ts[39m:92:24
[31mError[39m: Argument of type 'SQL<unknown> | undefined' is not assignable to parameter of type 'never'.
  Type 'undefined' is not assignable to type 'never'. 
[36m  );
  whereConditions.push([35mtextSearch[36m);

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\search\evidence\+server.ts[39m:95:36
[31mError[39m: Argument of type 'SQL<unknown>' is not assignable to parameter of type 'never'. 
[36m  // Apply filters
  if (caseId) whereConditions.push([35msql`${evidence.caseId} = ${caseId}`[36m);
  if (evidenceType)
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\search\evidence\+server.ts[39m:97:26
[31mError[39m: Argument of type 'SQL<unknown>' is not assignable to parameter of type 'never'. 
[36m  if (evidenceType)
    whereConditions.push([35msql`${evidence.evidenceType} = ${evidenceType}`[36m);

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\search\evidence\+server.ts[39m:184:43
[31mError[39m: Property 'contentEmbedding' does not exist on type 'PgTableWithColumns<{ name: "evidence"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "evidence"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 27 more ...; updatedAt: PgColumn<....'. 
[36m
  const whereConditions = [sql`${evidence.[35mcontentEmbedding[36m} IS NOT NULL`];

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\search\evidence\+server.ts[39m:202:47
[31mError[39m: Property 'contentEmbedding' does not exist on type 'PgTableWithColumns<{ name: "evidence"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "evidence"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 27 more ...; updatedAt: PgColumn<....'. 
[36m      uploadedAt: evidence.uploadedAt,
      similarity: sql<number>`1 - (${evidence.[35mcontentEmbedding[36m} <=> ${queryEmbedding})`,
      searchType: sql<string>`'semantic'`,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\search\evidence\+server.ts[39m:207:29
[31mError[39m: Property 'contentEmbedding' does not exist on type 'PgTableWithColumns<{ name: "evidence"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "evidence"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 27 more ...; updatedAt: PgColumn<....'. 
[36m    .where(and(...whereConditions))
    .orderBy(sql`${evidence.[35mcontentEmbedding[36m} <=> ${queryEmbedding}`)
    .limit(limit);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\upload\+server.ts[39m:195:18
[31mError[39m: Cannot find name 'Bun'. Do you need to install type definitions for Bun? Try `npm i --save-dev @types/bun`. 
[36m    // Read and serve file
    const file = [35mBun[36m.file(fullPath);
    return new Response(file);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\users\+server.ts[39m:45:9
[31mError[39m: Argument of type 'SQL<unknown> | undefined' is not assignable to parameter of type 'never'.
  Type 'undefined' is not assignable to type 'never'. 
[36m      filters.push(
        [35mor(
          like(users.name, `%${search}%`),
          like(users.firstName, `%${search}%`),
          like(users.lastName, `%${search}%`),
          like(users.email, `%${search}%`)
        )[36m
      );
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\users\+server.ts[39m:56:20
[31mError[39m: Argument of type 'SQL<unknown>' is not assignable to parameter of type 'never'. 
[36m    if (role) {
      filters.push([35meq(users.role, role)[36m);
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\users\+server.ts[39m:61:20
[31mError[39m: Argument of type 'SQL<unknown>' is not assignable to parameter of type 'never'. 
[36m    if (isActive !== null) {
      filters.push([35meq(users.isActive, isActive === 'true')[36m);
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\users\+server.ts[39m:66:7
[31mError[39m: Type 'Omit<PgSelectBase<"users", { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 8 more ...; updatedAt: PgColumn<....' is missing the following properties from type 'PgSelectBase<"users", { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 8 more ...; updatedAt: PgColumn<...>; ...': config, joinsNotNullableMap, tableName, isPartialSelect, and 6 more. 
[36m    if (filters.length > 0) {
      [35mquery[36m = query.where(and(...filters));
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\users\+server.ts[39m:76:5
[31mError[39m: Type 'Omit<PgSelectBase<"users", { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 8 more ...; updatedAt: PgColumn<....' is missing the following properties from type 'PgSelectBase<"users", { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 8 more ...; updatedAt: PgColumn<...>; ...': config, joinsNotNullableMap, tableName, isPartialSelect, and 6 more. 
[36m
    [35mquery[36m = query.orderBy(
      sortOrder === "asc" ? orderColumn : desc(orderColumn)
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\users\+server.ts[39m:81:5
[31mError[39m: Type 'Omit<PgSelectBase<"users", { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 8 more ...; updatedAt: PgColumn<....' is missing the following properties from type 'PgSelectBase<"users", { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>; ... 8 more ...; updatedAt: PgColumn<...>; ...': config, joinsNotNullableMap, tableName, isPartialSelect, and 7 more. 
[36m    // Add pagination
    [35mquery[36m = query.limit(limit).offset(offset);

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\users\+server.ts[39m:88:7
[31mError[39m: Type 'Omit<PgSelectBase<"users", { count: SQL<number>; }, "partial", Record<"users", "not-null">, false, "where", { count: number; }[], { count: DrizzleTypeError<"You cannot reference this field without assigning it an alias first - use `.as(<alias>)`">; }>, "where">' is missing the following properties from type 'PgSelectBase<"users", { count: SQL<number>; }, "partial", Record<"users", "not-null">, false, never, { count: number; }[], { count: DrizzleTypeError<"You cannot reference this field without assigning it an alias first - use `.as(<alias>)`">; }>': config, joinsNotNullableMap, tableName, isPartialSelect, and 6 more. 
[36m    if (filters.length > 0) {
      [35mcountQuery[36m = countQuery.where(and(...filters));
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\users\[userId]\+server.ts[39m:265:15
[31mError[39m: 'locals.user' is possibly 'null'. 
[36m        if (key !== "operation") {
          if ([35mlocals.user[36m.role === 'admin' || locals.user.id === userId) {
            // Allow basic profile updates for own account
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\users\[userId]\+server.ts[39m:265:47
[31mError[39m: 'locals.user' is possibly 'null'. 
[36m        if (key !== "operation") {
          if (locals.user.role === 'admin' || [35mlocals.user[36m.id === userId) {
            // Allow basic profile updates for own account
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\users\[userId]\+server.ts[39m:269:24
[31mError[39m: 'locals.user' is possibly 'null'. 
[36m              updateData[key] = data[key];
            } else if ([35mlocals.user[36m.role === 'admin') {
              // Admin can update any field
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\api\vector-search\+server.ts[39m:15:38
[31mError[39m: Property 'search' does not exist on type '{ searchCases: (query: string, options?: SearchOptions) => Promise<any[]>; searchEvidence: (query: string, options?: SearchOptions) => Promise<any[]>; ... 5 more ...; collections: { ...; }; }'. 
[36m  // 2. Search with Qdrant (advanced, for more complex queries)
  const qdrantResults = await qdrant.[35msearch[36m('cases', {
    vector: embedding,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+layout.server.ts[39m:11:32
[31mError[39m: Property 'auth' does not exist on type 'Locals'. 
[36m  // Check Lucia session
  const session = await locals.[35mauth[36m.validate();
  if (!session) throw redirect(303, "/login");
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+layout.server.ts[39m:22:37
[31mError[39m: Property 'prosecutor' does not exist on type 'PgTableWithColumns<{ name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 24 more ...; closedAt: PgColumn<...>; };...'. 
[36m  // Build where conditions
  const whereConditions = [eq(cases.[35mprosecutor[36m, session.user.userId)];

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+layout.server.ts[39m:26:7
[31mError[39m: Argument of type 'SQL<unknown> | undefined' is not assignable to parameter of type 'SQL<unknown>'.
  Type 'undefined' is not assignable to type 'SQL<unknown>'. 
[36m    whereConditions.push(
      [35mor(
        like(cases.title, `%${searchQuery}%`),
        like(cases.description, `%${searchQuery}%`),
        like(cases.caseNumber, `%${searchQuery}%`)
      )[36m
    );
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+layout.server.ts[39m:43:67
[31mError[39m: Property 'openedAt' does not exist on type 'PgTableWithColumns<{ name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 24 more ...; closedAt: PgColumn<...>; };...'. 
[36m  // Determine sort order
  const sortColumn = cases[sortBy as keyof typeof cases] || cases.[35mopenedAt[36m;
  const orderBy = sortOrder === "asc" ? sortColumn : desc(sortColumn);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+layout.server.ts[39m:54:23
[31mError[39m: Property 'openedAt' does not exist on type 'PgTableWithColumns<{ name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 24 more ...; closedAt: PgColumn<...>; };...'. 
[36m      priority: cases.priority,
      openedAt: cases.[35mopenedAt[36m,
      description: cases.description,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+layout.server.ts[39m:58:25
[31mError[39m: Property 'prosecutor' does not exist on type 'PgTableWithColumns<{ name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 24 more ...; closedAt: PgColumn<...>; };...'. 
[36m      metadata: cases.metadata,
      prosecutor: cases.[35mprosecutor[36m,
      defendantName: cases.defendantName,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+layout.server.ts[39m:59:28
[31mError[39m: Property 'defendantName' does not exist on type 'PgTableWithColumns<{ name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 24 more ...; closedAt: PgColumn<...>; };...'. 
[36m      prosecutor: cases.prosecutor,
      defendantName: cases.[35mdefendantName[36m,
      courtDate: cases.courtDate,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+layout.server.ts[39m:60:24
[31mError[39m: Property 'courtDate' does not exist on type 'PgTableWithColumns<{ name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 24 more ...; closedAt: PgColumn<...>; };...'. 
[36m      defendantName: cases.defendantName,
      courtDate: cases.[35mcourtDate[36m,
      evidenceCount: cases.evidenceCount,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+layout.server.ts[39m:61:28
[31mError[39m: Property 'evidenceCount' does not exist on type 'PgTableWithColumns<{ name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 24 more ...; closedAt: PgColumn<...>; };...'. 
[36m      courtDate: cases.courtDate,
      evidenceCount: cases.[35mevidenceCount[36m,
    })
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+layout.server.ts[39m:75:21
[31mError[39m: Property 'prosecutor' does not exist on type 'PgTableWithColumns<{ name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 24 more ...; closedAt: PgColumn<...>; };...'. 
[36m    .from(cases)
    .where(eq(cases.[35mprosecutor[36m, session.user.userId))
    .groupBy(cases.status);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+layout.server.ts[39m:94:34
[31mError[39m: Property 'auth' does not exist on type 'Locals'. 
[36m  filter: async ({ request, locals, url }) => {
    const session = await locals.[35mauth[36m.validate();
    if (!session) throw redirect(303, "/login");
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+layout.server.ts[39m:105:39
[31mError[39m: Property 'prosecutor' does not exist on type 'PgTableWithColumns<{ name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 24 more ...; closedAt: PgColumn<...>; };...'. 
[36m    // Build where conditions
    const whereConditions = [eq(cases.[35mprosecutor[36m, session.user.userId)];

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+layout.server.ts[39m:109:9
[31mError[39m: Argument of type 'SQL<unknown> | undefined' is not assignable to parameter of type 'SQL<unknown>'.
  Type 'undefined' is not assignable to type 'SQL<unknown>'. 
[36m      whereConditions.push(
        [35mor(
          like(cases.title, `%${searchQuery}%`),
          like(cases.description, `%${searchQuery}%`),
          like(cases.caseNumber, `%${searchQuery}%`)
        )[36m
      );
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+layout.server.ts[39m:126:69
[31mError[39m: Property 'openedAt' does not exist on type 'PgTableWithColumns<{ name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 24 more ...; closedAt: PgColumn<...>; };...'. 
[36m    // Determine sort order
    const sortColumn = cases[sortBy as keyof typeof cases] || cases.[35mopenedAt[36m;
    const orderBy = sortOrder === "asc" ? sortColumn : desc(sortColumn);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+layout.server.ts[39m:137:25
[31mError[39m: Property 'openedAt' does not exist on type 'PgTableWithColumns<{ name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 24 more ...; closedAt: PgColumn<...>; };...'. 
[36m        priority: cases.priority,
        openedAt: cases.[35mopenedAt[36m,
        description: cases.description,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+layout.server.ts[39m:141:27
[31mError[39m: Property 'prosecutor' does not exist on type 'PgTableWithColumns<{ name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 24 more ...; closedAt: PgColumn<...>; };...'. 
[36m        metadata: cases.metadata,
        prosecutor: cases.[35mprosecutor[36m,
        defendantName: cases.defendantName,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+layout.server.ts[39m:142:30
[31mError[39m: Property 'defendantName' does not exist on type 'PgTableWithColumns<{ name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 24 more ...; closedAt: PgColumn<...>; };...'. 
[36m        prosecutor: cases.prosecutor,
        defendantName: cases.[35mdefendantName[36m,
        courtDate: cases.courtDate,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+layout.server.ts[39m:143:26
[31mError[39m: Property 'courtDate' does not exist on type 'PgTableWithColumns<{ name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 24 more ...; closedAt: PgColumn<...>; };...'. 
[36m        defendantName: cases.defendantName,
        courtDate: cases.[35mcourtDate[36m,
        evidenceCount: cases.evidenceCount,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+layout.server.ts[39m:144:30
[31mError[39m: Property 'evidenceCount' does not exist on type 'PgTableWithColumns<{ name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 24 more ...; closedAt: PgColumn<...>; };...'. 
[36m        courtDate: cases.courtDate,
        evidenceCount: cases.[35mevidenceCount[36m,
      })
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+layout.server.ts[39m:166:34
[31mError[39m: Property 'auth' does not exist on type 'Locals'. 
[36m  updateStatus: async ({ request, locals }) => {
    const session = await locals.[35mauth[36m.validate();
    if (!session) throw redirect(303, "/login");
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+layout.server.ts[39m:177:44
[31mError[39m: Property 'prosecutor' does not exist on type 'PgTableWithColumns<{ name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 24 more ...; closedAt: PgColumn<...>; };...'. 
[36m      .where(
        and(eq(cases.id, caseId), eq(cases.[35mprosecutor[36m, session.user.userId))
      );
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+layout.server.ts[39m:185:34
[31mError[39m: Property 'auth' does not exist on type 'Locals'. 
[36m  archive: async ({ request, locals }) => {
    const session = await locals.[35mauth[36m.validate();
    if (!session) throw redirect(303, "/login");
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+layout.server.ts[39m:195:44
[31mError[39m: Property 'prosecutor' does not exist on type 'PgTableWithColumns<{ name: "cases"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "cases"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 24 more ...; closedAt: PgColumn<...>; };...'. 
[36m      .where(
        and(eq(cases.id, caseId), eq(cases.[35mprosecutor[36m, session.user.userId))
      );
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+page.server.ts[39m:56:34
[31mError[39m: Property 'auth' does not exist on type 'Locals'. 
[36m  addEvidence: async ({ request, locals }) => {
    const session = await locals.[35mauth[36m.validate();
    if (!session) {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+page.server.ts[39m:74:10
[31mError[39m: No overload matches this call.
  Overload 1 of 2, '(value: { title: string | SQL<unknown> | Placeholder<string, any>; evidenceType: string | SQL<unknown> | Placeholder<string, any>; description?: string | SQL<...> | Placeholder<...> | null | undefined; ... 35 more ...; uploadedAt?: Date | ... 2 more ... | undefined; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'type' does not exist in type '{ title: string | SQL<unknown> | Placeholder<string, any>; evidenceType: string | SQL<unknown> | Placeholder<string, any>; description?: string | SQL<unknown> | Placeholder<...> | null | undefined; ... 35 more ...; uploadedAt?: Date | ... 2 more ... | undefined; }'.
  Overload 2 of 2, '(values: { title: string | SQL<unknown> | Placeholder<string, any>; evidenceType: string | SQL<unknown> | Placeholder<string, any>; description?: string | SQL<...> | Placeholder<...> | null | undefined; ... 35 more ...; uploadedAt?: Date | ... 2 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'caseId' does not exist in type '{ title: string | SQL<unknown> | Placeholder<string, any>; evidenceType: string | SQL<unknown> | Placeholder<string, any>; description?: string | SQL<unknown> | Placeholder<...> | null | undefined; ... 35 more ...; uploadedAt?: Date | ... 2 more ... | undefined; }[]'. 
[36m        .insert(evidence)
        .[35mvalues[36m({
          caseId,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+page.server.ts[39m:93:34
[31mError[39m: Property 'auth' does not exist on type 'Locals'. 
[36m  updateEvidence: async ({ request, locals }) => {
    const session = await locals.[35mauth[36m.validate();
    if (!session) {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+page.server.ts[39m:114:11
[31mError[39m: Object literal may only specify known properties, and 'type' does not exist in type '{ title?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; evidenceType?: string | SQL<...> | PgColumn<...> | undefined; ... 36 more ...; uploadedAt?: Date | ... 2 more ... | undefined; }'. 
[36m          description,
          [35mtype[36m,
          updatedAt: new Date(),
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+page.server.ts[39m:129:34
[31mError[39m: Property 'auth' does not exist on type 'Locals'. 
[36m  deleteEvidence: async ({ request, locals }) => {
    const session = await locals.[35mauth[36m.validate();
    if (!session) {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\evidence\+page.server.ts[39m:55:9
[31mError[39m: Property 'where' is missing in type 'Omit<import("c:/Users/james/Desktop/web-app/sveltekit-frontend/node_modules/drizzle-orm/pg-core/query-builders/select").PgSelectBase<"evidence", { id: import("c:/Users/james/Desktop/web-app/sveltekit-frontend/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<{ name: "id"; tableName: "evidence"; dataType: "s...' but required in type 'Omit<import("c:/Users/james/Desktop/web-app/sveltekit-frontend/node_modules/drizzle-orm/pg-core/query-builders/select").PgSelectBase<"evidence", { id: import("c:/Users/james/Desktop/web-app/sveltekit-frontend/node_modules/drizzle-orm/pg-core/columns/common").PgColumn<{ name: "id"; tableName: "evidence"; dataType: "s...'. 
[36m      if (caseId) {
        [35mquery[36m = query.where(eq(evidence.caseId, caseId));
      }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\evidence\+page.server.ts[39m:58:7
[31mError[39m: Type '{ id: string; caseId: string | null; criminalId: string | null; title: string; description: string | null; evidenceType: string; fileType: string | null; subType: string | null; fileUrl: string | null; ... 19 more ...; updatedAt: Date; }[]' is not assignable to type 'null'. 
[36m
      [35mevidenceData[36m = await query.execute();

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\evidence\+page.server.ts[39m:73:33
[31mError[39m: Property 'length' does not exist on type 'never'. 
[36m      caseId,
      totalCount: evidenceData?.[35mlength[36m || 0,
      hasMore: evidenceData?.length === limit,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\evidence\+page.server.ts[39m:74:30
[31mError[39m: Property 'length' does not exist on type 'never'. 
[36m      totalCount: evidenceData?.length || 0,
      hasMore: evidenceData?.[35mlength[36m === limit,
    };
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\evidence\+page.server.ts[39m:85:24
[31mError[39m: No overload matches this call.
  Overload 1 of 2, '(adapter: ValidationAdapter<Record<string, unknown>, Record<string, unknown>>, options?: Partial<{ errors: boolean; id: string; preprocessed: string[]; defaults: Record<string, unknown>; jsonSchema: JSONSchema7; strict: boolean; allowFiles: boolean; transport: Transport; }> | undefined): Promise<...>', gave the following error.
    Argument of type 'Request' is not assignable to parameter of type 'ValidationAdapter<Record<string, unknown>, Record<string, unknown>>'.
      Type 'Request' is missing the following properties from type 'ClientValidationAdapter<Record<string, unknown>, Record<string, unknown>>': superFormValidationLibrary, validate
  Overload 2 of 2, '(data: SuperValidateData<Record<string, unknown>>, adapter: ValidationAdapter<Record<string, unknown>, Record<string, unknown>>, options?: Partial<...> | undefined): Promise<...>', gave the following error.
    Argument of type 'ZodObject<{ id: ZodOptional<ZodString>; title: ZodString; description: ZodOptional<ZodString>; type: ZodEnum<["document", "image", "video", "audio", "other"]>; ... 4 more ...; metadata: ZodOptional<...>; }, "strip", ZodTypeAny, { ...; }, { ...; }>' is not assignable to parameter of type 'ValidationAdapter<Record<string, unknown>, Record<string, unknown>>'.
      Type 'ZodObject<{ id: ZodOptional<ZodString>; title: ZodString; description: ZodOptional<ZodString>; type: ZodEnum<["document", "image", "video", "audio", "other"]>; ... 4 more ...; metadata: ZodOptional<...>; }, "strip", ZodTypeAny, { ...; }, { ...; }>' is missing the following properties from type 'ClientValidationAdapter<Record<string, unknown>, Record<string, unknown>>': superFormValidationLibrary, validate 
[36m  save: async ({ request }) => {
    const form = await [35msuperValidate[36m(request, evidenceSchema);

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\evidence\+page.server.ts[39m:102:18
[31mError[39m: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "id"; tableName: "evidence"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: string | SQLWrapper): SQL<...>', gave the following error.
    Argument of type '{}' is not assignable to parameter of type 'string | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<{}>, right: {} | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "evidence"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<{}>'.
      Type 'PgColumn<{ name: "id"; tableName: "evidence"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<{}>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "evidence"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'. 
[36m          })
          .where([35meq[36m(evidence.id, id));
      } else {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\evidence\+page.server.ts[39m:107:11
[31mError[39m: No overload matches this call.
  Overload 1 of 2, '(value: { title: string | SQL<unknown> | Placeholder<string, any>; evidenceType: string | SQL<unknown> | Placeholder<string, any>; description?: string | SQL<...> | Placeholder<...> | null | undefined; ... 25 more ...; uploadedAt?: Date | ... 2 more ... | undefined; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'createdAt' does not exist in type '{ title: string | SQL<unknown> | Placeholder<string, any>; evidenceType: string | SQL<unknown> | Placeholder<string, any>; description?: string | SQL<unknown> | Placeholder<...> | null | undefined; ... 25 more ...; uploadedAt?: Date | ... 2 more ... | undefined; }'.
  Overload 2 of 2, '(values: { title: string | SQL<unknown> | Placeholder<string, any>; evidenceType: string | SQL<unknown> | Placeholder<string, any>; description?: string | SQL<...> | Placeholder<...> | null | undefined; ... 25 more ...; uploadedAt?: Date | ... 2 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'createdAt' does not exist in type '{ title: string | SQL<unknown> | Placeholder<string, any>; evidenceType: string | SQL<unknown> | Placeholder<string, any>; description?: string | SQL<unknown> | Placeholder<...> | null | undefined; ... 25 more ...; uploadedAt?: Date | ... 2 more ... | undefined; }[]'. 
[36m          ...data,
          [35mcreatedAt[36m: new Date(),
          updatedAt: new Date(),
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\interactive-canvas\+page.server.ts[39m:30:30
[31mError[39m: Property 'reportId' does not exist on type 'PgTableWithColumns<{ name: "canvas_states"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "canvas_states"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 7 more ...; updatedAt: PgColumn<...>; }; d...'. 
[36m      .from(canvasStates)
      .where(eq(canvasStates.[35mreportId[36m, reportId))
      .limit(1);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\interactive-canvas\+page.server.ts[39m:34:7
[31mError[39m: Type 'unknown' is not assignable to type 'null'. 
[36m    if (canvasStateResult) {
      [35mcanvasState[36m = canvasStateResult.canvasData;
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\interactive-canvas\+page.server.ts[39m:50:5
[31mError[39m: Type '{ id: string; caseNumber: string; title: string; name: string | null; description: string | null; incidentDate: Date | null; location: string | null; priority: string; status: string; ... 13 more ...; closedAt: Date | null; }' is not assignable to type 'null'. 
[36m
    [35mreportData[36m = caseResult;
  }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\Dialog.svelte[39m:182:19
[31mError[39m: Expected 1 arguments, but got 0. (ts)
[36m		transition:fade={{ duration: 200 }}
		on:click={() => [35mhandleBackdropClick[36m()}
		on:keydown={handleKeydown}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\AccessibilityPanel.svelte[39m:477:3
[33mWarn[39m: Elements with the 'dialog' interactive role must have a tabindex value
https://svelte.dev/e/a11y_interactive_supports_focus (svelte)
[36m{#if showPanel}
  [35m<div
    class="fixed inset-0 bg-black/50 z-50"
    on:click={() => (showPanel = false)}
    on:keydown={(e) => e.key === 'Escape' && (showPanel = false)}
    role="dialog"
    aria-modal="true"
    aria-labelledby="accessibility-panel-title"
  >
    <div
      class="fixed right-0 top-0 h-full w-96 bg-base-100 shadow-xl overflow-y-auto"
      on:click|stopPropagation
      role="document"
    >
      <div class="p-6">
        <div class="flex justify-between items-center mb-6">
          <h2 id="accessibility-panel-title" class="text-xl font-bold">Accessibility Panel</h2>
          <Button
            variant="ghost"
            size="sm"
            on:click={() => (showPanel = false)}
            aria-label="Close accessibility panel"
          >
            Γ£ò
          </Button>
        </div>

        <!-- Accessibility Settings -->
        <div class="space-y-4 mb-6">
          <h3 class="font-semibold text-lg">Accessibility Settings</h3>

          <div class="space-y-3">
            <label class="flex items-center gap-3 cursor-pointer">
              <input
                type="checkbox"
                class="checkbox"
                bind:checked={highContrast}
                on:change={applyAccessibilitySettings}
              />
              <span>High Contrast</span>
            </label>

            <label class="flex items-center gap-3 cursor-pointer">
              <input
                type="checkbox"
                class="checkbox"
                bind:checked={reducedMotion}
                on:change={applyAccessibilitySettings}
              />
              <span>Reduced Motion</span>
            </label>

            <label class="flex items-center gap-3 cursor-pointer">
              <input
                type="checkbox"
                class="checkbox"
                bind:checked={largeText}
                on:change={applyAccessibilitySettings}
              />
              <span>Large Text</span>
            </label>

            <label class="flex items-center gap-3 cursor-pointer">
              <input
                type="checkbox"
                class="checkbox"
                bind:checked={keyboardNavigation}
                on:change={applyAccessibilitySettings}
              />
              <span>Enhanced Keyboard Navigation</span>
            </label>

            <label class="flex items-center gap-3 cursor-pointer">
              <input
                type="checkbox"
                class="checkbox"
                bind:checked={screenReaderMode}
                on:change={applyAccessibilitySettings}
              />
              <span>Screen Reader Optimizations</span>
            </label>
          </div>
        </div>

        <!-- Audit Section -->
        <div class="border-t pt-6">
          <div class="flex justify-between items-center mb-4">
            <h3 class="font-semibold text-lg">Accessibility Audit</h3>
            <Button
              size="sm"
              on:click={() => runAccessibilityAudit()}
              disabled={isAuditing}
              class="gap-2"
            >
              {#if isAuditing}
                <div class="loading loading-spinner loading-xs"></div>
                Auditing...
              {:else}
                <RefreshCw class="w-4 h-4" />
                Run Audit
              {/if}
            </Button>
          </div>

          {#if isAuditing}
            <div class="space-y-2 mb-4">
              <div class="flex justify-between text-sm">
                <span>Scanning page...</span>
                <span>{Math.round(auditProgress)}%</span>
              </div>
              <progress
                class="progress progress-primary w-full"
                value={auditProgress}
                max="100"
              ></progress>
            </div>
          {/if}

          {#if auditResults.length > 0}
            <!-- Audit Summary -->
            <div class="bg-base-200 rounded-lg p-4 mb-4">
              <h4 class="font-medium mb-2">Audit Summary</h4>
              <div class="grid grid-cols-2 gap-2 text-sm">
                <div class="flex items-center gap-2">
                  <XCircle class="w-4 h-4 text-error" />
                  <span>{errorCount} Errors</span>
                </div>
                <div class="flex items-center gap-2">
                  <AlertTriangle class="w-4 h-4 text-warning" />
                  <span>{warningCount} Warnings</span>
                </div>
                <div class="flex items-center gap-2">
                  <Info class="w-4 h-4 text-info" />
                  <span>{infoCount} Info</span>
                </div>
                <div class="flex items-center gap-2">
                  <CheckCircle class="w-4 h-4 text-success" />
                  <span>{totalIssues} Total</span>
                </div>
              </div>

              <Button
                variant="outline"
                size="sm"
                class="w-full mt-3 gap-2"
                on:click={() => exportAuditResults()}
              >
                <Download class="w-4 h-4" />
                Export Report
              </Button>
            </div>

            <!-- Audit Results -->
            <div class="space-y-2 max-h-96 overflow-y-auto">
              {#each auditResults as issue}
                {@const IconComponent = getSeverityIcon(issue.severity)}
                <div class="border rounded-lg p-3 text-sm">
                  <div class="flex items-start gap-2 mb-2">
                    <IconComponent
                      class="w-4 h-4 mt-0.5 {getSeverityColor(issue.severity)}"
                    />
                    <div class="flex-1">
                      <div class="font-medium">{issue.description}</div>
                      <div class="text-xs text-base-content/60 mb-1">
                        Element: {issue.element}
                      </div>
                      <div class="text-xs text-base-content/70">
                        {issue.suggestion}
                      </div>
                      {#if issue.wcagGuideline}
                        <div class="text-xs text-base-content/50 mt-1">
                          {issue.wcagGuideline}
                        </div>
                      {/if}
                    </div>
                  </div>
                </div>
              {/each}
            </div>
          {/if}
        </div>
      </div>
    </div>
  </div>[36m
{/if}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\AccessibilityPanel.svelte[39m:485:5
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m  >
    [35m<div
      class="fixed right-0 top-0 h-full w-96 bg-base-100 shadow-xl overflow-y-auto"
      on:click|stopPropagation
      role="document"
    >
      <div class="p-6">
        <div class="flex justify-between items-center mb-6">
          <h2 id="accessibility-panel-title" class="text-xl font-bold">Accessibility Panel</h2>
          <Button
            variant="ghost"
            size="sm"
            on:click={() => (showPanel = false)}
            aria-label="Close accessibility panel"
          >
            Γ£ò
          </Button>
        </div>

        <!-- Accessibility Settings -->
        <div class="space-y-4 mb-6">
          <h3 class="font-semibold text-lg">Accessibility Settings</h3>

          <div class="space-y-3">
            <label class="flex items-center gap-3 cursor-pointer">
              <input
                type="checkbox"
                class="checkbox"
                bind:checked={highContrast}
                on:change={applyAccessibilitySettings}
              />
              <span>High Contrast</span>
            </label>

            <label class="flex items-center gap-3 cursor-pointer">
              <input
                type="checkbox"
                class="checkbox"
                bind:checked={reducedMotion}
                on:change={applyAccessibilitySettings}
              />
              <span>Reduced Motion</span>
            </label>

            <label class="flex items-center gap-3 cursor-pointer">
              <input
                type="checkbox"
                class="checkbox"
                bind:checked={largeText}
                on:change={applyAccessibilitySettings}
              />
              <span>Large Text</span>
            </label>

            <label class="flex items-center gap-3 cursor-pointer">
              <input
                type="checkbox"
                class="checkbox"
                bind:checked={keyboardNavigation}
                on:change={applyAccessibilitySettings}
              />
              <span>Enhanced Keyboard Navigation</span>
            </label>

            <label class="flex items-center gap-3 cursor-pointer">
              <input
                type="checkbox"
                class="checkbox"
                bind:checked={screenReaderMode}
                on:change={applyAccessibilitySettings}
              />
              <span>Screen Reader Optimizations</span>
            </label>
          </div>
        </div>

        <!-- Audit Section -->
        <div class="border-t pt-6">
          <div class="flex justify-between items-center mb-4">
            <h3 class="font-semibold text-lg">Accessibility Audit</h3>
            <Button
              size="sm"
              on:click={() => runAccessibilityAudit()}
              disabled={isAuditing}
              class="gap-2"
            >
              {#if isAuditing}
                <div class="loading loading-spinner loading-xs"></div>
                Auditing...
              {:else}
                <RefreshCw class="w-4 h-4" />
                Run Audit
              {/if}
            </Button>
          </div>

          {#if isAuditing}
            <div class="space-y-2 mb-4">
              <div class="flex justify-between text-sm">
                <span>Scanning page...</span>
                <span>{Math.round(auditProgress)}%</span>
              </div>
              <progress
                class="progress progress-primary w-full"
                value={auditProgress}
                max="100"
              ></progress>
            </div>
          {/if}

          {#if auditResults.length > 0}
            <!-- Audit Summary -->
            <div class="bg-base-200 rounded-lg p-4 mb-4">
              <h4 class="font-medium mb-2">Audit Summary</h4>
              <div class="grid grid-cols-2 gap-2 text-sm">
                <div class="flex items-center gap-2">
                  <XCircle class="w-4 h-4 text-error" />
                  <span>{errorCount} Errors</span>
                </div>
                <div class="flex items-center gap-2">
                  <AlertTriangle class="w-4 h-4 text-warning" />
                  <span>{warningCount} Warnings</span>
                </div>
                <div class="flex items-center gap-2">
                  <Info class="w-4 h-4 text-info" />
                  <span>{infoCount} Info</span>
                </div>
                <div class="flex items-center gap-2">
                  <CheckCircle class="w-4 h-4 text-success" />
                  <span>{totalIssues} Total</span>
                </div>
              </div>

              <Button
                variant="outline"
                size="sm"
                class="w-full mt-3 gap-2"
                on:click={() => exportAuditResults()}
              >
                <Download class="w-4 h-4" />
                Export Report
              </Button>
            </div>

            <!-- Audit Results -->
            <div class="space-y-2 max-h-96 overflow-y-auto">
              {#each auditResults as issue}
                {@const IconComponent = getSeverityIcon(issue.severity)}
                <div class="border rounded-lg p-3 text-sm">
                  <div class="flex items-start gap-2 mb-2">
                    <IconComponent
                      class="w-4 h-4 mt-0.5 {getSeverityColor(issue.severity)}"
                    />
                    <div class="flex-1">
                      <div class="font-medium">{issue.description}</div>
                      <div class="text-xs text-base-content/60 mb-1">
                        Element: {issue.element}
                      </div>
                      <div class="text-xs text-base-content/70">
                        {issue.suggestion}
                      </div>
                      {#if issue.wcagGuideline}
                        <div class="text-xs text-base-content/50 mt-1">
                          {issue.wcagGuideline}
                        </div>
                      {/if}
                    </div>
                  </div>
                </div>
              {/each}
            </div>
          {/if}
        </div>
      </div>
    </div>[36m
  </div>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\AccessibilityPanel.svelte[39m:485:5
[33mWarn[39m: Non-interactive element `<div>` should not be assigned mouse or keyboard event listeners
https://svelte.dev/e/a11y_no_noninteractive_element_interactions (svelte)
[36m  >
    [35m<div
      class="fixed right-0 top-0 h-full w-96 bg-base-100 shadow-xl overflow-y-auto"
      on:click|stopPropagation
      role="document"
    >
      <div class="p-6">
        <div class="flex justify-between items-center mb-6">
          <h2 id="accessibility-panel-title" class="text-xl font-bold">Accessibility Panel</h2>
          <Button
            variant="ghost"
            size="sm"
            on:click={() => (showPanel = false)}
            aria-label="Close accessibility panel"
          >
            Γ£ò
          </Button>
        </div>

        <!-- Accessibility Settings -->
        <div class="space-y-4 mb-6">
          <h3 class="font-semibold text-lg">Accessibility Settings</h3>

          <div class="space-y-3">
            <label class="flex items-center gap-3 cursor-pointer">
              <input
                type="checkbox"
                class="checkbox"
                bind:checked={highContrast}
                on:change={applyAccessibilitySettings}
              />
              <span>High Contrast</span>
            </label>

            <label class="flex items-center gap-3 cursor-pointer">
              <input
                type="checkbox"
                class="checkbox"
                bind:checked={reducedMotion}
                on:change={applyAccessibilitySettings}
              />
              <span>Reduced Motion</span>
            </label>

            <label class="flex items-center gap-3 cursor-pointer">
              <input
                type="checkbox"
                class="checkbox"
                bind:checked={largeText}
                on:change={applyAccessibilitySettings}
              />
              <span>Large Text</span>
            </label>

            <label class="flex items-center gap-3 cursor-pointer">
              <input
                type="checkbox"
                class="checkbox"
                bind:checked={keyboardNavigation}
                on:change={applyAccessibilitySettings}
              />
              <span>Enhanced Keyboard Navigation</span>
            </label>

            <label class="flex items-center gap-3 cursor-pointer">
              <input
                type="checkbox"
                class="checkbox"
                bind:checked={screenReaderMode}
                on:change={applyAccessibilitySettings}
              />
              <span>Screen Reader Optimizations</span>
            </label>
          </div>
        </div>

        <!-- Audit Section -->
        <div class="border-t pt-6">
          <div class="flex justify-between items-center mb-4">
            <h3 class="font-semibold text-lg">Accessibility Audit</h3>
            <Button
              size="sm"
              on:click={() => runAccessibilityAudit()}
              disabled={isAuditing}
              class="gap-2"
            >
              {#if isAuditing}
                <div class="loading loading-spinner loading-xs"></div>
                Auditing...
              {:else}
                <RefreshCw class="w-4 h-4" />
                Run Audit
              {/if}
            </Button>
          </div>

          {#if isAuditing}
            <div class="space-y-2 mb-4">
              <div class="flex justify-between text-sm">
                <span>Scanning page...</span>
                <span>{Math.round(auditProgress)}%</span>
              </div>
              <progress
                class="progress progress-primary w-full"
                value={auditProgress}
                max="100"
              ></progress>
            </div>
          {/if}

          {#if auditResults.length > 0}
            <!-- Audit Summary -->
            <div class="bg-base-200 rounded-lg p-4 mb-4">
              <h4 class="font-medium mb-2">Audit Summary</h4>
              <div class="grid grid-cols-2 gap-2 text-sm">
                <div class="flex items-center gap-2">
                  <XCircle class="w-4 h-4 text-error" />
                  <span>{errorCount} Errors</span>
                </div>
                <div class="flex items-center gap-2">
                  <AlertTriangle class="w-4 h-4 text-warning" />
                  <span>{warningCount} Warnings</span>
                </div>
                <div class="flex items-center gap-2">
                  <Info class="w-4 h-4 text-info" />
                  <span>{infoCount} Info</span>
                </div>
                <div class="flex items-center gap-2">
                  <CheckCircle class="w-4 h-4 text-success" />
                  <span>{totalIssues} Total</span>
                </div>
              </div>

              <Button
                variant="outline"
                size="sm"
                class="w-full mt-3 gap-2"
                on:click={() => exportAuditResults()}
              >
                <Download class="w-4 h-4" />
                Export Report
              </Button>
            </div>

            <!-- Audit Results -->
            <div class="space-y-2 max-h-96 overflow-y-auto">
              {#each auditResults as issue}
                {@const IconComponent = getSeverityIcon(issue.severity)}
                <div class="border rounded-lg p-3 text-sm">
                  <div class="flex items-start gap-2 mb-2">
                    <IconComponent
                      class="w-4 h-4 mt-0.5 {getSeverityColor(issue.severity)}"
                    />
                    <div class="flex-1">
                      <div class="font-medium">{issue.description}</div>
                      <div class="text-xs text-base-content/60 mb-1">
                        Element: {issue.element}
                      </div>
                      <div class="text-xs text-base-content/70">
                        {issue.suggestion}
                      </div>
                      {#if issue.wcagGuideline}
                        <div class="text-xs text-base-content/50 mt-1">
                          {issue.wcagGuideline}
                        </div>
                      {/if}
                    </div>
                  </div>
                </div>
              {/each}
            </div>
          {/if}
        </div>
      </div>
    </div>[36m
  </div>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\AccessibilityPanel.svelte[39m:692:3
[33mWarn[39m: Unused CSS selector ":global(.screen-reader-mode) .sr-only"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m:global(.screen-reader-mode) .sr-only[36m {
    position: static !important;
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\CanvasEditor.svelte[39m:82:4
[31mError[39m: Type 'Evidence[]' is not assignable to type '{ title: string; description: string | null; id: string; updatedAt: Date; tags: unknown; mimeType: string | null; chainOfCustody: unknown; confidentialityLevel: string; location: string | null; aiSummary: string | null; ... 18 more ...; uploadedAt: Date; }[]'.
  Type 'Evidence' is missing the following properties from type '{ title: string; description: string | null; id: string; updatedAt: Date; tags: unknown; mimeType: string | null; chainOfCustody: unknown; confidentialityLevel: string; location: string | null; aiSummary: string | null; ... 18 more ...; uploadedAt: Date; }': updatedAt, mimeType, chainOfCustody, confidentialityLevel, and 18 more. (ts)
[36m		unsubscribeEvidence = evidenceStore.evidence.subscribe((evidenceList) => {
			[35mrealtimeEvidence[36m = evidenceList;
		});
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\CanvasEditor.svelte[39m:633:26
[31mError[39m: Property 'title' does not exist on type '{ name: string; id: string; createdAt: Date; updatedAt: Date; version: number | null; createdBy: string | null; caseId: string | null; canvasData: unknown; isDefault: boolean | null; }'. (ts)
[36m				metadata: {
					title: canvasState?.[35mtitle[36m || 'Untitled Canvas',
					description: '',
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\CanvasEditor.svelte[39m:646:5
[31mError[39m: Object literal may only specify known properties, and 'reportId' does not exist in type 'Partial<{ name: string; id: string; createdAt: Date; updatedAt: Date; version: number | null; createdBy: string | null; caseId: string | null; canvasData: unknown; isDefault: boolean | null; }>'. (ts)
[36m				...canvasState,
				[35mreportId[36m,
				canvasData: JSON.stringify(canvasData), // Ensure it's stored as string
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\EnhancedCanvasEditor.svelte[39m:129:9
[31mError[39m: Type 'Collection<any> | undefined' is not assignable to type 'Collection<any> | null'.
  Type 'undefined' is not assignable to type 'Collection<any> | null'. (ts)
[36m      autoloadCallback: () => {
        [35mcanvasCollection[36m =
          lokiDb?.getCollection("canvas_data") ||
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\EnhancedCanvasEditor.svelte[39m:403:7
[31mError[39m: Type 'FabricObject<Partial<FabricObjectProps>, SerializedObjectProps, ObjectEvents> | null' is not assignable to type 'null'.
  Type 'FabricObject<Partial<FabricObjectProps>, SerializedObjectProps, ObjectEvents>' is not assignable to type 'null'. (ts)
[36m    if (evidence.fileUrl) {
      [35mthumbnail[36m = createThumbnail(evidence);
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\EnhancedCanvasEditor.svelte[39m:633:7
[31mError[39m: Type 'FabricObject<Partial<FabricObjectProps>, SerializedObjectProps, ObjectEvents>[]' is not assignable to type 'never[]'.
  Type 'FabricObject<Partial<FabricObjectProps>, SerializedObjectProps, ObjectEvents>' is not assignable to type 'never'. (ts)
[36m      ...state,
      [35mselectedObjects[36m: activeObjects,
    }));
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\EnhancedCanvasEditor.svelte[39m:642:20
[31mError[39m: 'canvas' is possibly 'null'. (ts)
[36m      ...state,
      objectCount: [35mcanvas[36m.getObjects().length,
      canUndo: historyIndex > 0,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\EnhancedCanvasEditor.svelte[39m:1024:9
[31mError[39m: 'canvas' is possibly 'null'. (ts)
[36m      if (canvasObject) {
        [35mcanvas[36m.add(canvasObject);
      }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\EvidenceGrid.svelte[39m:332:13
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m          {#each $filteredEvidence as item (item.id)}
            [35m<div
              class="group border rounded-lg overflow-hidden bg-white shadow-sm hover:shadow-md transition-shadow cursor-pointer
                     {selectedItems.has(item.id)
                ? 'ring-2 ring-blue-500 border-blue-500'
                : 'border-gray-200'}"
              on:click={() => toggleSelection(item)}
              on:contextmenu|preventDefault={(e) => showContextMenu(e, item)}
            >
              <!-- Preview/Thumbnail -->
              <div
                class="aspect-video bg-gray-50 flex items-center justify-center relative overflow-hidden"
              >
                {#if item.fileUrl && isImageFile(item.mimeType || "")}
                  <img
                    src={item.fileUrl}
                    alt={item.title}
                    class="w-full h-full object-cover"
                    loading="lazy"
                  />
                {:else}
                  <svelte:component
                    this={getFileIcon(item.evidenceType, item.mimeType)}
                    class="w-8 h-8 text-gray-400"
                  />
                {/if}

                <!-- Overlay with selection checkbox -->
                <div class="absolute top-2 left-2">
                  <input
                    type="checkbox"
                    checked={selectedItems.has(item.id)}
                    on:change={() => toggleSelection(item)}
                    class="w-4 h-4 text-blue-600 bg-white border-gray-300 rounded focus:ring-blue-500"
                  />
                </div>

                <!-- File type badge -->
                <div class="absolute bottom-2 right-2">
                  <span
                    class="px-2 py-1 text-xs font-medium bg-black/70 text-white rounded"
                  >
                    {getFileCategory(item.mimeType || item.evidenceType)}
                  </span>
                </div>
              </div>

              <!-- Content -->
              <div class="p-4">
                <h3 class="font-medium text-gray-900 truncate mb-1">
                  {item.title}
                </h3>

                {#if item.description}
                  <p class="text-sm text-gray-600 line-clamp-2 mb-2">
                    {item.description}
                  </p>
                {/if}

                <!-- Metadata -->
                <div class="text-xs text-gray-500 space-y-1">
                  <div class="flex items-center justify-between">
                    <span>{formatDate(item.uploadedAt)}</span>
                    {#if item.fileSize}
                      <span>{formatFileSize(item.fileSize)}</span>
                    {/if}
                  </div>

                  {#if item.tags && item.tags.length > 0}
                    <div class="flex flex-wrap gap-1 mt-2">
                      {#each item.tags.slice(0, 3) as tag}
                        <span
                          class="px-2 py-1 bg-gray-100 text-gray-700 rounded-full text-xs"
                        >
                          {tag}
                        </span>
                      {/each}
                      {#if item.tags.length > 3}
                        <span
                          class="px-2 py-1 bg-gray-100 text-gray-700 rounded-full text-xs"
                        >
                          +{item.tags.length - 3}
                        </span>
                      {/if}
                    </div>
                  {/if}
                </div>
              </div>
            </div>[36m
          {/each}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\EvidenceGrid.svelte[39m:332:13
[33mWarn[39m: `<div>` with a click or contextmenu handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m          {#each $filteredEvidence as item (item.id)}
            [35m<div
              class="group border rounded-lg overflow-hidden bg-white shadow-sm hover:shadow-md transition-shadow cursor-pointer
                     {selectedItems.has(item.id)
                ? 'ring-2 ring-blue-500 border-blue-500'
                : 'border-gray-200'}"
              on:click={() => toggleSelection(item)}
              on:contextmenu|preventDefault={(e) => showContextMenu(e, item)}
            >
              <!-- Preview/Thumbnail -->
              <div
                class="aspect-video bg-gray-50 flex items-center justify-center relative overflow-hidden"
              >
                {#if item.fileUrl && isImageFile(item.mimeType || "")}
                  <img
                    src={item.fileUrl}
                    alt={item.title}
                    class="w-full h-full object-cover"
                    loading="lazy"
                  />
                {:else}
                  <svelte:component
                    this={getFileIcon(item.evidenceType, item.mimeType)}
                    class="w-8 h-8 text-gray-400"
                  />
                {/if}

                <!-- Overlay with selection checkbox -->
                <div class="absolute top-2 left-2">
                  <input
                    type="checkbox"
                    checked={selectedItems.has(item.id)}
                    on:change={() => toggleSelection(item)}
                    class="w-4 h-4 text-blue-600 bg-white border-gray-300 rounded focus:ring-blue-500"
                  />
                </div>

                <!-- File type badge -->
                <div class="absolute bottom-2 right-2">
                  <span
                    class="px-2 py-1 text-xs font-medium bg-black/70 text-white rounded"
                  >
                    {getFileCategory(item.mimeType || item.evidenceType)}
                  </span>
                </div>
              </div>

              <!-- Content -->
              <div class="p-4">
                <h3 class="font-medium text-gray-900 truncate mb-1">
                  {item.title}
                </h3>

                {#if item.description}
                  <p class="text-sm text-gray-600 line-clamp-2 mb-2">
                    {item.description}
                  </p>
                {/if}

                <!-- Metadata -->
                <div class="text-xs text-gray-500 space-y-1">
                  <div class="flex items-center justify-between">
                    <span>{formatDate(item.uploadedAt)}</span>
                    {#if item.fileSize}
                      <span>{formatFileSize(item.fileSize)}</span>
                    {/if}
                  </div>

                  {#if item.tags && item.tags.length > 0}
                    <div class="flex flex-wrap gap-1 mt-2">
                      {#each item.tags.slice(0, 3) as tag}
                        <span
                          class="px-2 py-1 bg-gray-100 text-gray-700 rounded-full text-xs"
                        >
                          {tag}
                        </span>
                      {/each}
                      {#if item.tags.length > 3}
                        <span
                          class="px-2 py-1 bg-gray-100 text-gray-700 rounded-full text-xs"
                        >
                          +{item.tags.length - 3}
                        </span>
                      {/if}
                    </div>
                  {/if}
                </div>
              </div>
            </div>[36m
          {/each}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\EvidenceGrid.svelte[39m:426:13
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m          {#each $filteredEvidence as item (item.id)}
            [35m<div
              class="flex items-center gap-4 p-4 border rounded-lg bg-white hover:shadow-sm transition-shadow cursor-pointer
                     {selectedItems.has(item.id)
                ? 'ring-2 ring-blue-500 border-blue-500'
                : 'border-gray-200'}"
              on:click={() => toggleSelection(item)}
              on:contextmenu|preventDefault={(e) => showContextMenu(e, item)}
            >
              <!-- Selection checkbox -->
              <input
                type="checkbox"
                checked={selectedItems.has(item.id)}
                on:change={() => toggleSelection(item)}
                class="w-4 h-4 text-blue-600 bg-white border-gray-300 rounded focus:ring-blue-500"
              />

              <!-- File icon -->
              <div class="flex-shrink-0">
                <svelte:component
                  this={getFileIcon(item.evidenceType, item.mimeType)}
                  class="w-8 h-8 text-gray-400"
                />
              </div>

              <!-- Content -->
              <div class="flex-1 min-w-0">
                <div class="flex items-start justify-between">
                  <div class="flex-1 min-w-0">
                    <h3 class="font-medium text-gray-900 truncate">
                      {item.title}
                    </h3>
                    {#if item.description}
                      <p class="text-sm text-gray-600 truncate">
                        {item.description}
                      </p>
                    {/if}
                  </div>

                  <div class="flex-shrink-0 text-right">
                    <p class="text-sm text-gray-500">
                      {formatDate(item.uploadedAt)}
                    </p>
                    {#if item.fileSize}
                      <p class="text-xs text-gray-400">
                        {formatFileSize(item.fileSize)}
                      </p>
                    {/if}
                  </div>
                </div>

                <!-- Tags -->
                {#if item.tags && item.tags.length > 0}
                  <div class="flex flex-wrap gap-1 mt-2">
                    {#each item.tags.slice(0, 5) as tag}
                      <span
                        class="px-2 py-1 bg-gray-100 text-gray-700 rounded-full text-xs"
                      >
                        {tag}
                      </span>
                    {/each}
                    {#if item.tags.length > 5}
                      <span
                        class="px-2 py-1 bg-gray-100 text-gray-700 rounded-full text-xs"
                      >
                        +{item.tags.length - 5}
                      </span>
                    {/if}
                  </div>
                {/if}
              </div>

              <!-- Actions -->
              <div class="flex-shrink-0">
                <Button variant="ghost" size="sm" class="p-1">
                  <MoreHorizontal class="w-4 h-4" />
                </Button>
              </div>
            </div>[36m
          {/each}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\EvidenceGrid.svelte[39m:426:13
[33mWarn[39m: `<div>` with a click or contextmenu handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m          {#each $filteredEvidence as item (item.id)}
            [35m<div
              class="flex items-center gap-4 p-4 border rounded-lg bg-white hover:shadow-sm transition-shadow cursor-pointer
                     {selectedItems.has(item.id)
                ? 'ring-2 ring-blue-500 border-blue-500'
                : 'border-gray-200'}"
              on:click={() => toggleSelection(item)}
              on:contextmenu|preventDefault={(e) => showContextMenu(e, item)}
            >
              <!-- Selection checkbox -->
              <input
                type="checkbox"
                checked={selectedItems.has(item.id)}
                on:change={() => toggleSelection(item)}
                class="w-4 h-4 text-blue-600 bg-white border-gray-300 rounded focus:ring-blue-500"
              />

              <!-- File icon -->
              <div class="flex-shrink-0">
                <svelte:component
                  this={getFileIcon(item.evidenceType, item.mimeType)}
                  class="w-8 h-8 text-gray-400"
                />
              </div>

              <!-- Content -->
              <div class="flex-1 min-w-0">
                <div class="flex items-start justify-between">
                  <div class="flex-1 min-w-0">
                    <h3 class="font-medium text-gray-900 truncate">
                      {item.title}
                    </h3>
                    {#if item.description}
                      <p class="text-sm text-gray-600 truncate">
                        {item.description}
                      </p>
                    {/if}
                  </div>

                  <div class="flex-shrink-0 text-right">
                    <p class="text-sm text-gray-500">
                      {formatDate(item.uploadedAt)}
                    </p>
                    {#if item.fileSize}
                      <p class="text-xs text-gray-400">
                        {formatFileSize(item.fileSize)}
                      </p>
                    {/if}
                  </div>
                </div>

                <!-- Tags -->
                {#if item.tags && item.tags.length > 0}
                  <div class="flex flex-wrap gap-1 mt-2">
                    {#each item.tags.slice(0, 5) as tag}
                      <span
                        class="px-2 py-1 bg-gray-100 text-gray-700 rounded-full text-xs"
                      >
                        {tag}
                      </span>
                    {/each}
                    {#if item.tags.length > 5}
                      <span
                        class="px-2 py-1 bg-gray-100 text-gray-700 rounded-full text-xs"
                      >
                        +{item.tags.length - 5}
                      </span>
                    {/if}
                  </div>
                {/if}
              </div>

              <!-- Actions -->
              <div class="flex-shrink-0">
                <Button variant="ghost" size="sm" class="p-1">
                  <MoreHorizontal class="w-4 h-4" />
                </Button>
              </div>
            </div>[36m
          {/each}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\EvidenceGrid.svelte[39m:520:3
[33mWarn[39m: Unused CSS selector ".line-clamp-3"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.line-clamp-3[36m {
    display: -webkit-box;
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\EvidenceGrid.svelte[39m:221:40
[31mError[39m: Argument of type 'string' is not assignable to parameter of type '"title" | "evidenceType" | "fileSize" | "uploadedAt"'. (ts)
[36m          value={sortBy}
          on:change={(e) => toggleSort([35m(e.target as HTMLSelectElement)?.value[36m)}
          class="px-3 py-2 border border-gray-300 rounded-lg text-sm"
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\EvidencePanel.svelte[39m:8:14
[33mWarn[39m: Component has unused export property 'onEvidenceDrop'. If it is for external reference only, please consider using `export const onEvidenceDrop`
https://svelte.dev/e/export_let_unused (svelte)
[36m  export let caseId: string;
  export let [35monEvidenceDrop: (evidence: Evidence) => void[36m = () => {};

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\KeyboardShortcuts.svelte[39m:165:3
[33mWarn[39m: Elements with the 'dialog' interactive role must have a tabindex value
https://svelte.dev/e/a11y_interactive_supports_focus (svelte)
[36m{#if showShortcuts}
  [35m<div
    class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50"
    on:click={() => (showShortcuts = false)}
    on:keydown={(e) => e.key === "Escape" && (showShortcuts = false)}
    role="dialog"
    aria-modal="true"
    aria-labelledby="shortcuts-title"
  >
    <div
      class="bg-white rounded-lg shadow-xl p-6 max-w-md w-full mx-4"
      on:click|stopPropagation
      role="document"
    >
      <div class="flex items-center justify-between mb-4">
        <h3 id="shortcuts-title" class="text-lg font-semibold flex items-center">
          <Keyboard class="w-5 h-5 mr-2 text-blue-600" />
          Keyboard Shortcuts
        </h3>
        <button
          class="text-gray-400 hover:text-gray-600"
          on:click={() => (showShortcuts = false)}
          aria-label="Close shortcuts dialog"
        >
          <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
            <path
              fill-rule="evenodd"
              d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
              clip-rule="evenodd"
            />
          </svg>
        </button>
      </div>

      <div class="space-y-3">
        {#each shortcuts as shortcut}
          <div
            class="flex items-center justify-between py-2 border-b border-gray-100"
          >
            <span class="text-sm text-gray-600">{shortcut.description}</span>
            <kbd
              class="px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded font-mono"
            >
              {shortcut.key}
            </kbd>
          </div>
        {/each}
      </div>

      <div class="mt-4 p-3 bg-blue-50 rounded">
        <p class="text-xs text-blue-600">
          ≡ƒÆí Pro tip: These shortcuts work throughout the application to boost
          your productivity!
        </p>
      </div>
    </div>
  </div>[36m
{/if}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\KeyboardShortcuts.svelte[39m:173:5
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m  >
    [35m<div
      class="bg-white rounded-lg shadow-xl p-6 max-w-md w-full mx-4"
      on:click|stopPropagation
      role="document"
    >
      <div class="flex items-center justify-between mb-4">
        <h3 id="shortcuts-title" class="text-lg font-semibold flex items-center">
          <Keyboard class="w-5 h-5 mr-2 text-blue-600" />
          Keyboard Shortcuts
        </h3>
        <button
          class="text-gray-400 hover:text-gray-600"
          on:click={() => (showShortcuts = false)}
          aria-label="Close shortcuts dialog"
        >
          <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
            <path
              fill-rule="evenodd"
              d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
              clip-rule="evenodd"
            />
          </svg>
        </button>
      </div>

      <div class="space-y-3">
        {#each shortcuts as shortcut}
          <div
            class="flex items-center justify-between py-2 border-b border-gray-100"
          >
            <span class="text-sm text-gray-600">{shortcut.description}</span>
            <kbd
              class="px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded font-mono"
            >
              {shortcut.key}
            </kbd>
          </div>
        {/each}
      </div>

      <div class="mt-4 p-3 bg-blue-50 rounded">
        <p class="text-xs text-blue-600">
          ≡ƒÆí Pro tip: These shortcuts work throughout the application to boost
          your productivity!
        </p>
      </div>
    </div>[36m
  </div>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\KeyboardShortcuts.svelte[39m:173:5
[33mWarn[39m: Non-interactive element `<div>` should not be assigned mouse or keyboard event listeners
https://svelte.dev/e/a11y_no_noninteractive_element_interactions (svelte)
[36m  >
    [35m<div
      class="bg-white rounded-lg shadow-xl p-6 max-w-md w-full mx-4"
      on:click|stopPropagation
      role="document"
    >
      <div class="flex items-center justify-between mb-4">
        <h3 id="shortcuts-title" class="text-lg font-semibold flex items-center">
          <Keyboard class="w-5 h-5 mr-2 text-blue-600" />
          Keyboard Shortcuts
        </h3>
        <button
          class="text-gray-400 hover:text-gray-600"
          on:click={() => (showShortcuts = false)}
          aria-label="Close shortcuts dialog"
        >
          <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
            <path
              fill-rule="evenodd"
              d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
              clip-rule="evenodd"
            />
          </svg>
        </button>
      </div>

      <div class="space-y-3">
        {#each shortcuts as shortcut}
          <div
            class="flex items-center justify-between py-2 border-b border-gray-100"
          >
            <span class="text-sm text-gray-600">{shortcut.description}</span>
            <kbd
              class="px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded font-mono"
            >
              {shortcut.key}
            </kbd>
          </div>
        {/each}
      </div>

      <div class="mt-4 p-3 bg-blue-50 rounded">
        <p class="text-xs text-blue-600">
          ≡ƒÆí Pro tip: These shortcuts work throughout the application to boost
          your productivity!
        </p>
      </div>
    </div>[36m
  </div>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\KeyboardShortcuts.svelte[39m:31:11
[31mError[39m: Not all code paths return a value. (ts)
[36m
  onMount([35m() => {[36m
    if (browser) {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\MonacoEditor.svelte[39m:26:1
[33mWarn[39m: noninteractive element cannot have nonnegative tabIndex value
https://svelte.dev/e/a11y_no_noninteractive_tabindex (svelte)
[36m
[35m<div bind:this={editorContainer} class="h-96 w-full border border-gray-300 rounded-md" aria-label="Monaco code editor" tabindex={0}></div>[36m

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\PerformanceDashboard.svelte[39m:364:5
[33mWarn[39m: Unknown property: 'space-y' (css)
[36m  .endpoints-list {
    [35mspace-y[36m: 0.5rem;
  }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\RealTimeEvidenceGrid.svelte[39m:62:48
[31mError[39m: Property 'subscribe' does not exist on type 'RealTimeEvidenceStore'. (ts)
[36m  // Subscribe to store values (access the store properties directly)
  $: if (evidenceStore && typeof evidenceStore.[35msubscribe[36m === 'function') {
    // If evidenceStore is a proper Svelte store
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\RealTimeEvidenceGrid.svelte[39m:70:5
[31mError[39m: Type 'Writable<Evidence[]>' is missing the following properties from type 'Evidence[]': length, pop, push, concat, and 35 more. (ts)
[36m    // If evidenceStore is a regular object
    [35mevidence[36m = evidenceStore?.evidence || [];
    isLoading = evidenceStore?.isLoading || false;
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\RealTimeEvidenceGrid.svelte[39m:71:5
[31mError[39m: Type 'Writable<boolean>' is not assignable to type 'boolean'. (ts)
[36m    evidence = evidenceStore?.evidence || [];
    [35misLoading[36m = evidenceStore?.isLoading || false;
    isConnected = evidenceStore?.isConnected || false;
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\RealTimeEvidenceGrid.svelte[39m:72:5
[31mError[39m: Type 'Writable<boolean>' is not assignable to type 'boolean'. (ts)
[36m    isLoading = evidenceStore?.isLoading || false;
    [35misConnected[36m = evidenceStore?.isConnected || false;
    error = evidenceStore?.error || null;
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\RealTimeEvidenceGrid.svelte[39m:73:5
[31mError[39m: Type 'Writable<string | null>' is not assignable to type 'string'. (ts)
[36m    isConnected = evidenceStore?.isConnected || false;
    [35merror[36m = evidenceStore?.error || null;
  }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\RealTimeEvidenceGrid.svelte[39m:64:16
[31mError[39m: Cannot use 'evidenceStore' as a store. 'evidenceStore' needs to be an object with a subscribe method on it.

No overload matches this call.
  Overload 1 of 2, '(store: SvelteStore<any>): any', gave the following error.
    Argument of type 'RealTimeEvidenceStore' is not assignable to parameter of type 'SvelteStore<any>'.
      Property 'subscribe' is missing in type 'RealTimeEvidenceStore' but required in type 'SvelteStore<any>'.
  Overload 2 of 2, '(store: SvelteStore<any> | null | undefined): any', gave the following error.
    Argument of type 'RealTimeEvidenceStore' is not assignable to parameter of type 'SvelteStore<any>'.
      Property 'subscribe' is missing in type 'RealTimeEvidenceStore' but required in type 'SvelteStore<any>'. (ts)
[36m    // If evidenceStore is a proper Svelte store
    evidence = [35m$evidenceStore[36m?.evidence || [];
    isLoading = $evidenceStore?.isLoading || false;
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\RealTimeEvidenceGrid.svelte[39m:65:17
[31mError[39m: Cannot use 'evidenceStore' as a store. 'evidenceStore' needs to be an object with a subscribe method on it.

No overload matches this call.
  Overload 1 of 2, '(store: SvelteStore<any>): any', gave the following error.
    Argument of type 'RealTimeEvidenceStore' is not assignable to parameter of type 'SvelteStore<any>'.
      Property 'subscribe' is missing in type 'RealTimeEvidenceStore' but required in type 'SvelteStore<any>'.
  Overload 2 of 2, '(store: SvelteStore<any> | null | undefined): any', gave the following error.
    Argument of type 'RealTimeEvidenceStore' is not assignable to parameter of type 'SvelteStore<any>'.
      Property 'subscribe' is missing in type 'RealTimeEvidenceStore' but required in type 'SvelteStore<any>'. (ts)
[36m    evidence = $evidenceStore?.evidence || [];
    isLoading = [35m$evidenceStore[36m?.isLoading || false;
    isConnected = $evidenceStore?.isConnected || false;
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\RealTimeEvidenceGrid.svelte[39m:66:19
[31mError[39m: Cannot use 'evidenceStore' as a store. 'evidenceStore' needs to be an object with a subscribe method on it.

No overload matches this call.
  Overload 1 of 2, '(store: SvelteStore<any>): any', gave the following error.
    Argument of type 'RealTimeEvidenceStore' is not assignable to parameter of type 'SvelteStore<any>'.
      Property 'subscribe' is missing in type 'RealTimeEvidenceStore' but required in type 'SvelteStore<any>'.
  Overload 2 of 2, '(store: SvelteStore<any> | null | undefined): any', gave the following error.
    Argument of type 'RealTimeEvidenceStore' is not assignable to parameter of type 'SvelteStore<any>'.
      Property 'subscribe' is missing in type 'RealTimeEvidenceStore' but required in type 'SvelteStore<any>'. (ts)
[36m    isLoading = $evidenceStore?.isLoading || false;
    isConnected = [35m$evidenceStore[36m?.isConnected || false;
    error = $evidenceStore?.error || null;
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\RealTimeEvidenceGrid.svelte[39m:67:13
[31mError[39m: Cannot use 'evidenceStore' as a store. 'evidenceStore' needs to be an object with a subscribe method on it.

No overload matches this call.
  Overload 1 of 2, '(store: SvelteStore<any>): any', gave the following error.
    Argument of type 'RealTimeEvidenceStore' is not assignable to parameter of type 'SvelteStore<any>'.
      Property 'subscribe' is missing in type 'RealTimeEvidenceStore' but required in type 'SvelteStore<any>'.
  Overload 2 of 2, '(store: SvelteStore<any> | null | undefined): any', gave the following error.
    Argument of type 'RealTimeEvidenceStore' is not assignable to parameter of type 'SvelteStore<any>'.
      Property 'subscribe' is missing in type 'RealTimeEvidenceStore' but required in type 'SvelteStore<any>'. (ts)
[36m    isConnected = $evidenceStore?.isConnected || false;
    error = [35m$evidenceStore[36m?.error || null;
  } else {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\ai\AIButton.svelte[39m:34:26
[31mError[39m: '$currentConversation.messages.length' is possibly 'undefined'. (ts)
[36m
  $: hasUnreadMessages = [35m$currentConversation?.messages?.length[36m > 0;
  $: shouldPulse = $isUserIdle || $showProactivePrompt;
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\ai\AIChatInterface.svelte[39m:73:9
[31mError[39m: Object literal may only specify known properties, and 'caseId' does not exist in type '{ includeHistory?: boolean | undefined; maxSources?: number | undefined; searchThreshold?: number | undefined; useCache?: boolean | undefined; }'. (ts)
[36m        useCache: true,
        [35mcaseId[36m,
      });
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\ai\AIChatInterface.svelte[39m:201:11
[31mError[39m: Type 'false | { provider: "local" | "hybrid" | "cloud"; model: string; confidence: number; executionTime: number; fromCache: boolean; } | undefined' is not assignable to type 'boolean | undefined'.
  Type '{ provider: "local" | "hybrid" | "cloud"; model: string; confidence: number; executionTime: number; fromCache: boolean; }' is not assignable to type 'boolean | undefined'. (ts)
[36m            message.sources.length > 0}
          [35mshowMetadata[36m={message.role === "assistant" && message.metadata}
        />
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\ai\AskAI.svelte[39m:63:20
[31mError[39m: Cannot find name 'SpeechRecognition'. (ts)
[36m  let isListening = false;
  let recognition: [35mSpeechRecognition[36m | null = null;

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\ai\ChatInterface.svelte[39m:235:14
[31mError[39m: '$currentConversation' is possibly 'null'. (ts)
[36m      <!-- Messages -->
      {#each [35m$currentConversation[36m.messages as message (message.id)}
        <ChatMessage {message} />
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\ai\ChatInterface.svelte[39m:308:14
[31mError[39m: '$currentConversation.messages.length' is possibly 'undefined'. (ts)
[36m      <div class="flex items-center gap-2">
        {#if [35m$currentConversation?.messages.length[36m > 0}
          <span>{$currentConversation.messages.length} messages</span>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\ai\ChatInterface.svelte[39m:309:18
[31mError[39m: '$currentConversation' is possibly 'null'. (ts)
[36m        {#if $currentConversation?.messages.length > 0}
          <span>{[35m$currentConversation[36m.messages.length} messages</span>
        {/if}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\ai\EnhancedAIAssistant.clean.svelte[39m:320:7
[33mWarn[39m: Non-interactive element `<div>` should not be assigned mouse or keyboard event listeners
https://svelte.dev/e/a11y_no_noninteractive_element_interactions (svelte)
[36m    >
      [35m<div
        class="modal"
        on:click|stopPropagation
        on:keydown={(e) => e.key === "Escape" && (showCitationDialog = false)}
        role="document"
      >
        <div class="modal-header">
          <h4 id="citation-modal-title">
            <Quote class="w-5 h-5" /> Legal Citation
          </h4>
        </div>

        <div class="modal-body">
          <div class="citation-box">
            <p>{selectedCitation}</p>
          </div>

          <div class="modal-actions">
            <button class="btn-primary" on:click={() => insertCitation()}>
              Insert Citation
            </button>
            <button
              class="btn-secondary"
              on:click={() => navigator.clipboard.writeText(selectedCitation)}
            >
              Copy
            </button>
          </div>
        </div>

        <div class="modal-footer">
          <button
            class="btn-close"
            on:click={() => (showCitationDialog = false)}
          >
            Close
          </button>
        </div>
      </div>[36m
    </div>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\ai\EnhancedAIAssistant.new.svelte[39m:238:7
[33mWarn[39m: Non-interactive element `<div>` should not be assigned mouse or keyboard event listeners
https://svelte.dev/e/a11y_no_noninteractive_element_interactions (svelte)
[36m    >
      [35m<div
        class="modal"
        role="document"
        on:click|stopPropagation
        on:keydown={() => {}}
      >
        <div class="modal-header">
          <h4 id="citation-dialog-title">
            <Quote class="w-5 h-5" /> Legal Citation
          </h4>
        </div>

        <div class="modal-body">
          <div class="citation-box">
            <p>{selectedCitation}</p>
          </div>

          <div class="modal-actions">
            <button class="btn-primary" on:click={() => insertCitation()}>
              Insert Citation
            </button>
            <button
              class="btn-secondary"
              on:click={() => navigator.clipboard.writeText(selectedCitation)}
            >
              Copy
            </button>
          </div>
        </div>

        <div class="modal-footer">
          <button
            class="btn-close"
            on:click={() => (showCitationDialog = false)}
          >
            Close
          </button>
        </div>
      </div>[36m
    </div>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\CitationSidebar.svelte[39m:62:14
[31mError[39m: Property 'isFavorite' does not exist on type 'Citation'. (ts)
[36m    // Update favorite status - in real app, this would update the database
    citation.[35misFavorite[36m = !citation.isFavorite;
    dispatch("updateCitation", citation);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\CitationSidebar.svelte[39m:62:37
[31mError[39m: Property 'isFavorite' does not exist on type 'Citation'. (ts)
[36m    // Update favorite status - in real app, this would update the database
    citation.isFavorite = !citation.[35misFavorite[36m;
    dispatch("updateCitation", citation);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\CitationSidebar.svelte[39m:115:47
[31mError[39m: Property 'isFavorite' does not exist on type 'Citation'. (ts)
[36m                on:click={() => toggleFavorite(citation)}
                class="favorite-btn {citation.[35misFavorite[36m ? 'favorited' : ''}"
              >
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\CitationSidebar.svelte[39m:145:27
[31mError[39m: Property 'notes' does not exist on type 'Citation'. (ts)
[36m
            {#if citation.[35mnotes[36m}
              <p class="citation-notes">Notes: {citation.notes}</p>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\CitationSidebar.svelte[39m:146:58
[31mError[39m: Property 'notes' does not exist on type 'Citation'. (ts)
[36m            {#if citation.notes}
              <p class="citation-notes">Notes: {citation.[35mnotes[36m}</p>
            {/if}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\CitationSidebar.svelte[39m:188:40
[31mError[39m: Property 'savedAt' does not exist on type 'Citation'. (ts)
[36m            <span class="saved-date">
              Saved {new Date(citation.[35msavedAt[36m).toLocaleDateString()}
            </span>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\EvidenceNode.svelte[39m:6:3
[31mError[39m: An ambient module declaration is only allowed at the top level in a file. (ts)
[36m  // Type declarations for Fabric.js (since it's dynamically loaded)
  [35mdeclare[36m global {
    interface Window {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\EvidenceNode.svelte[39m:52:7
[31mError[39m: Type 'Canvas' is not assignable to type 'FabricCanvas'.
  Types of property 'add' are incompatible.
    Type '(...objects: FabricObject<Partial<FabricObjectProps>, SerializedObjectProps, ObjectEvents>[]) => number' is not assignable to type '(obj: FabricImage) => void'.
      Types of parameters 'objects' and 'obj' are incompatible.
        Type 'FabricImage' is missing the following properties from type 'FabricObject<Partial<FabricObjectProps>, SerializedObjectProps, ObjectEvents>': noScaleCache, lockMovementX, lockMovementY, lockRotation, and 222 more. (ts)
[36m      
      [35mfabricCanvas[36m = new Canvas(canvasEl, {
        width: size.width - 20,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\EvidenceNode.svelte[39m:61:46
[31mError[39m: Property 'then' does not exist on type 'Image'. (ts)
[36m      if (fileUrl) {
        window.fabric.Image.fromURL(fileUrl).[35mthen[36m((img: FabricImage) => {
          // Scale image to fit canvas
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\EvidenceNode.svelte[39m:64:37
[31mError[39m: Property 'width' does not exist on type 'FabricImage'. (ts)
[36m          const scale = Math.min(
            (size.width - 20) / img.[35mwidth[36m,
            (size.height - 80) / img.height
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\EvidenceNode.svelte[39m:65:38
[31mError[39m: Property 'height' does not exist on type 'FabricImage'. (ts)
[36m            (size.width - 20) / img.width,
            (size.height - 80) / img.[35mheight[36m
          );
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\EvidenceNode.svelte[39m:74:11
[31mError[39m: 'fabricCanvas' is possibly 'null'. (ts)
[36m          });
          [35mfabricCanvas[36m.setBackgroundImage(img, fabricCanvas.renderAll.bind(fabricCanvas));
        });
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\EvidenceNode.svelte[39m:74:24
[31mError[39m: Property 'setBackgroundImage' does not exist on type 'FabricCanvas'. (ts)
[36m          });
          fabricCanvas.[35msetBackgroundImage[36m(img, fabricCanvas.renderAll.bind(fabricCanvas));
        });
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\EvidenceNode.svelte[39m:74:48
[31mError[39m: 'fabricCanvas' is possibly 'null'. (ts)
[36m          });
          fabricCanvas.setBackgroundImage(img, [35mfabricCanvas[36m.renderAll.bind(fabricCanvas));
        });
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\EvidenceNode.svelte[39m:74:61
[31mError[39m: Property 'renderAll' does not exist on type 'FabricCanvas'. (ts)
[36m          });
          fabricCanvas.setBackgroundImage(img, fabricCanvas.[35mrenderAll[36m.bind(fabricCanvas));
        });
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\EvidenceNode.svelte[39m:79:7
[31mError[39m: 'fabricCanvas' is possibly 'null'. (ts)
[36m      // Setup event listeners for annotations
      [35mfabricCanvas[36m.on('object:modified', saveCanvasState);
      fabricCanvas.on('object:added', saveCanvasState);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\EvidenceNode.svelte[39m:79:20
[31mError[39m: Property 'on' does not exist on type 'FabricCanvas'. (ts)
[36m      // Setup event listeners for annotations
      fabricCanvas.[35mon[36m('object:modified', saveCanvasState);
      fabricCanvas.on('object:added', saveCanvasState);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\EvidenceNode.svelte[39m:80:7
[31mError[39m: 'fabricCanvas' is possibly 'null'. (ts)
[36m      fabricCanvas.on('object:modified', saveCanvasState);
      [35mfabricCanvas[36m.on('object:added', saveCanvasState);
      fabricCanvas.on('object:removed', saveCanvasState);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\EvidenceNode.svelte[39m:80:20
[31mError[39m: Property 'on' does not exist on type 'FabricCanvas'. (ts)
[36m      fabricCanvas.on('object:modified', saveCanvasState);
      fabricCanvas.[35mon[36m('object:added', saveCanvasState);
      fabricCanvas.on('object:removed', saveCanvasState);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\EvidenceNode.svelte[39m:81:7
[31mError[39m: 'fabricCanvas' is possibly 'null'. (ts)
[36m      fabricCanvas.on('object:added', saveCanvasState);
      [35mfabricCanvas[36m.on('object:removed', saveCanvasState);
      
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\EvidenceNode.svelte[39m:81:20
[31mError[39m: Property 'on' does not exist on type 'FabricCanvas'. (ts)
[36m      fabricCanvas.on('object:added', saveCanvasState);
      fabricCanvas.[35mon[36m('object:removed', saveCanvasState);
      
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\EvidenceNode.svelte[39m:107:34
[31mError[39m: Property 'toJSON' does not exist on type 'FabricCanvas'. (ts)
[36m    if (fabricCanvas) {
      const state = fabricCanvas.[35mtoJSON[36m();
      canvasState = state;
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\EvidenceNode.svelte[39m:165:18
[31mError[39m: Property 'renderAll' does not exist on type 'FabricCanvas'. (ts)
[36m    
    fabricCanvas.[35mrenderAll[36m();
  }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\EvidenceNode.svelte[39m:171:21
[31mError[39m: 'fabricCanvas' is possibly 'null'. (ts)
[36m      fabricCanvas.getObjects().forEach((obj: FabricObject) => {
        if (obj !== [35mfabricCanvas[36m.backgroundImage) {
          fabricCanvas.remove(obj);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\EvidenceNode.svelte[39m:171:34
[31mError[39m: Property 'backgroundImage' does not exist on type 'FabricCanvas'. (ts)
[36m      fabricCanvas.getObjects().forEach((obj: FabricObject) => {
        if (obj !== fabricCanvas.[35mbackgroundImage[36m) {
          fabricCanvas.remove(obj);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\EvidenceNode.svelte[39m:172:11
[31mError[39m: 'fabricCanvas' is possibly 'null'. (ts)
[36m        if (obj !== fabricCanvas.backgroundImage) {
          [35mfabricCanvas[36m.remove(obj);
        }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\EvidenceNode.svelte[39m:175:20
[31mError[39m: Property 'renderAll' does not exist on type 'FabricCanvas'. (ts)
[36m      });
      fabricCanvas.[35mrenderAll[36m();
    }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\EvidenceNode.svelte[39m:210:22
[31mError[39m: Property 'setDimensions' does not exist on type 'FabricCanvas'. (ts)
[36m      if (fabricCanvas) {
        fabricCanvas.[35msetDimensions[36m({
          width: newWidth - 20,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\EvidenceNode.svelte[39m:283:40
[31mError[39m: Argument of type 'KeyboardEvent & { currentTarget: EventTarget & HTMLDivElement; }' is not assignable to parameter of type 'MouseEvent'.
  Type 'KeyboardEvent & { currentTarget: EventTarget & HTMLDivElement; }' is missing the following properties from type 'MouseEvent': button, buttons, clientX, clientY, and 14 more. (ts)
[36m          e.preventDefault();
          handleResize('bottom-right', [35me[36m);
        }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\EvidenceNode.svelte[39m:297:34
[31mError[39m: Argument of type 'KeyboardEvent & { currentTarget: EventTarget & HTMLDivElement; }' is not assignable to parameter of type 'MouseEvent'.
  Type 'KeyboardEvent & { currentTarget: EventTarget & HTMLDivElement; }' is missing the following properties from type 'MouseEvent': button, buttons, clientX, clientY, and 14 more. (ts)
[36m          e.preventDefault();
          handleResize('bottom', [35me[36m);
        }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\EvidenceNode.svelte[39m:311:33
[31mError[39m: Argument of type 'KeyboardEvent & { currentTarget: EventTarget & HTMLDivElement; }' is not assignable to parameter of type 'MouseEvent'.
  Type 'KeyboardEvent & { currentTarget: EventTarget & HTMLDivElement; }' is missing the following properties from type 'MouseEvent': button, buttons, clientX, clientY, and 14 more. (ts)
[36m          e.preventDefault();
          handleResize('right', [35me[36m);
        }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\POINode.svelte[39m:9:28
[31mError[39m: File name 'c:/Users/james/Desktop/web-app/sveltekit-frontend/src/lib/components/ui/textarea.js' differs from already included file name 'c:/Users/james/Desktop/web-app/sveltekit-frontend/src/lib/components/ui/Textarea.js' only in casing.
  The file is in the program because:
    Matched by include pattern '.svelte-kit/../src/**/*.js' in 'c:/Users/james/Desktop/web-app/sveltekit-frontend/tsconfig.json'
    Imported via "./Textarea" from file 'c:/Users/james/Desktop/web-app/sveltekit-frontend/src/lib/components/ui/index.ts'
    Imported via "$lib/components/ui/textarea" from file 'c:/Users/james/Desktop/web-app/sveltekit-frontend/src/lib/components/canvas/POINode.svelte'
    Imported via "$lib/components/ui/textarea" from file 'c:/Users/james/Desktop/web-app/sveltekit-frontend/src/lib/components/forms/EvidenceForm.svelte' (ts)
[36m  import * as ContextMenu from "$lib/components/ui/context-menu";
  import { Textarea } from [35m"$lib/components/ui/textarea"[36m;
// Note: Select component has issues - using native select for now
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\POINode.svelte[39m:323:27
[31mError[39m: This expression is not constructable.
  Type 'never' has no construct signatures. (ts)
[36m                  >
                  <Textare[35m[36ma
                    id="who"
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\POINode.svelte[39m:335:27
[31mError[39m: This expression is not constructable.
  Type 'never' has no construct signatures. (ts)
[36m                  >
                  <Textare[35m[36ma
                    id="what"
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\POINode.svelte[39m:347:27
[31mError[39m: This expression is not constructable.
  Type 'never' has no construct signatures. (ts)
[36m                  >
                  <Textare[35m[36ma
                    id="why"
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\POINode.svelte[39m:359:27
[31mError[39m: This expression is not constructable.
  Type 'never' has no construct signatures. (ts)
[36m                  >
                  <Textare[35m[36ma
                    id="how"
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\POINode.svelte[39m:464:24
[31mError[39m: Object literal may only specify known properties, and '"menu"' does not exist in type '__sveltets_2_PropsWithChildren<{ className?: string | undefined; }, { default: {}; }>'. (ts)
[36m  </ContextMenu.Trigger>
  <ContextMenu.Content [35mmenu[36m={showContextMenu} class="w-48">
    <ContextMenu.Item on:select={startEditing}>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\ReportNode.svelte[39m:77:27
[31mError[39m: Argument of type 'KeyboardEvent & { currentTarget: EventTarget & HTMLDivElement; }' is not assignable to parameter of type 'MouseEvent'.
  Type 'KeyboardEvent & { currentTarget: EventTarget & HTMLDivElement; }' is missing the following properties from type 'MouseEvent': button, buttons, clientX, clientY, and 14 more. (ts)
[36m          e.preventDefault();
          handleMouseDown([35me[36m);
        }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\ReportNode.svelte[39m:96:24
[31mError[39m: Object literal may only specify known properties, and '"menu"' does not exist in type '__sveltets_2_PropsWithChildren<{ className?: string | undefined; }, { default: {}; }>'. (ts)
[36m  </ContextMenu.Trigger>
  <ContextMenu.Content [35mmenu[36m={true}>
    <ContextMenu.Item
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\ReportNode.svelte[39m:98:37
[31mError[39m: Variable 'editorRef' is used before being assigned. (ts)
[36m    <ContextMenu.Item
      on:select={() => saveCitation([35meditorRef[36m?.getSelectedText?.() || "")}
    >
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\canvas\ReportNode.svelte[39m:98:48
[31mError[39m: Property 'getSelectedText' does not exist on type 'HTMLElement'. (ts)
[36m    <ContextMenu.Item
      on:select={() => saveCitation(editorRef?.[35mgetSelectedText[36m?.() || "")}
    >
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\cases\CaseListItem.svelte[39m:3:17
[31mError[39m: Module '"$lib/types/api"' has no exported member 'Case'. (ts)
[36m  import { Badge } from "$lib/components/ui/index";
  import type { [35mCase[36m } from "$lib/types/api";
  import { formatDistanceToNow } from "date-fns";
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\detective\DetectiveBoard.svelte[39m:45:58
[31mError[39m: Cannot find name 'Evidence'. (ts)
[36m  // Column layout
  let columns: Array<{ id: string; title: string; items: [35mEvidence[36m[] }> = [
    { id: "new", title: "New Evidence", items: [] },
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\detective\DetectiveBoard.svelte[39m:56:11
[31mError[39m: Cannot find name 'Evidence'. (ts)
[36m    y: number;
    item: [35mEvidence[36m | null;
  } = {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\detective\DetectiveBoard.svelte[39m:65:20
[31mError[39m: Cannot find name 'Evidence'. (ts)
[36m  // Drag and drop state
  let draggedItem: [35mEvidence[36m | null = null;
  let ws: WebSocket | null = null;
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\detective\DetectiveBoard.svelte[39m:193:14
[31mError[39m: Cannot find name 'Evidence'. (ts)
[36m    const movedItem = e.detail.items.find(
      (item: [35mEvidence[36m) => item.id === e.detail.info.id
    );
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\forms\EvidenceForm.svelte[39m:9:28
[31mError[39m: File name 'c:/Users/james/Desktop/web-app/sveltekit-frontend/src/lib/components/ui/textarea.js' differs from already included file name 'c:/Users/james/Desktop/web-app/sveltekit-frontend/src/lib/components/ui/Textarea.js' only in casing.
  The file is in the program because:
    Matched by include pattern '.svelte-kit/../src/**/*.js' in 'c:/Users/james/Desktop/web-app/sveltekit-frontend/tsconfig.json'
    Imported via "./Textarea" from file 'c:/Users/james/Desktop/web-app/sveltekit-frontend/src/lib/components/ui/index.ts'
    Imported via "$lib/components/ui/textarea" from file 'c:/Users/james/Desktop/web-app/sveltekit-frontend/src/lib/components/canvas/POINode.svelte'
    Imported via "$lib/components/ui/textarea" from file 'c:/Users/james/Desktop/web-app/sveltekit-frontend/src/lib/components/forms/EvidenceForm.svelte' (ts)
[36m  import { Label } from "$lib/components/ui/label";
  import { Textarea } from [35m"$lib/components/ui/textarea"[36m;
  import type { Evidence } from "$lib/types/api";
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\forms\EvidenceForm.svelte[39m:22:5
[31mError[39m: Object literal may only specify known properties, and 'defaultValue' does not exist in type 'CreateSelectProps<unknown, false, ListboxOption<unknown>>'. (ts)
[36m  } = createSelect({
    [35mdefaultValue[36m: evidence?.type || undefined,
  });
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\forms\EvidenceForm.svelte[39m:22:29
[31mError[39m: Property 'type' does not exist on type 'Evidence'. (ts)
[36m  } = createSelect({
    defaultValue: evidence?.[35mtype[36m || undefined,
  });
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\forms\EvidenceForm.svelte[39m:26:17
[31mError[39m: Cannot find name 'data'. (ts)
[36m  const { form, enhance, errors, submitting } = superForm(
    evidence || [35mdata[36m.form,
    {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\forms\EvidenceForm.svelte[39m:43:8
[31mError[39m: Cannot find name 'data'. (ts)
[36m
  {#if [35mdata[36m?.form?.message}
    <div class="alert alert-error">{data.form.message}</div>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\forms\EvidenceForm.svelte[39m:44:37
[31mError[39m: Cannot find name 'data'. (ts)
[36m  {#if data?.form?.message}
    <div class="alert alert-error">{[35mdata[36m.form.message}</div>
  {/if}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\forms\EvidenceForm.svelte[39m:56:13
[31mError[39m: This expression is not constructable.
  Type 'never' has no construct signatures. (ts)
[36m    <Label for_="description">Description</Label>
    <Textare[35m[36ma id="description" name="description" bind:value={$form.description}></Textarea>
  </div>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\editor\ReportEditor.svelte[39m:387:7
[31mError[39m: Object literal may only specify known properties, and '"data"' does not exist in type '{ evidence?: Evidence | null | undefined; }'. (ts)
[36m    <EvidenceForm
      [35mdata[36m={evidenceFormData}
      evidence={selectedEvidence}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\evidence-editor\CanvasEditor.svelte[39m:834:8
[31mError[39m: Cannot use 'state' as a store. 'state' needs to be an object with a subscribe method on it.

No overload matches this call.
  Overload 1 of 2, '(store: SvelteStore<any>): any', gave the following error.
    Argument of type 'MachineSnapshot<AutoTagContext, AnyEventObject, Record<string, AnyActorRef>, StateValue, string, NonReducibleUnknown, MetaObject, any>' is not assignable to parameter of type 'SvelteStore<any>'.
      Property 'subscribe' is missing in type 'ActiveMachineSnapshot<AutoTagContext, AnyEventObject, Record<string, AnyActorRef>, StateValue, string, NonReducibleUnknown, MetaObject, any>' but required in type 'SvelteStore<any>'.
  Overload 2 of 2, '(store: SvelteStore<any> | null | undefined): any', gave the following error.
    Argument of type 'MachineSnapshot<AutoTagContext, AnyEventObject, Record<string, AnyActorRef>, StateValue, string, NonReducibleUnknown, MetaObject, any>' is not assignable to parameter of type 'SvelteStore<any> | null | undefined'.
      Property 'subscribe' is missing in type 'ActiveMachineSnapshot<AutoTagContext, AnyEventObject, Record<string, AnyActorRef>, StateValue, string, NonReducibleUnknown, MetaObject, any>' but required in type 'SvelteStore<any>'. (ts)
[36m  <!-- XState status indicator -->
  {#if [35m$state[36m && $state.matches('processing')}
    <div class="absolute top-4 left-1/2 transform -translate-x-1/2 bg-green-500 text-white px-4 py-2 rounded-lg text-sm flex items-center gap-2">
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\evidence-editor\CanvasEditor.svelte[39m:834:18
[31mError[39m: Cannot use 'state' as a store. 'state' needs to be an object with a subscribe method on it.

No overload matches this call.
  Overload 1 of 2, '(store: SvelteStore<any>): any', gave the following error.
    Argument of type 'MachineSnapshot<AutoTagContext, AnyEventObject, Record<string, AnyActorRef>, StateValue, string, NonReducibleUnknown, MetaObject, any>' is not assignable to parameter of type 'SvelteStore<any>'.
      Property 'subscribe' is missing in type 'ActiveMachineSnapshot<AutoTagContext, AnyEventObject, Record<string, AnyActorRef>, StateValue, string, NonReducibleUnknown, MetaObject, any>' but required in type 'SvelteStore<any>'.
  Overload 2 of 2, '(store: SvelteStore<any> | null | undefined): any', gave the following error.
    Argument of type 'MachineSnapshot<AutoTagContext, AnyEventObject, Record<string, AnyActorRef>, StateValue, string, NonReducibleUnknown, MetaObject, any>' is not assignable to parameter of type 'SvelteStore<any> | null | undefined'.
      Property 'subscribe' is missing in type 'ActiveMachineSnapshot<AutoTagContext, AnyEventObject, Record<string, AnyActorRef>, StateValue, string, NonReducibleUnknown, MetaObject, any>' but required in type 'SvelteStore<any>'. (ts)
[36m  <!-- XState status indicator -->
  {#if $state && [35m$state[36m.matches('processing')}
    <div class="absolute top-4 left-1/2 transform -translate-x-1/2 bg-green-500 text-white px-4 py-2 rounded-lg text-sm flex items-center gap-2">
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\evidence-editor\CanvasEditor.svelte[39m:841:8
[31mError[39m: Cannot use 'state' as a store. 'state' needs to be an object with a subscribe method on it.

No overload matches this call.
  Overload 1 of 2, '(store: SvelteStore<any>): any', gave the following error.
    Argument of type 'MachineSnapshot<AutoTagContext, AnyEventObject, Record<string, AnyActorRef>, StateValue, string, NonReducibleUnknown, MetaObject, any>' is not assignable to parameter of type 'SvelteStore<any>'.
      Property 'subscribe' is missing in type 'ActiveMachineSnapshot<AutoTagContext, AnyEventObject, Record<string, AnyActorRef>, StateValue, string, NonReducibleUnknown, MetaObject, any>' but required in type 'SvelteStore<any>'.
  Overload 2 of 2, '(store: SvelteStore<any> | null | undefined): any', gave the following error.
    Argument of type 'MachineSnapshot<AutoTagContext, AnyEventObject, Record<string, AnyActorRef>, StateValue, string, NonReducibleUnknown, MetaObject, any>' is not assignable to parameter of type 'SvelteStore<any> | null | undefined'.
      Property 'subscribe' is missing in type 'ActiveMachineSnapshot<AutoTagContext, AnyEventObject, Record<string, AnyActorRef>, StateValue, string, NonReducibleUnknown, MetaObject, any>' but required in type 'SvelteStore<any>'. (ts)
[36m  
  {#if [35m$state[36m && $state.matches('error')}
    <div class="absolute top-4 left-1/2 transform -translate-x-1/2 bg-red-500 text-white px-4 py-2 rounded-lg text-sm">
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\evidence-editor\CanvasEditor.svelte[39m:841:18
[31mError[39m: Cannot use 'state' as a store. 'state' needs to be an object with a subscribe method on it.

No overload matches this call.
  Overload 1 of 2, '(store: SvelteStore<any>): any', gave the following error.
    Argument of type 'MachineSnapshot<AutoTagContext, AnyEventObject, Record<string, AnyActorRef>, StateValue, string, NonReducibleUnknown, MetaObject, any>' is not assignable to parameter of type 'SvelteStore<any>'.
      Property 'subscribe' is missing in type 'ActiveMachineSnapshot<AutoTagContext, AnyEventObject, Record<string, AnyActorRef>, StateValue, string, NonReducibleUnknown, MetaObject, any>' but required in type 'SvelteStore<any>'.
  Overload 2 of 2, '(store: SvelteStore<any> | null | undefined): any', gave the following error.
    Argument of type 'MachineSnapshot<AutoTagContext, AnyEventObject, Record<string, AnyActorRef>, StateValue, string, NonReducibleUnknown, MetaObject, any>' is not assignable to parameter of type 'SvelteStore<any> | null | undefined'.
      Property 'subscribe' is missing in type 'ActiveMachineSnapshot<AutoTagContext, AnyEventObject, Record<string, AnyActorRef>, StateValue, string, NonReducibleUnknown, MetaObject, any>' but required in type 'SvelteStore<any>'. (ts)
[36m  
  {#if $state && [35m$state[36m.matches('error')}
    <div class="absolute top-4 left-1/2 transform -translate-x-1/2 bg-red-500 text-white px-4 py-2 rounded-lg text-sm">
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\evidence-editor\InspectorPanel.svelte[39m:583:17
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m              <div>
                [35m<label class="block text-sm font-medium text-gray-700 mb-1">Title</label>[36m
                <input
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\evidence-editor\InspectorPanel.svelte[39m:593:17
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m              <div>
                [35m<label class="block text-sm font-medium text-gray-700 mb-1">Description</label>[36m
                <textarea
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\evidence-editor\InspectorPanel.svelte[39m:605:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div>
                  [35m<label class="block text-sm font-medium text-gray-700 mb-1">Evidence Type</label>[36m
                  <select 
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\evidence-editor\InspectorPanel.svelte[39m:618:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div>
                  [35m<label class="block text-sm font-medium text-gray-700 mb-1">Legal Relevance</label>[36m
                  <select 
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\evidence-editor\InspectorPanel.svelte[39m:633:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div>
                  [35m<label class="block text-sm font-medium text-gray-700 mb-1">Confidentiality</label>[36m
                  <select 
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\evidence-editor\InspectorPanel.svelte[39m:646:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div>
                  [35m<label class="block text-sm font-medium text-gray-700 mb-1">Urgency</label>[36m
                  <select 
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\evidence-editor\InspectorPanel.svelte[39m:668:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div>
                  [35m<label class="block text-sm font-medium text-gray-700 mb-2">AI-Generated Tags</label>[36m
                  <div class="flex flex-wrap gap-1">
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\evidence-editor\InspectorPanel.svelte[39m:679:17
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m              <div>
                [35m<label class="block text-sm font-medium text-gray-700 mb-2">Custom Tags</label>[36m
                <div class="flex flex-wrap gap-1 mb-2">
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\evidence-editor\InspectorPanel.svelte[39m:721:21
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                  <div class="flex items-center gap-2 mb-2">
                    [35m<label class="block text-sm font-medium text-gray-700">People</label>[36m
                    {#if $formData.extractionConfidence.people > 0}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\evidence-editor\InspectorPanel.svelte[39m:764:21
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                  <div class="flex items-center gap-2 mb-2">
                    [35m<label class="block text-sm font-medium text-gray-700">Locations</label>[36m
                    {#if $formData.extractionConfidence.locations > 0}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\evidence-editor\InspectorPanel.svelte[39m:807:21
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                  <div class="flex items-center gap-2 mb-2">
                    [35m<label class="block text-sm font-medium text-gray-700">Organizations</label>[36m
                    {#if $formData.extractionConfidence.organizations > 0}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\evidence-editor\InspectorPanel.svelte[39m:850:21
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                  <div class="flex items-center gap-2 mb-2">
                    [35m<label class="block text-sm font-medium text-gray-700">Dates</label>[36m
                    {#if $formData.extractionConfidence.dates > 0}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\evidence-editor\InspectorPanel.svelte[39m:893:19
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                <div>
                  [35m<label class="block text-sm font-medium text-gray-700 mb-2">Action Items</label>[36m
                  <div class="flex flex-wrap gap-1 mb-2">
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\evidence-editor\InspectorPanel.svelte[39m:927:21
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                  <div>
                    [35m<label class="block text-sm font-medium text-gray-700 mb-2">AI Recommendations</label>[36m
                    <ul class="space-y-1">
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\evidence-editor\InspectorPanel.svelte[39m:967:21
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                  <div>
                    [35m<label class="block text-sm font-medium text-gray-700 mb-1">Relevant Statutes</label>[36m
                    <div class="flex flex-wrap gap-1">
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\evidence-editor\InspectorPanel.svelte[39m:978:21
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                  <div>
                    [35m<label class="block text-sm font-medium text-gray-700 mb-1">Monetary Amounts</label>[36m
                    <div class="flex flex-wrap gap-1">
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\evidence-editor\InspectorPanel.svelte[39m:989:21
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                  <div>
                    [35m<label class="block text-sm font-medium text-gray-700 mb-1">Potential Witnesses</label>[36m
                    <div class="flex flex-wrap gap-1">
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\evidence-editor\InspectorPanel.svelte[39m:1000:21
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m                  <div>
                    [35m<label class="block text-sm font-medium text-gray-700 mb-1">Related Cases</label>[36m
                    <div class="flex flex-wrap gap-1">
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\evidence-editor\InspectorPanel.svelte[39m:191:9
[31mError[39m: Type 'any[]' is not assignable to type 'never[]'.
  Type 'any' is not assignable to type 'never'. (ts)
[36m      if (node.metadata) {
        [35mnewFormData.customTags[36m = [...(node.customTags || [])];
      }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\evidence-editor\VisualEvidenceEditor.svelte[39m:68:41
[31mError[39m: Spread types may only be created from object types. (ts)
[36m            currentSelectedNode.aiTags = e.detail;
            selectedNode.update(n => ({ [35m...n[36m, aiTags: e.detail }));
          }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\forms\EnhancedCaseForm.svelte[39m:19:18
[31mError[39m: Property 'name' does not exist on type 'Case'. (ts)
[36m    caseNumber: case_?.caseNumber || "",
    name: case_?.[35mname[36m || "",
    incidentDate: case_?.incidentDate
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\forms\EnhancedCaseForm.svelte[39m:20:26
[31mError[39m: Property 'incidentDate' does not exist on type 'Case'. (ts)
[36m    name: case_?.name || "",
    incidentDate: case_?.[35mincidentDate[36m
      ? new Date(case_.incidentDate).toISOString().split("T")[0]
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\forms\EnhancedCaseForm.svelte[39m:21:24
[31mError[39m: Property 'incidentDate' does not exist on type 'Case'. (ts)
[36m    incidentDate: case_?.incidentDate
      ? new Date(case_.[35mincidentDate[36m).toISOString().split("T")[0]
      : "",
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\forms\EnhancedCaseForm.svelte[39m:23:22
[31mError[39m: Property 'location' does not exist on type 'Case'. (ts)
[36m      : "",
    location: case_?.[35mlocation[36m || "",
    priority: case_?.priority || "medium",
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\forms\EnhancedCaseForm.svelte[39m:26:22
[31mError[39m: Property 'category' does not exist on type 'Case'. (ts)
[36m    status: case_?.status || "open",
    category: case_?.[35mcategory[36m || "",
    dangerScore: case_?.dangerScore || 0,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\forms\EnhancedCaseForm.svelte[39m:27:25
[31mError[39m: Property 'dangerScore' does not exist on type 'Case'. (ts)
[36m    category: case_?.category || "",
    dangerScore: case_?.[35mdangerScore[36m || 0,
    estimatedValue: case_?.estimatedValue || "",
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\forms\EnhancedCaseForm.svelte[39m:28:28
[31mError[39m: Property 'estimatedValue' does not exist on type 'Case'. (ts)
[36m    dangerScore: case_?.dangerScore || 0,
    estimatedValue: case_?.[35mestimatedValue[36m || "",
    jurisdiction: case_?.jurisdiction || "",
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\forms\EnhancedCaseForm.svelte[39m:29:26
[31mError[39m: Property 'jurisdiction' does not exist on type 'Case'. (ts)
[36m    estimatedValue: case_?.estimatedValue || "",
    jurisdiction: case_?.[35mjurisdiction[36m || "",
    leadProsecutor: case_?.leadProsecutor || user?.id || "",
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\forms\EnhancedCaseForm.svelte[39m:30:28
[31mError[39m: Property 'leadProsecutor' does not exist on type 'Case'. (ts)
[36m    jurisdiction: case_?.jurisdiction || "",
    leadProsecutor: case_?.[35mleadProsecutor[36m || user?.id || "",
    assignedTeam: case_?.assignedTeam || [],
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\forms\EnhancedCaseForm.svelte[39m:31:26
[31mError[39m: Property 'assignedTeam' does not exist on type 'Case'. (ts)
[36m    leadProsecutor: case_?.leadProsecutor || user?.id || "",
    assignedTeam: case_?.[35massignedTeam[36m || [],
    tags: case_?.tags || [],
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\forms\EnhancedCaseForm.svelte[39m:32:18
[31mError[39m: Property 'tags' does not exist on type 'Case'. (ts)
[36m    assignedTeam: case_?.assignedTeam || [],
    tags: case_?.[35mtags[36m || [],
    metadata: case_?.metadata || {},
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\forms\EnhancedCaseForm.svelte[39m:33:22
[31mError[39m: Property 'metadata' does not exist on type 'Case'. (ts)
[36m    tags: case_?.tags || [],
    metadata: case_?.[35mmetadata[36m || {},
  };
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\keyboard\KeyboardShortcuts.svelte[39m:707:3
[33mWarn[39m: Unused CSS selector ".close-button"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.close-button[36m {
    position: absolute;
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\ui\drawer\Drawer.svelte[39m:26:3
[33mWarn[39m: Elements with the 'dialog' interactive role must have a tabindex value
https://svelte.dev/e/a11y_interactive_supports_focus (svelte)
[36m{#if open}
  [35m<div
    class="drawer-overlay"
    role="dialog"
    aria-modal="true"
    aria-label={title ? title : "Drawer"}
    on:click={handleBackdropClick}
  >
    <div class="drawer drawer-{side} drawer-{size}">
      <div class="drawer-header">
        {#if title}
          <h2 class="drawer-title">{title}</h2>
        {/if}
        {#if description}
          <p class="drawer-description">{description}</p>
        {/if}
        <button
          class="drawer-close"
          aria-label="Close drawer"
          on:click={handleClose}
        >
          <X size="24" />
        </button>
      </div>
      <div class="drawer-content">
        <slot />
      </div>
    </div>
  </div>[36m
{/if}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\ui\drawer\Drawer.svelte[39m:26:3
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m{#if open}
  [35m<div
    class="drawer-overlay"
    role="dialog"
    aria-modal="true"
    aria-label={title ? title : "Drawer"}
    on:click={handleBackdropClick}
  >
    <div class="drawer drawer-{side} drawer-{size}">
      <div class="drawer-header">
        {#if title}
          <h2 class="drawer-title">{title}</h2>
        {/if}
        {#if description}
          <p class="drawer-description">{description}</p>
        {/if}
        <button
          class="drawer-close"
          aria-label="Close drawer"
          on:click={handleClose}
        >
          <X size="24" />
        </button>
      </div>
      <div class="drawer-content">
        <slot />
      </div>
    </div>
  </div>[36m
{/if}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\modals\EvidenceValidationModal.svelte[39m:131:42
[31mError[39m: '$$_esolC_evitimirPgolaiD4.$$slot_def' is of type 'unknown'. (ts)
[36m        </div>
        <DialogPrimitive.Close let:builde[35m[36mr>
          <Button
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\lib\components\ui\CaseForm.svelte[39m:332:19
[31mError[39m: Object literal may only specify known properties, and '"icon"' does not exist in type '__sveltets_2_PropsWithChildren<$$Props, { default: {}; }>'. (ts)
[36m                  size="md"
                  [35micon[36m="plus"
                  on:click={() => addTag()}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\ai\+page.svelte[39m:238:15
[31mError[39m: Type 'string | null' is not assignable to type 'string | undefined'.
  Type 'null' is not assignable to type 'string | undefined'. (ts)
[36m              height="500px"
              [35mcaseId[36m={$page.url.searchParams.get("caseId")}
            />
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\ai-test\+page.svelte[39m:192:11
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m        <div>
          [35m<label class="block text-sm font-medium mb-1">Document Text</label>[36m
          <textarea
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\ai-test\+page.svelte[39m:200:11
[33mWarn[39m: A form label must be associated with a control
https://svelte.dev/e/a11y_label_has_associated_control (svelte)
[36m        <div>
          [35m<label class="block text-sm font-medium mb-1">Search Query</label>[36m
          <input
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+layout.svelte[39m:449:3
[31mError[39m: `</div>` attempted to close an element that was not open
https://svelte.dev/e/element_invalid_closing_tag (svelte)
[36m    {/if}
  [35m[36m</div>
</div>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+layout.svelte[39m:449:3
[31mError[39m: `</div>` attempted to close an element that was not open
https://svelte.dev/e/element_invalid_closing_tag (ts)
[36m    {/if}
  [35m[36m</div>
</div>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+page.svelte[39m:467:13
[31mError[39m: Expected token }
https://svelte.dev/e/expected_token (svelte)
[36m  let focusManager = {
    setFocus[35m[36m: (selector: string) => {
      if (browser) {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\+page.svelte[39m:467:13
[31mError[39m: Expected token }
https://svelte.dev/e/expected_token (ts)
[36m  let focusManager = {
    setFocus[35m[36m: (selector: string) => {
      if (browser) {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\[id]\+page.svelte[39m:55:7
[33mWarn[39m: Non-interactive element `<div>` should not be assigned mouse or keyboard event listeners
https://svelte.dev/e/a11y_no_noninteractive_element_interactions (svelte)
[36m    {#if $showSidebar}
      [35m<div
        class="sidebar-panel fixed left-0 top-0 h-full w-64 bg-background-alt shadow-lg z-30 flex flex-col"
        role="complementary"
        on:mouseenter={handleSidebarMouseEnter}
        on:mouseleave={handleSidebarMouseLeave}
        on:keydown={(e) => {
          if (e.key === "Escape") {
            handleSidebarMouseLeave();
          }
        }}
      >
        <EvidencePanel {caseId} onEvidenceDrop={handleEvidenceDrop} />
      </div>[36m
    {/if}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\[id]\canvas\+page.svelte[39m:424:3
[33mWarn[39m: Unused CSS selector ".canvas-background.drag-over"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.canvas-background.drag-over[36m {
    background-color: #e0f2fe;
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\[id]\canvas\+page.svelte[39m:289:26
[31mError[39m: Object literal may only specify known properties, and '"class"' does not exist in type '__sveltets_2_PropsWithChildren<{ className?: string | undefined; }, { default: {}; }>'. (ts)
[36m
    <ContextMenu.Content [35mclass[36m="w-56">
      <ContextMenu.Item
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\[id]\enhanced\+page.svelte[39m:202:11
[31mError[39m: Type '{ id: string; caseId: string | null; criminalId: string | null; title: string; description: string | null; evidenceType: string; fileType: string | null; subType: string | null; fileUrl: string | null; ... 19 more ...; updatedAt: Date; }[]' is not assignable to type 'EvidenceItem[]'.
  Type '{ id: string; caseId: string | null; criminalId: string | null; title: string; description: string | null; evidenceType: string; fileType: string | null; subType: string | null; fileUrl: string | null; ... 19 more ...; updatedAt: Date; }' is not assignable to type 'EvidenceItem'.
    Types of property 'aiAnalysis' are incompatible.
      Type 'unknown' is not assignable to type 'Record<string, any> | undefined'. (ts)
[36m          description: caseData.description,
          [35mevidence[36m: $evidenceList,
          activities: [], // Could load case activities
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\[id]\enhanced\+page.svelte[39m:263:11
[31mError[39m: Type '{ id: string; caseId: string | null; criminalId: string | null; title: string; description: string | null; evidenceType: string; fileType: string | null; subType: string | null; fileUrl: string | null; ... 19 more ...; updatedAt: Date; }[]' is not assignable to type 'EvidenceItem[]'.
  Type '{ id: string; caseId: string | null; criminalId: string | null; title: string; description: string | null; evidenceType: string; fileType: string | null; subType: string | null; fileUrl: string | null; ... 19 more ...; updatedAt: Date; }' is not assignable to type 'EvidenceItem'.
    Types of property 'aiAnalysis' are incompatible.
      Type 'unknown' is not assignable to type 'Record<string, any> | undefined'. (ts)
[36m          description: caseData.description,
          [35mevidence[36m: $evidenceList,
          activities: [],
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\cases\new\+page.svelte[39m:70:5
[31mError[39m: Type '{}' is missing the following properties from type 'Case': id, caseNumber, title, status, and 3 more. (ts)
[36m  <EnhancedCaseForm
    [35mcase_[36m={caseData}
    user={{
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\evidence\+page.svelte[39m:277:30
[31mError[39m: Property 'id' does not exist on type 'never'. (ts)
[36m    const evidenceToExport = allEvidence.filter((e) =>
      evidenceIds.includes(e.[35mid[36m)
    );
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\help\+page.svelte[39m:422:5
[31mError[39m: Type '{ id: string; category: string; title: string; description: string; type: string; duration: string; popularity: number; content: string; }[]' is not assignable to type 'HelpArticle[]'.
  Type '{ id: string; category: string; title: string; description: string; type: string; duration: string; popularity: number; content: string; }' is missing the following properties from type 'HelpArticle': tags, lastUpdated (ts)
[36m
    [35mfilteredArticles[36m = results;
  }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\help\+page.svelte[39m:575:49
[31mError[39m: Property 'type' does not exist on type 'HelpArticle'. (ts)
[36m                    <svelte:component
                      this={getTypeIcon(article.[35mtype[36m)}
                      class="h-6 w-6 {getTypeColor(article.type)}"
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\help\+page.svelte[39m:576:60
[31mError[39m: Property 'type' does not exist on type 'HelpArticle'. (ts)
[36m                      this={getTypeIcon(article.type)}
                      class="h-6 w-6 {getTypeColor(article.[35mtype[36m)}"
                    />
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\help\+page.svelte[39m:585:32
[31mError[39m: Property 'description' does not exist on type 'HelpArticle'. (ts)
[36m                    <p class="text-gray-600 text-sm mb-3">
                      {article.[35mdescription[36m}
                    </p>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\help\+page.svelte[39m:593:34
[31mError[39m: Property 'duration' does not exist on type 'HelpArticle'. (ts)
[36m                        <Clock class="h-4 w-4" />
                        {article.[35mduration[36m}
                      </div>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\help\+page.svelte[39m:597:34
[31mError[39m: Property 'popularity' does not exist on type 'HelpArticle'. (ts)
[36m                        <Star class="h-4 w-4" />
                        {article.[35mpopularity[36m}/5
                      </div>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\help\+page.svelte[39m:600:34
[31mError[39m: Property 'type' does not exist on type 'HelpArticle'. (ts)
[36m                      <div class="capitalize">
                        {article.[35mtype[36m}
                      </div>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\import\+page.svelte[39m:150:11
[31mError[39m: Object literal may only specify known properties, and 'data' does not exist in type '{ name: string; size: number; type: string; content?: string | undefined; }'. (ts)
[36m          type: "json",
          [35mdata[36m: JSON.parse(content),
          raw: content.substring(0, 500) + (content.length > 500 ? "..." : ""),
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\import\+page.svelte[39m:157:11
[31mError[39m: Object literal may only specify known properties, and 'data' does not exist in type '{ name: string; size: number; type: string; content?: string | undefined; }'. (ts)
[36m          type: "csv",
          [35mdata[36m: lines,
          raw: content.substring(0, 500) + (content.length > 500 ? "..." : ""),
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\import\+page.svelte[39m:163:11
[31mError[39m: Object literal may only specify known properties, and 'data' does not exist in type '{ name: string; size: number; type: string; content?: string | undefined; }'. (ts)
[36m          type: "xml",
          [35mdata[36m: content.substring(0, 500) + (content.length > 500 ? "..." : ""),
          raw: content.substring(0, 500) + (content.length > 500 ? "..." : ""),
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\import\+page.svelte[39m:394:31
[31mError[39m: Property 'data' does not exist on type '{ name: string; size: number; type: string; content?: string | undefined; }'. (ts)
[36m                class="text-sm text-gray-800 whitespace-pre-wrap">{JSON.stringify(
                  filePreview.[35mdata[36m,
                  null,
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\import\+page.svelte[39m:397:66
[31mError[39m: Property 'data' does not exist on type '{ name: string; size: number; type: string; content?: string | undefined; }'. (ts)
[36m                  2
                ).substring(0, 1000)}{JSON.stringify(filePreview.[35mdata[36m, null, 2)
                  .length > 1000
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\import\+page.svelte[39m:406:38
[31mError[39m: Property 'data' does not exist on type '{ name: string; size: number; type: string; content?: string | undefined; }'. (ts)
[36m                <tbody>
                  {#each filePreview.[35mdata[36m as row, i}
                    <tr class:bg-white={i % 2 === 0}>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\import\+page.svelte[39m:421:80
[31mError[39m: Property 'raw' does not exist on type '{ name: string; size: number; type: string; content?: string | undefined; }'. (ts)
[36m              <pre
                class="text-sm text-gray-800 whitespace-pre-wrap">{filePreview.[35mraw[36m}</pre>
            </div>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\import\+page.svelte[39m:443:34
[31mError[39m: Property 'results' does not exist on type '{ success: boolean; message: string; data?: unknown; }'. (ts)
[36m                <div class="text-2xl font-bold text-green-600">
                  {importResults.[35mresults[36m.imported}
                </div>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\import\+page.svelte[39m:449:34
[31mError[39m: Property 'results' does not exist on type '{ success: boolean; message: string; data?: unknown; }'. (ts)
[36m                <div class="text-2xl font-bold text-blue-600">
                  {importResults.[35mresults[36m.updated}
                </div>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\import\+page.svelte[39m:455:34
[31mError[39m: Property 'results' does not exist on type '{ success: boolean; message: string; data?: unknown; }'. (ts)
[36m                <div class="text-2xl font-bold text-yellow-600">
                  {importResults.[35mresults[36m.skipped}
                </div>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\import\+page.svelte[39m:461:32
[31mError[39m: Property 'results' does not exist on type '{ success: boolean; message: string; data?: unknown; }'. (ts)
[36m
            {#if importResults.[35mresults[36m.errors.length > 0}
              <div class="bg-red-50 border border-red-200 rounded-lg p-4">
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\import\+page.svelte[39m:465:40
[31mError[39m: Property 'results' does not exist on type '{ success: boolean; message: string; data?: unknown; }'. (ts)
[36m                <ul class="text-sm text-red-700 space-y-1">
                  {#each importResults.[35mresults[36m.errors as error}
                    <li>ΓÇó {error}</li>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\import\+page.svelte[39m:473:54
[31mError[39m: Property 'error' does not exist on type '{ success: boolean; message: string; data?: unknown; }'. (ts)
[36m            <div class="bg-red-50 border border-red-200 rounded-lg p-4">
              <p class="text-red-800">{importResults.[35merror[36m}</p>
            </div>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\local-ai-demo\+page.svelte[39m:549:62
[31mError[39m: Property 'slice' does not exist on type '{}'. (ts)
[36m                        <div class="flex flex-wrap gap-1 mt-1">
                          {#each analysisResults.keyEntities.[35mslice[36m(0, 5) as entity}
                            <span
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\local-ai-demo\+page.svelte[39m:615:51
[31mError[39m: Property 'length' does not exist on type '{}'. (ts)
[36m                    <div class="text-sm text-gray-600">
                      Found {testResults.results?.[35mlength[36m || 0} results in {testResults.executionTime ||
                        0}ms (Source: {testResults.source || "unknown"})
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\local-ai-demo\+page.svelte[39m:619:69
[31mError[39m: Property 'length' does not exist on type '{}'. (ts)
[36m
                    {#if testResults.results && testResults.results.[35mlength[36m > 0}
                      {#each testResults.results as result}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\local-ai-demo\+page.svelte[39m:620:30
[31mError[39m: Argument of type '{}' is not assignable to parameter of type 'ArrayLike<unknown> | Iterable<unknown>'. (ts)
[36m                    {#if testResults.results && testResults.results.length > 0}
                      {#each [35mtestResults.results[36m as result}
                        <div
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\local-ai-demo\+page.svelte[39m:626:32
[31mError[39m: 'result' is of type 'unknown'. (ts)
[36m                            <h5 class="font-medium text-gray-900">
                              {[35mresult[36m.title}
                            </h5>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\local-ai-demo\+page.svelte[39m:630:45
[31mError[39m: 'result' is of type 'unknown'. (ts)
[36m                              <span class="text-xs text-gray-500">
                                {Math.round([35mresult[36m.score * 100)}% match
                              </span>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\local-ai-demo\+page.svelte[39m:633:55
[31mError[39m: 'result' is of type 'unknown'. (ts)
[36m                              <svelte:component
                                this={getProviderIcon([35mresult[36m.source)}
                                class="w-3 h-3 text-gray-400"
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\local-ai-demo\+page.svelte[39m:639:30
[31mError[39m: 'result' is of type 'unknown'. (ts)
[36m                          <p class="text-sm text-gray-600 mb-2">
                            {[35mresult[36m.content.substring(0, 200)}...
                          </p>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\local-ai-demo\+page.svelte[39m:642:42
[31mError[39m: 'result' is of type 'unknown'. (ts)
[36m                          <div class="flex space-x-2 text-xs text-gray-500">
                            <span>Type: {[35mresult[36m.type}</span>
                            <span>Source: {result.source}</span>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\local-ai-demo\+page.svelte[39m:643:44
[31mError[39m: 'result' is of type 'unknown'. (ts)
[36m                            <span>Type: {result.type}</span>
                            <span>Source: {[35mresult[36m.source}</span>
                          </div>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\modern-demo\+page.svelte[39m:2:28
[31mError[39m: Unterminated string constant
https://svelte.dev/e/js_parse_error (svelte)
[36m<script lang="ts">
  import EvidenceCard from [35m[36m"$lib/components/evidence/EvidenceCard.svelte  function handleEvidenceDelete(evidence: Evidence) {
    console.log("Delete evidence:", evidence);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\modern-demo\+page.svelte[39m:2:125
[31mError[39m: Unterminated string literal. (ts)
[36m<script lang="ts">
  import EvidenceCard from "$lib/components/evidence/EvidenceCard.svelte  function handleEvidenceDelete(evidence: Evidence) [35m[36m{
    console.log("Delete evidence:", evidence);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\modern-demo\+page.svelte[39m:20:39
[31mError[39m: Declaration or statement expected. (ts)
[36m    console.log("Command insert:", event.detail);
  }dGrid, GoldenLayout, SmartTextarea [35m}[36m from "$lib/components/ui";
  import { citationStore } from "$lib/stores/citations";
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\modern-demo\+page.svelte[39m:20:41
[31mError[39m: Unexpected keyword or identifier. (ts)
[36m    console.log("Command insert:", event.detail);
  }dGrid, GoldenLayout, SmartTextarea } [35mfrom[36m "$lib/components/ui";
  import { citationStore } from "$lib/stores/citations";
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\modern-demo\+page.svelte[39m:2:28
[31mError[39m: Cannot find module '$lib/components/evidence/EvidenceCard.svelte  function handleEvidenceDelete(evidence: Evidence) {' or its corresponding type declarations. (ts)
[36m<script lang="ts">
  import EvidenceCard from [35m"$lib/components/evidence/EvidenceCard.svelte  function handleEvidenceDelete(evidence: Evidence) {[36m
    console.log("Delete evidence:", evidence);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\modern-demo\+page.svelte[39m:3:37
[31mError[39m: Cannot find name 'evidence'. (ts)
[36m  import EvidenceCard from "$lib/components/evidence/EvidenceCard.svelte  function handleEvidenceDelete(evidence: Evidence) {
    console.log("Delete evidence:", [35mevidence[36m);
  }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\modern-demo\+page.svelte[39m:6:12
[31mError[39m: Duplicate function implementation. (ts)
[36m
  function [35mhandleEvidenceDownload[36m(evidence: Evidence) {
    console.log("Download evidence:", evidence);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\modern-demo\+page.svelte[39m:10:12
[31mError[39m: Duplicate function implementation. (ts)
[36m
  function [35mhandleGridExpand[36m(event: CustomEvent) {
    console.log("Grid expand:", event.detail);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\modern-demo\+page.svelte[39m:14:12
[31mError[39m: Duplicate function implementation. (ts)
[36m
  function [35mhandleTextareaInput[36m(event: CustomEvent) {
    console.log("Textarea input:", event.detail);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\modern-demo\+page.svelte[39m:18:12
[31mError[39m: Duplicate function implementation. (ts)
[36m
  function [35mhandleCommandInsert[36m(event: CustomEvent) {
    console.log("Command insert:", event.detail);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\modern-demo\+page.svelte[39m:20:4
[31mError[39m: Cannot find name 'dGrid'. (ts)
[36m    console.log("Command insert:", event.detail);
  }[35mdGrid[36m, GoldenLayout, SmartTextarea } from "$lib/components/ui";
  import { citationStore } from "$lib/stores/citations";
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\modern-demo\+page.svelte[39m:20:4
[31mError[39m: Left side of comma operator is unused and has no side effects. (ts)
[36m    console.log("Command insert:", event.detail);
  }[35mdGrid[36m, GoldenLayout, SmartTextarea } from "$lib/components/ui";
  import { citationStore } from "$lib/stores/citations";
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\modern-demo\+page.svelte[39m:20:4
[31mError[39m: Left side of comma operator is unused and has no side effects. (ts)
[36m    console.log("Command insert:", event.detail);
  }[35mdGrid, GoldenLayout[36m, SmartTextarea } from "$lib/components/ui";
  import { citationStore } from "$lib/stores/citations";
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\modern-demo\+page.svelte[39m:20:11
[31mError[39m: Cannot find name 'GoldenLayout'. (ts)
[36m    console.log("Command insert:", event.detail);
  }dGrid, [35mGoldenLayout[36m, SmartTextarea } from "$lib/components/ui";
  import { citationStore } from "$lib/stores/citations";
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\modern-demo\+page.svelte[39m:20:25
[31mError[39m: Cannot find name 'SmartTextarea'. (ts)
[36m    console.log("Command insert:", event.detail);
  }dGrid, GoldenLayout, [35mSmartTextarea[36m } from "$lib/components/ui";
  import { citationStore } from "$lib/stores/citations";
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\modern-demo\+page.svelte[39m:20:41
[31mError[39m: Cannot find name 'from'. (ts)
[36m    console.log("Command insert:", event.detail);
  }dGrid, GoldenLayout, SmartTextarea } [35mfrom[36m "$lib/components/ui";
  import { citationStore } from "$lib/stores/citations";
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\modern-demo\+page.svelte[39m:113:12
[31mError[39m: Duplicate function implementation. (ts)
[36m
  function [35mhandleEvidenceDownload[36m(evidence: any) {
    console.log("Download evidence:", evidence);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\modern-demo\+page.svelte[39m:117:12
[31mError[39m: Duplicate function implementation. (ts)
[36m
  function [35mhandleGridExpand[36m(event: any) {
    console.log("Grid expanded:", event.detail.expanded);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\modern-demo\+page.svelte[39m:121:12
[31mError[39m: Duplicate function implementation. (ts)
[36m
  function [35mhandleTextareaInput[36m(event: any) {
    console.log("Textarea input:", event.detail.value);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\modern-demo\+page.svelte[39m:125:12
[31mError[39m: Duplicate function implementation. (ts)
[36m
  function [35mhandleCommandInsert[36m(event: any) {
    console.log("Command inserted:", event.detail.text);
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\modern-demo\+page.svelte[39m:147:4
[31mError[39m: Cannot find name 'GoldenLayout'. (ts)
[36m
  <[35mGoldenLayout[36m
    ratio="golden"
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\modern-demo\+page.svelte[39m:165:10
[31mError[39m: Cannot find name 'SmartTextarea'. (ts)
[36m
        <[35mSmartTextarea[36m
          bind:value={textareaValue}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\modern-demo\+page.svelte[39m:181:10
[31mError[39m: Cannot find name 'ExpandGrid'. (ts)
[36m
        <[35mExpandGrid[36m
          columns={1}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\modern-demo\+page.svelte[39m:200:11
[31mError[39m: Cannot find name 'ExpandGrid'. (ts)
[36m          {/each}
        </[35mExpandGrid[36m>
      </section>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\modern-demo\+page.svelte[39m:251:49
[31mError[39m: Cannot find name '$citationStore'. (ts)
[36m      <div class="citations-list">
        {#each citationStore.getRecentCitations([35m$citationStore[36m, 5) as citation}
          <div class="citation-item">
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\modern-demo\+page.svelte[39m:292:5
[31mError[39m: Cannot find name 'GoldenLayout'. (ts)
[36m    </div>
  </[35mGoldenLayout[36m>
</div>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\rag-demo\+page.svelte[39m:295:51
[31mError[39m: Property 'length' does not exist on type '{}'. (ts)
[36m                    <div class="text-sm text-gray-600">
                      Found {testResults.results?.[35mlength[36m || 0} results in {testResults.executionTime ||
                        0}ms (Source: {testResults.source || "unknown"})
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\rag-demo\+page.svelte[39m:299:69
[31mError[39m: Property 'length' does not exist on type '{}'. (ts)
[36m
                    {#if testResults.results && testResults.results.[35mlength[36m > 0}
                      {#each testResults.results as result}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\rag-demo\+page.svelte[39m:300:30
[31mError[39m: Argument of type '{}' is not assignable to parameter of type 'ArrayLike<unknown> | Iterable<unknown>'. (ts)
[36m                    {#if testResults.results && testResults.results.length > 0}
                      {#each [35mtestResults.results[36m as result}
                        <div
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\rag-demo\+page.svelte[39m:306:32
[31mError[39m: 'result' is of type 'unknown'. (ts)
[36m                            <h5 class="font-medium text-gray-900">
                              {[35mresult[36m.title}
                            </h5>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\rag-demo\+page.svelte[39m:309:43
[31mError[39m: 'result' is of type 'unknown'. (ts)
[36m                            <span class="text-xs text-gray-500">
                              {Math.round([35mresult[36m.score * 100)}% match
                            </span>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\rag-demo\+page.svelte[39m:313:30
[31mError[39m: 'result' is of type 'unknown'. (ts)
[36m                          <p class="text-sm text-gray-600 mb-2">
                            {[35mresult[36m.content.substring(0, 200)}...
                          </p>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\rag-demo\+page.svelte[39m:316:42
[31mError[39m: 'result' is of type 'unknown'. (ts)
[36m                          <div class="flex space-x-2 text-xs text-gray-500">
                            <span>Type: {[35mresult[36m.type}</span>
                            <span>Source: {result.source}</span>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\rag-demo\+page.svelte[39m:317:44
[31mError[39m: 'result' is of type 'unknown'. (ts)
[36m                            <span>Type: {result.type}</span>
                            <span>Source: {[35mresult[36m.source}</span>
                          </div>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\reports\+page.svelte[39m:136:63
[31mError[39m: Property 'summary' does not exist on type 'Report'. (ts)
[36m                </h2>
                <p class="text-sm text-gray-600 mt-1">{report.[35msummary[36m}</p>

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\reports\+page.svelte[39m:139:39
[31mError[39m: Property 'reportType' does not exist on type 'Report'. (ts)
[36m                <div class="flex items-center gap-4 mt-4 text-sm text-gray-500">
                  <span>Type: {report.[35mreportType[36m}</span>
                  <span>Created: {formatDate(report.createdAt)}</span>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\reports\+page.svelte[39m:140:46
[31mError[39m: Argument of type 'Date' is not assignable to parameter of type 'string'. (ts)
[36m                  <span>Type: {report.reportType}</span>
                  <span>Created: {formatDate([35mreport.createdAt[36m)}</span>
                  <span>Words: {report.wordCount || 0}</span>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\reports\+page.svelte[39m:141:40
[31mError[39m: Property 'wordCount' does not exist on type 'Report'. (ts)
[36m                  <span>Created: {formatDate(report.createdAt)}</span>
                  <span>Words: {report.[35mwordCount[36m || 0}</span>
                  {#if report.estimatedReadTime}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\reports\+page.svelte[39m:142:31
[31mError[39m: Property 'estimatedReadTime' does not exist on type 'Report'. (ts)
[36m                  <span>Words: {report.wordCount || 0}</span>
                  {#if report.[35mestimatedReadTime[36m}
                    <span>Read time: {report.estimatedReadTime} min</span>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\reports\+page.svelte[39m:143:46
[31mError[39m: Property 'estimatedReadTime' does not exist on type 'Report'. (ts)
[36m                  {#if report.estimatedReadTime}
                    <span>Read time: {report.[35mestimatedReadTime[36m} min</span>
                  {/if}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\reports\+page.svelte[39m:147:29
[31mError[39m: Property 'tags' does not exist on type 'Report'. (ts)
[36m
                {#if report.[35mtags[36m && report.tags.length > 0}
                  <div class="flex flex-wrap gap-2 mt-3">
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\reports\+page.svelte[39m:147:44
[31mError[39m: Property 'tags' does not exist on type 'Report'. (ts)
[36m
                {#if report.tags && report.[35mtags[36m.length > 0}
                  <div class="flex flex-wrap gap-2 mt-3">
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\reports\+page.svelte[39m:149:35
[31mError[39m: Property 'tags' does not exist on type 'Report'. (ts)
[36m                  <div class="flex flex-wrap gap-2 mt-3">
                    {#each report.[35mtags[36m as tag}
                      <span class="badge badge-outline badge-sm">{tag}</span>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:205:23
[31mError[39m: Can only bind to state or props
https://svelte.dev/e/bind_invalid_value (svelte)
[36m          placeholder="Search citations..."
          bind:value={[35msearchQuery[36m}
          class="search-input"
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:58:5
[31mError[39m: Cannot find name 'filteredCitations'. (ts)
[36m  $: {
    [35mfilteredCitations[36m = savedCitations.filter((citation) => {
      const matchesSearch =
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:58:25
[31mError[39m: Cannot find name 'savedCitations'. (ts)
[36m  $: {
    filteredCitations = [35msavedCitations[36m.filter((citation) => {
      const matchesSearch =
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:60:9
[31mError[39m: Cannot find name 'searchQuery'. (ts)
[36m      const matchesSearch =
        [35msearchQuery[36m === "" ||
        citation.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:61:47
[31mError[39m: Cannot find name 'searchQuery'. (ts)
[36m        searchQuery === "" ||
        citation.title.toLowerCase().includes([35msearchQuery[36m.toLowerCase()) ||
        citation.content.toLowerCase().includes(searchQuery.toLowerCase()) ||
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:62:49
[31mError[39m: Cannot find name 'searchQuery'. (ts)
[36m        citation.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
        citation.content.toLowerCase().includes([35msearchQuery[36m.toLowerCase()) ||
        citation.source.toLowerCase().includes(searchQuery.toLowerCase()) ||
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:63:48
[31mError[39m: Cannot find name 'searchQuery'. (ts)
[36m        citation.content.toLowerCase().includes(searchQuery.toLowerCase()) ||
        citation.source.toLowerCase().includes([35msearchQuery[36m.toLowerCase()) ||
        (citation.notes &&
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:65:49
[31mError[39m: Cannot find name 'searchQuery'. (ts)
[36m        (citation.notes &&
          citation.notes.toLowerCase().includes([35msearchQuery[36m.toLowerCase())) ||
        citation.tags.some((tag: string) =>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:67:38
[31mError[39m: Cannot find name 'searchQuery'. (ts)
[36m        citation.tags.some((tag: string) =>
          tag.toLowerCase().includes([35msearchQuery[36m.toLowerCase())
        );
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:71:9
[31mError[39m: Cannot find name 'selectedCategory'. (ts)
[36m      const matchesCategory =
        [35mselectedCategory[36m === "all" || citation.category === selectedCategory;

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:71:61
[31mError[39m: Cannot find name 'selectedCategory'. (ts)
[36m      const matchesCategory =
        selectedCategory === "all" || citation.category === [35mselectedCategory[36m;

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:91:7
[31mError[39m: Cannot find name 'savedCitations'. (ts)
[36m      // In a real app, this would POST to /api/user/saved-citations
      [35msavedCitations[36m = [...savedCitations, citation];

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:91:28
[31mError[39m: Cannot find name 'savedCitations'. (ts)
[36m      // In a real app, this would POST to /api/user/saved-citations
      savedCitations = [...[35msavedCitations[36m, citation];

[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:103:7
[31mError[39m: Cannot find name 'showAddDialog'. (ts)
[36m
      [35mshowAddDialog[36m = false;
    } catch (error) {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:112:7
[31mError[39m: Cannot find name 'savedCitations'. (ts)
[36m      // In a real app, this would DELETE /api/user/saved-citations/{id}
      [35msavedCitations[36m = savedCitations.filter((c) => c.id !== citationId);
    } catch (error) {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:112:24
[31mError[39m: Cannot find name 'savedCitations'. (ts)
[36m      // In a real app, this would DELETE /api/user/saved-citations/{id}
      savedCitations = [35msavedCitations[36m.filter((c) => c.id !== citationId);
    } catch (error) {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:122:7
[31mError[39m: Cannot find name 'savedCitations'. (ts)
[36m      // In a real app, this would PATCH /api/user/saved-citations/{id}
      [35msavedCitations[36m = [...savedCitations];
    } catch (error) {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:122:28
[31mError[39m: Cannot find name 'savedCitations'. (ts)
[36m      // In a real app, this would PATCH /api/user/saved-citations/{id}
      savedCitations = [...[35msavedCitations[36m];
    } catch (error) {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:135:5
[31mError[39m: 'editingCitation' is possibly 'null'. (ts)
[36m    editingCitation = { ...citation };
    [35meditingCitation[36m.tags = citation.tags.join(", ");
  }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:142:15
[31mError[39m: 'editingCitation' is possibly 'null'. (ts)
[36m        ...editingCitation,
        tags: [35meditingCitation[36m.tags
          .split(",")
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:143:12
[31mError[39m: Property 'split' does not exist on type 'string[]'. (ts)
[36m        tags: editingCitation.tags
          .[35msplit[36m(",")
          .map((tag: string) => tag.trim())
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:148:21
[31mError[39m: Cannot find name 'savedCitations'. (ts)
[36m
      const index = [35msavedCitations[36m.findIndex((c) => c.id === updated.id);
      if (index >= 0) {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:150:9
[31mError[39m: Cannot find name 'savedCitations'. (ts)
[36m      if (index >= 0) {
        [35msavedCitations[36m[index] = updated;
        savedCitations = [...savedCitations];
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:151:9
[31mError[39m: Cannot find name 'savedCitations'. (ts)
[36m        savedCitations[index] = updated;
        [35msavedCitations[36m = [...savedCitations];
      }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:151:30
[31mError[39m: Cannot find name 'savedCitations'. (ts)
[36m        savedCitations[index] = updated;
        savedCitations = [...[35msavedCitations[36m];
      }
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:161:23
[31mError[39m: Cannot find name 'savedCitations'. (ts)
[36m  // Stats
  $: totalCitations = [35msavedCitations[36m.length;
  $: favoriteCitations = savedCitations.filter((c) => c.isFavorite).length;
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:162:26
[31mError[39m: Cannot find name 'savedCitations'. (ts)
[36m  $: totalCitations = savedCitations.length;
  $: favoriteCitations = [35msavedCitations[36m.filter((c) => c.isFavorite).length;
  $: categoryCounts = savedCitations.reduce((acc, citation) => {
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:163:23
[31mError[39m: Cannot find name 'savedCitations'. (ts)
[36m  $: favoriteCitations = savedCitations.filter((c) => c.isFavorite).length;
  $: categoryCounts = [35msavedCitations[36m.reduce((acc, citation) => {
    acc[citation.category] = (acc[citation.category] || 0) + 1;
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:205:23
[31mError[39m: Cannot find name 'searchQuery'. (ts)
[36m          placeholder="Search citations..."
          bind:value={[35msearchQuery[36m}
          class="search-input"
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:210:27
[31mError[39m: Cannot find name 'selectedCategory'. (ts)
[36m
      <select bind:value={[35mselectedCategory[36m} class="category-filter">
        {#each categories as category}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:218:32
[31mError[39m: Cannot find name 'showAddDialog'. (ts)
[36m    <div class="toolbar-right">
      <Button on:click={() => ([35mshowAddDialog[36m = true)}>
        <Plus class="w-4 h-4 mr-2" />
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:227:12
[31mError[39m: Cannot find name 'filteredCitations'. (ts)
[36m  <div class="citations-grid">
    {#each [35mfilteredCitations[36m as citation (citation.id)}
      <CardRoot className="citation-card">
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:315:10
[31mError[39m: Cannot find name 'filteredCitations'. (ts)
[36m
    {#if [35mfilteredCitations[36m.length === 0}
      <div class="empty-state">
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:318:16
[31mError[39m: Cannot find name 'searchQuery'. (ts)
[36m        <div class="empty-content">
          {#if [35msearchQuery[36m || selectedCategory !== "all"}
            <h3 class="empty-title">No citations found</h3>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:318:31
[31mError[39m: Cannot find name 'selectedCategory'. (ts)
[36m        <div class="empty-content">
          {#if searchQuery || [35mselectedCategory[36m !== "all"}
            <h3 class="empty-title">No citations found</h3>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:326:17
[31mError[39m: Cannot find name 'searchQuery'. (ts)
[36m              on:click={() => {
                [35msearchQuery[36m = "";
                selectedCategory = "all";
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:327:17
[31mError[39m: Cannot find name 'selectedCategory'. (ts)
[36m                searchQuery = "";
                [35mselectedCategory[36m = "all";
              }}
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:338:38
[31mError[39m: Cannot find name 'showAddDialog'. (ts)
[36m            </p>
            <Button on:click={() => ([35mshowAddDialog[36m = true)}>
              <Plus class="w-4 h-4 mr-2" />
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:350:24
[31mError[39m: Cannot find name 'showAddDialog'. (ts)
[36m<!-- Add Citation Dialog -->
<DialogRoot bind:open={[35mshowAddDialog[36m}>
  <DialogContent
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:425:52
[31mError[39m: Cannot find name 'showAddDialog'. (ts)
[36m    <DialogFooter>
      <Button variant="secondary" on:click={() => ([35mshowAddDialog[36m = false)}
        >Cancel</Button
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\saved-citations\+page.svelte[39m:489:65
[31mError[39m: Property 'notes' does not exist on type 'Citation'. (ts)
[36m          <label for="edit-notes">Notes</label>
          <textarea id="edit-notes" bind:value={editingCitation.[35mnotes[36m} rows="2"
          ></textarea>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\search\+page.svelte[39m:391:41
[31mError[39m: Property 'executionTime' does not exist on type 'SearchResults'. (ts)
[36m                <span>{searchResults.results.length} results</span>
                <span>in {searchResults.[35mexecutionTime[36m}ms</span>
                <span class="capitalize">via {searchResults.source}</span>
[39m

c:\Users\james\Desktop\web-app\sveltekit-frontend\[32msrc\routes\search\+page.svelte[39m:392:61
[31mError[39m: Property 'source' does not exist on type 'SearchResults'. (ts)
[36m                <span>in {searchResults.executionTime}ms</span>
                <span class="capitalize">via {searchResults.[35msource[36m}</span>
              </div>
[39m

====================================
[31msvelte-check found 563 errors and 43 warnings in 118 files
[39m
