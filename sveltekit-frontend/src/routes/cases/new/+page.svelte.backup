<script lang="ts">
  import { goto } from "$app/navigation";
  import EnhancedCaseForm from "$lib/components/forms/EnhancedCaseForm.svelte";
  import { notifications } from "$lib/stores/notification";
  import TauriAPI from "$lib/tauri";
  import type { ActionData } from "./$types";

  export let form: ActionData;

  let isSubmitting = false;
  let caseData = {};

  async function handleSubmit(event: CustomEvent) {
    const { data } = event.detail;
    isSubmitting = true;

    try {
      // Call Tauri API to create case
      const newCase = await TauriAPI.createCase(data);

      notifications.add({
        type: "success",
        title: "Case Created",
        message: `Case "${data.title}" has been created successfully.`,
      });

      // Redirect to the new case
      await goto(`/cases/${newCase.id}`);
    } catch (error) {
      console.error("Failed to create case:", error);
      notifications.add({
        type: "error",
        title: "Failed to Create Case",
        message: "There was an error creating the case. Please try again.",
      });
    } finally {
      isSubmitting = false;
    }
  }

  function handleCancel() {
    goto("/cases");
  }

  // Show server-side form errors as notifications
  $: if (form?.error) {
    notifications.error("Form Error", form.error);
  }
</script>

<svelte:head>
  <title>Create New Case - WardenNet Detective Mode</title>
  <meta
    name="description"
    content="Create a new investigation case with comprehensive validation and security features"
  />
</svelte:head>

<div class="mx-auto px-4 max-w-7xl">
  <!-- Header -->
  <div class="mx-auto px-4 max-w-7xl">
    <h1 class="mx-auto px-4 max-w-7xl">Create New Case</h1>
    <p class="mx-auto px-4 max-w-7xl">
      Build a comprehensive case file with evidence and documentation
    </p>
  </div>

  <!-- Enhanced Case Form -->
  <EnhancedCaseForm
    case_={caseData}
    user={{
      id: "1",
      name: "Current User",
      email: "user@example.com",
      role: "admin",
      isActive: true,
      createdAt: new Date(),
      updatedAt: new Date(),
    "
    on:submit={handleSubmit}
    on:cancel={handleCancel}
  />
</div>
