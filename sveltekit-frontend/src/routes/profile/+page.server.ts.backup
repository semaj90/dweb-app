import { cases, criminals, evidence } from "$lib/server/db/schema-postgres";
import { redirect } from "@sveltejs/kit";
import { count, eq } from "drizzle-orm";
import { db } from "$lib/server/db/index";
import type { PageServerLoad } from "./$types";

export const load: PageServerLoad = async ({ locals }) => {
  if (!locals.user) {
    throw redirect(302, "/login");
  }

  try {
    // Get user account statistics
    const [
      totalCases,
      openCases,
      closedCases,
      totalCrimes,
      totalCriminals,
      totalEvidence,
      felonyCases,
      misdemeanorCases,
      citationCases,
    ] = await Promise.all([
      // Total cases
      db.select({ count: count() }).from(cases),

      // Open cases
      db.select({ count: count() }).from(cases).where(eq(cases.status, "open")),

      // Closed cases
      db
        .select({ count: count() })
        .from(cases)
        .where(eq(cases.status, "closed")),

      // Total crimes (placeholder - table doesn't exist yet)
      Promise.resolve([{ count: 0 }]),

      // Total criminals
      db.select({ count: count() }).from(criminals),

      // Total evidence
      db.select({ count: count() }).from(evidence),
      // Felony cases (placeholder)
      Promise.resolve([{ count: 0 }]),

      // Misdemeanor cases (placeholder)
      Promise.resolve([{ count: 0 }]),

      // Citation cases (placeholder)
      Promise.resolve([{ count: 0 }]),
    ]);

    const userStats = {
      totalCases: totalCases[0]?.count || 0,
      openCases: openCases[0]?.count || 0,
      closedCases: closedCases[0]?.count || 0,
      totalCrimes: totalCrimes[0]?.count || 0,
      totalCriminals: totalCriminals[0]?.count || 0,
      totalEvidence: totalEvidence[0]?.count || 0,
      felonyCases: felonyCases[0]?.count || 0,
      misdemeanorCases: misdemeanorCases[0]?.count || 0,
      citationCases: citationCases[0]?.count || 0,
    };

    return {
      user: locals.user,
      session: locals.session,
      userStats,
    };
  } catch (error) {
    console.error("Error loading user stats:", error);

    // Return basic data if stats fail
    return {
      user: locals.user,
      session: locals.session,
      userStats: {
        totalCases: 0,
        openCases: 0,
        closedCases: 0,
        totalCrimes: 0,
        totalCriminals: 0,
        totalEvidence: 0,
        felonyCases: 0,
        misdemeanorCases: 0,
        citationCases: 0,
      },
    };
  }
};
