
// Global type definitions for the project

declare global {
  namespace App {
    interface Error {
      message: string;
      code?: string;
    }
    
    interface Locals {
      user: User | null;
      session: Session | null;
    }
    
    interface PageData {}
    
    interface Platform {}
  }
}

// User type definition
export interface User {
  id: string;
  email: string;
  name: string;
  firstName?: string;
  lastName?: string;
  avatarUrl?: string;
  role: 'user' | 'admin' | 'prosecutor' | 'investigator';
  isActive: boolean;
  emailVerified?: boolean;
  createdAt: Date;
  updatedAt: Date;
}

// Session type definition
export interface Session {
  id: string;
  userId: string;
  fresh: boolean;
  expiresAt: Date;
}

// Component props for UI components
export interface SelectContext {
  selected: import('svelte/store').Writable<any>;
  open: import('svelte/store').Writable<boolean>;
  onSelect: (value: any) => void;
  onToggle: () => void;
}

// AI Service types
export interface AIResponse {
  content: string;
  confidence?: number;
  tokens?: number;
  model?: string;
}

export interface EmbeddingResult {
  embedding: number[];
  tokens: number;
  model: string;
}

// Vector search types
export interface VectorSearchResult {
  id: string;
  content: string;
  similarity: number;
  metadata?: Record<string, any>;
}

export interface SearchOptions {
  limit?: number;
  threshold?: number;
  caseId?: string;
  contentType?: string;
}

export {};
