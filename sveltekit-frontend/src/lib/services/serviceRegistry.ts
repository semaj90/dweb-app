// Auto-generated Service Registry for Go, gRPC, QUIC, HTTP, WebSocket endpoints
// Source: gonet12grpcquic3.txt, GO_BINARIES_CATALOG.md, FULL_STACK_INTEGRATION_COMPLETE.md

export const ServiceRegistry = {
  http: {
    enhancedRAG: 'http://localhost:8094',
    uploadService: 'http://localhost:8093',
    aiSummary: 'http://localhost:8096',
    clusterManager: 'http://localhost:8213',
    aiEnhanced: 'http://localhost:8096',
    aiEnhancedFinal: 'http://localhost:8097',
    aiEnhancedFixed: 'http://localhost:8098',
    aiEnhancedPostgres: 'http://localhost:8099',
    liveAgentEnhanced: 'http://localhost:8200',
    enhancedSemanticArchitecture: 'http://localhost:8201',
    enhancedLegalAI: 'http://localhost:8202',
    enhancedLegalAIClean: 'http://localhost:8203',
    enhancedLegalAIFixed: 'http://localhost:8204',
    enhancedLegalAIRedis: 'http://localhost:8205',
    enhancedMulticore: 'http://localhost:8206',
    ginUpload: 'http://localhost:8207',
    simpleUpload: 'http://localhost:8208',
    summarizerService: 'http://localhost:8209',
    summarizerHttp: 'http://localhost:8210',
    aiSummaryService: 'http://localhost:8211',
    xstateManager: 'http://localhost:8212',
    clusterHttp: 'http://localhost:8213',
    modularClusterService: 'http://localhost:8214',
    modularClusterServiceProduction: 'http://localhost:8215',
    simdHealth: 'http://localhost:8217',
    simdParser: 'http://localhost:8218',
    context7ErrorPipeline: 'http://localhost:8219',
    gpuIndexerService: 'http://localhost:8220',
    asyncIndexer: 'http://localhost:8221',
    loadBalancer: 'http://localhost:8222',
    recommendationService: 'http://localhost:8223',
    simpleServer: 'http://localhost:8224',
    testServer: 'http://localhost:8225',
    testBuild: 'http://localhost:8226',
  },
  grpc: {
    grpcServer: 'localhost:50051',
    kratosServer: 'localhost:50052',
  },
  quic: {
    ragQuicProxy: 'localhost:8216',
  },
  ws: {
    liveAgent: 'ws://localhost:8200/ws',
    enhancedRAG: 'ws://localhost:8094/ws',
  },
  nats: {
    ws1: 'ws://localhost:4222',
    ws2: 'ws://localhost:4223',
  },
  proxy: {
    enhancedRAG: '/api/go/enhanced-rag',
    neo4j: '/api/neo4j',
    upload: '/api/go/upload',
    cluster: '/api/go/cluster',
    xstate: '/api/go/xstate',
    nvidiaLlama: '/api/nvidia-llama',
    qdrant: '/api/qdrant',
    llm: '/api/llm',
  },
  endpoints: {
    ragQuery: '/api/v1/rag',
    ai: '/api/v1/ai',
    upload: '/api/v1/upload',
    natsPublish: '/api/v1/nats/publish',
    natsStatus: '/api/v1/nats/status',
    natsSubscribe: '/api/v1/nats/subscribe',
    natsMetrics: '/api/v1/nats/metrics',
    clusterHealth: '/api/v1/cluster/health',
    cluster: '/api/v1/cluster',
    xstate: '/api/v1/xstate',
    vectorSearch: '/api/v1/vector/search',
    graphQuery: '/api/v1/graph/query',
    context7Autosolve: '/api/context7-autosolve',
    natsDemo: '/demos/nats-messaging',
  },
  proto: {
    embedder: 'proto/embed.proto',
    evidenceProcessor: 'microservices/evidence-processor/proto/evidence.proto',
    gpuService: 'proto/gpu_service.proto',
    tensor: 'proto/tensor.proto',
    events: 'proto/events.proto',
    ingest: 'proto/ingest.proto',
    ingestNew: 'proto/ingest_new.proto',
  },
};

// Usage: ServiceRegistry.http.enhancedRAG, ServiceRegistry.grpc.kratosServer, etc.
