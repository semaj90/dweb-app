# Phase 4: Complete RAG System with Event Streaming
# Legal AI Assistant - Production Configuration

# Database Configuration (PostgreSQL + pgvector)
DATABASE_URL="postgresql://legal_admin:LegalSecure2024!@localhost:5432/legal_ai_db"
DIRECT_URL="postgresql://legal_admin:LegalSecure2024!@localhost:5432/legal_ai_db"
POSTGRES_USER="legal_admin"
POSTGRES_PASSWORD="LegalSecure2024!"
POSTGRES_DB="legal_ai_db"

# AI Services Configuration (Local GGUF + GPU)
OLLAMA_BASE_URL="http://localhost:11435"
OLLAMA_MODEL="legal-assistant"
EMBEDDING_MODEL="nomic-embed-text"
OLLAMA_GPU_ENABLED=true
OLLAMA_LOCAL_MODEL=true
OLLAMA_GGUF_PATH="/models/gemma3Q4_K_M/mo16.gguf"
OLLAMA_GPU_LAYERS=33
OLLAMA_FLASH_ATTENTION=true
CUDA_VISIBLE_DEVICES=0

# Vector Database Configuration
QDRANT_URL="http://localhost:6333"
QDRANT_API_KEY=""
QDRANT_COLLECTION_NAME="legal_documents"

# Event Streaming & Caching
REDIS_URL="redis://localhost:6379"
REDIS_PASSWORD=""
RABBITMQ_URL="amqp://legal_admin:LegalSecure2024!@localhost:5672"
RABBITMQ_MANAGEMENT_URL="http://localhost:15672"

# Performance & Processing Settings
VECTOR_PROCESSING_BATCH_SIZE=1000
AI_ANALYSIS_PARALLEL_WORKERS=4
MAX_CONCURRENT_EMBEDDINGS=10
CHUNK_SIZE=800
CHUNK_OVERLAP=200

# RAG Configuration
ENABLE_RAG=true
ENABLE_STREAMING=true
ENABLE_BACKGROUND_PROCESSING=true
MAX_CONTEXT_CHUNKS=8
SIMILARITY_THRESHOLD=0.75
MAX_CONTEXT_LENGTH=8192

# LangChain Configuration
LANGCHAIN_TRACING_V2=true
LANGCHAIN_PROJECT="legal-ai-assistant"
LANGCHAIN_ENDPOINT="http://localhost:11435"

# Background Job Processing
ENABLE_DOCUMENT_PROCESSING=true
ENABLE_ASYNC_EMBEDDINGS=true
DOCUMENT_QUEUE_NAME="document_processing"
EMBEDDING_QUEUE_NAME="embedding_generation"
JOB_RETRY_ATTEMPTS=3
JOB_TIMEOUT=300000

# File Storage & Processing
EVIDENCE_STORAGE_PATH="./evidence_files"
PROCESSED_STORAGE_PATH="./processed_files"
MAX_FILE_SIZE="200MB"
ALLOWED_FILE_TYPES="pdf,doc,docx,txt,md,rtf,html,json,csv,xlsx"

# XState & Svelte Configuration
ENABLE_XSTATE_DEVTOOLS=true
ENABLE_SVELTE_DEVTOOLS=true
SVELTE_KIT_LOG_LEVEL="info"

# Security & Authentication
JWT_SECRET="legal_ai_jwt_secret_phase4_2024"
ENCRYPT_KEY="legal_ai_32_char_encryption_key_v2"
SESSION_SECRET="legal_ai_session_secret_ultra_secure"
BCRYPT_ROUNDS=12

# API Rate Limiting
RATE_LIMIT_WINDOW=900000
RATE_LIMIT_MAX_REQUESTS=1000
RATE_LIMIT_BURST=50

# Monitoring & Logging
LOG_LEVEL="info"
ENABLE_QUERY_LOGGING=true
ENABLE_PERFORMANCE_MONITORING=true
ENABLE_ERROR_TRACKING=true

# Application Metadata
PUBLIC_APP_NAME="Legal AI Assistant - Phase 4"
PUBLIC_APP_VERSION="4.0.0-rag"
PUBLIC_APP_DESCRIPTION="Advanced RAG-powered legal document analysis system"
NODE_ENV="development"

# Development Configuration
VITE_API_BASE_URL="http://localhost:5173"
VITE_ENABLE_DEV_TOOLS=true
VITE_HOT_RELOAD=true

# Neo4j Graph Database Configuration
NEO4J_URI="bolt://localhost:7687"
NEO4J_USER="neo4j"
NEO4J_PASSWORD="LegalSecure2024!"
NEO4J_DATABASE="neo4j"

# Service Workers Configuration
WORKER_MAX_INSTANCES=4
WORKER_TIMEOUT=300000
WORKER_RETRY_ATTEMPTS=3
ENABLE_WORKER_CLUSTERING=false

# Phase 4: Data Management & Event Streaming
ENABLE_NEO4J_INTEGRATION=true
ENABLE_SERVICE_WORKERS=true
ENABLE_GRAPH_ANALYSIS=true
ENABLE_PATTERN_RECOGNITION=true

# --- Docker Compose and service definitions should be in docker-compose.yml, not .env.gpu ---
# If you need to set environment variables for Docker Compose, use the environment: section in docker-compose.yml
# Remove all malformed YAML/service definitions from this .env.gpu file