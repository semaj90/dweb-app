üîß WEB APP ERROR FIX GUIDE
==========================

QUICK START (Automated):
========================
1. Double-click "fix-web-app-errors.bat" on your desktop
   OR
2. Right-click "fix-web-app-errors.ps1" ‚Üí Run with PowerShell

MANUAL FIX STEPS:
================

üö® CRITICAL FIXES (Fix these first):

1. INSTALL MISSING PACKAGES
   - Open terminal in: C:\Users\james\Desktop\web-app\sveltekit-frontend
   - Run: npm install fuse.js @types/node

2. FIX FUSE IMPORT ERRORS (3 files)
   Find and replace in these files:
   - src\lib\stores\saved-notes.ts
   - src\lib\stores\evidence-store.ts  
   - src\lib\utils\fuzzy.ts
   
   Replace: import Fuse from "fuse"
   With:    import Fuse from "fuse.js"

3. ADD ENVIRONMENT IMPORTS
   File: src\lib\services\ai-service.ts
   Add at top: import { env } from '$env/static/private';

4. FIX MODAL ACCESSIBILITY
   File: src\lib\components\ui\modal\Modal.svelte
   Find:    role="dialog"
   Replace: role="dialog" tabindex={-1}

5. FIX EVENT HANDLER ERROR
   File: src\lib\components\ui\ModalManager.svelte
   Find:    on:click={() => (e) => handleBackdropClick(e, modal)()}
   Replace: on:click={(e) => handleBackdropClick(e, modal)}

‚ö†Ô∏è MEDIUM PRIORITY FIXES:

6. FIX USER PROPERTIES
   File: src\hooks.server.ts
   Replace: user.createdAt
   With:    (user as any).createdAt
   
   Replace: user.updatedAt  
   With:    (user as any).updatedAt

7. ADD MISSING DRIZZLE IMPORTS
   In any file that uses eq() function, add:
   import { eq } from 'drizzle-orm';

8. FIX METADATA ACCESS
   Replace patterns like: .metadata?.propertyName
   With:                  .metadata?.["propertyName"] as any

üìä ERROR BREAKDOWN:
==================
- Import errors: ~15 files (fuse, env, drizzle)
- Type errors: ~30 files (database schema mismatches)
- Accessibility: 2 files (modal tabindex)
- Event handlers: 1 file (ModalManager)
- Method signatures: ~10 files (wrong arguments)

üß™ TESTING AFTER FIXES:
======================
1. Run: npm run check
   (Should show fewer errors)

2. Run: npm run dev
   (Should start without critical errors)

3. Open: http://localhost:5173
   (Test the application)

4. Check browser console for runtime errors

üóÑÔ∏è DATABASE SETUP:
==================
If you get database errors:

1. Start services:
   docker-compose up -d

2. Run migrations:
   npm run db:migrate

3. Seed database (optional):
   npm run seed

üîß TROUBLESHOOTING:
==================

ERROR: "Cannot find module 'fuse'"
FIX: npm install fuse.js

ERROR: "Cannot find name 'env'"  
FIX: Add import { env } from '$env/static/private';

ERROR: "tabindex value"
FIX: Change tabindex="0" to tabindex={0}

ERROR: "Property 'createdAt' does not exist"
FIX: Use (user as any).createdAt

ERROR: "This expression is not callable"
FIX: Fix event handler syntax in ModalManager

ERROR: "Cannot find name 'eq'"
FIX: Add import { eq } from 'drizzle-orm';

üéØ QUICK VERIFICATION:
=====================
After running fixes, error count should drop from ~100+ to <20

Most remaining errors will be:
- Database schema mismatches (non-critical)
- Minor type issues (warnings)
- Unused variables/imports (cleanup)

üöÄ SUCCESS INDICATORS:
=====================
‚úÖ npm run check shows <20 errors
‚úÖ npm run dev starts successfully  
‚úÖ Application loads in browser
‚úÖ No console errors on homepage
‚úÖ Login/registration works
‚úÖ No critical TypeScript errors

üìû NEXT STEPS AFTER FIXING:
===========================
1. Test core functionality (login, cases, evidence)
2. Check file upload features
3. Test AI integration (if configured)
4. Verify database operations
5. Check responsive design
6. Test accessibility features

üí° PREVENTION:
==============
- Use proper TypeScript types
- Add proper error handling
- Keep dependencies updated
- Use linting rules
- Regular code reviews
- Automated testing

Created: $(Get-Date)
Status: Ready for execution
