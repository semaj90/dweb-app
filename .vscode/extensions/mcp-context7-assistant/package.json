{
  "name": "mcp-context7-assistant",
  "displayName": "Context7 MCP Assistant",
  "description": "Intelligent MCP integration with auto-context detection for legal AI development",
  "version": "0.1.0",
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Other",
    "Machine Learning",
    "Snippets"
  ],
  "keywords": [
    "mcp",
    "context7",
    "ai",
    "legal",
    "sveltekit",
    "typescript",
    "assistant"
  ],
  "activationEvents": [
    "onStartupFinished",
    "workspaceContains:**/package.json",
    "workspaceContains:**/mcp*.json"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "mcp.analyzeCurrentContext",
        "title": "üîç Analyze Current Context",
        "category": "Context7 MCP"
      },
      {
        "command": "mcp.suggestBestPractices",
        "title": "‚ú® Suggest Best Practices",
        "category": "Context7 MCP"
      },
      {
        "command": "mcp.getContextAwareDocs",
        "title": "üìö Get Context-Aware Documentation",
        "category": "Context7 MCP"
      },
      {
        "command": "mcp.analyzeErrors",
        "title": "üêõ Analyze TypeScript Errors",
        "category": "Context7 MCP"
      },
      {
        "command": "mcp.startServer",
        "title": "üöÄ Start MCP Server",
        "category": "Context7 MCP"
      },
      {
        "command": "mcp.stopServer",
        "title": "üõë Stop MCP Server",
        "category": "Context7 MCP"
      },
      {
        "command": "mcp.analyzeFullStack",
        "title": "üîç Analyze Full Tech Stack",
        "category": "Context7 MCP"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "when": "resourceExtname == .ts || resourceExtname == .js || resourceExtname == .svelte",
          "command": "mcp.analyzeCurrentContext",
          "group": "mcp@1"
        },
        {
          "when": "resourceExtname == .ts || resourceExtname == .js || resourceExtname == .svelte",
          "command": "mcp.getContextAwareDocs",
          "group": "mcp@2"
        }
      ],
      "explorer/context": [
        {
          "when": "explorerResourceIsFolder",
          "command": "mcp.analyzeCurrentContext",
          "group": "mcp@1"
        }
      ]
    },
    "statusBarItems": [
      {
        "id": "mcpStatus",
        "name": "MCP Context7 Status",
        "alignment": "right",
        "priority": 100
      }
    ],
    "configuration": {
      "title": "Context7 MCP Assistant",
      "properties": {
        "mcpContext7.serverPort": {
          "type": "number",
          "default": 3000,
          "description": "Port for the MCP Context7 server"
        },
        "mcpContext7.autoStart": {
          "type": "boolean",
          "default": true,
          "description": "Automatically start MCP server when workspace opens"
        },
        "mcpContext7.contextDetection": {
          "type": "boolean",
          "default": true,
          "description": "Enable automatic context detection from errors and files"
        },
        "mcpContext7.suggestionConfidenceThreshold": {
          "type": "number",
          "default": 0.7,
          "minimum": 0.1,
          "maximum": 1.0,
          "description": "Minimum confidence threshold for MCP suggestions"
        },
        "mcpContext7.maxSuggestions": {
          "type": "number",
          "default": 5,
          "minimum": 1,
          "maximum": 10,
          "description": "Maximum number of MCP suggestions to show"
        },
        "mcpContext7.logLevel": {
          "type": "string",
          "enum": ["error", "warn", "info", "debug"],
          "default": "info",
          "description": "Logging level for MCP extension"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./"
  },
  "devDependencies": {
    "@types/vscode": "^1.74.0",
    "@types/node": "16.x",
    "typescript": "^4.9.4"
  },
  "dependencies": {
    "axios": "^1.6.0",
    "ws": "^8.14.0"
  }
}