{
  "mcpServers": {
    "file-management": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-filesystem"],
      "env": {
        "ALLOWED_DIRECTORIES": "C:\\\\Users\\\\james\\\\Desktop\\\\deeds-web\\\\deeds-web-app"
      }
    },
    "memory": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-memory"]
    },
    "postgres": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-postgres"],
      "env": {
        "POSTGRES_CONNECTION_STRING": "postgresql://postgres:postgres@localhost:5432/prosecutor_db"
      }
    },
    "svelte-llm": {
      "command": "npx",
      "args": ["mcp-remote", "https://svelte-llm.khromov.se/mcp/mcp"],
      "type": "stdio"
    },
    "context7-custom": {
      "command": "node",
      "args": [
        "C:\\Users\\james\\Desktop\\deeds-web\\deeds-web-app\\mcp-servers\\context7-server.js"
      ],
      "env": {
        "STACK_CONFIG": "C:\\Users\\james\\Desktop\\deeds-web\\deeds-web-app\\context7-docs\\context7-mcp-config.json",
        "DOC_SOURCES": "C:\\Users\\james\\Desktop\\deeds-web\\deeds-web-app\\context7-docs",
        "ENABLE_VLLM": "false",
        "SERVER_PORT": "4000"
      }
    }
  },
  "chat.mcp.serverSampling": {
    "*": {
      "allowedModels": [
        "github.copilot-chat/claude-sonnet-4",
        "github.copilot-chat/gpt-4.1",
        "github.copilot-chat/gpt-4o"
      ]
    }
  },
  "copilot.mcp.enabled": true,
  "copilot.chat.useProjectContext": true,
  "copilot.chat.defaultModel": "github.copilot-chat/claude-sonnet-4",
  "copilot.chat.experimental.codeGeneration": true,
  "context7.enabled": false,
  "context7.sources": [
    "https://context7.com/svelte.dev-9b0d6d1/llmstxt/llms.txt",
    "https://context7.com/tailwindcss.com/llmstxt/llms.txt",
    "https://context7.com/orm.drizzle.team/llmstxt/llms.txt",
    "https://context7.com/unocss.dev/llmstxt/llms.txt",
    "https://context7.com/github.com-statelyai-xstate/llmstxt/llms.txt",
    "https://context7.com/github.com-fabricjs-fabric.js/llmstxt/llms.txt"
  ],

  "editor.snippetSuggestions": "top",
  "editor.suggest.snippetsPreventQuickSuggestions": false,
  "editor.wordBasedSuggestions": "allDocuments",
  "editor.quickSuggestions": {
    "other": true,
    "comments": true,
    "strings": true
  },

  "claude.mcp.enableAutocompletion": true,
  "claude.mcp.model": "claude-sonnet-4-20250514",
  "claude.mcp.contextWindow": 200000,
  "claude.mcp.temperature": 0.1,
  "claude.mcp.enableStreaming": true,
  "claude.mcp.snippets": {
    "context7": {
      "enabled": true,
      "tools": [
        "analyze-stack",
        "generate-best-practices",
        "suggest-integration",
        "resolve-library-id",
        "get-library-docs",
        "rag-query",
        "rag-get-stats",
        "rag-integration-guide"
      ],
      "shortcuts": {
        "analyze": "mcp-analyze",
        "practices": "mcp-practices",
        "integrate": "mcp-integrate",
        "docs": "mcp-docs",
        "rag": "mcp-rag-query",
        "stats": "mcp-rag-stats"
      }
    }
  },

  "typescript.suggest.autoImports": true,
  "typescript.preferences.importModuleSpecifier": "relative",
  "editor.suggest.insertMode": "replace",
  "editor.acceptSuggestionOnCommitCharacter": false,
  "typescript.suggest.completeFunctionCalls": true,
  "javascript.suggest.completeFunctionCalls": true,

  // Claude Code CLI Integration
  "claude.enabled": true,
  "claude.model": "claude-sonnet-4-20250514",
  "claude.maxTokens": 8192,
  "claude.temperature": 0.1,
  "claude.streaming": true,
  "claude.autoSave": true,
  "claude.contextFiles": [
    ".vscode/claude.md",
    "CLAUDE.md",
    "sveltekit-frontend/src/CLAUDE.md"
  ],

  // Enhanced Copilot Integration
  "github.copilot.enable": {
    "*": true,
    "yaml": true,
    "plaintext": true,
    "markdown": true,
    "svelte": true,
    "typescript": true,
    "javascript": true
  },
  "github.copilot.advanced": {
    "debug.overrideEngine": "claude-sonnet-4",
    "debug.useClaudeForExplanations": true,
    "length": 2000,
    "temperature": 0.1
  },

  // Agent Orchestration Integration
  "mcpContext7.agentOrchestrator": {
    "enabled": false,
    "endpoint": "http://localhost:7070",
    "defaultAgents": ["claude", "crewai", "rag"],
    "autoTrigger": {
      "onFileChange": false,
      "onError": false,
      "interval": 600000
    }
  },

  // Legal AI Specific Settings
  "legalAI.enabled": true,
  "legalAI.contextAware": true,
  "legalAI.caseManagement": true,
  "legalAI.evidenceTracking": true,
  "legalAI.complianceMode": true,
  "mcpContext7.serverPort": 40000,
  "mcpContext7.suggestionConfidenceThreshold": 0.9,
  
  // Enhanced RAG Backend Integration
  "mcpContext7.ragBackendUrl": "http://localhost:8000",
  "mcpContext7.ragTimeout": 30000,
  "mcpContext7.ragRetries": 3,
  "mcpContext7.ragEnabled": false,
  "mcpContext7.ragAutoStart": false,
  "mcpContext7.ragHealthCheck": false,
  
  // Comprehensive RAG Settings
  "enhancedRAG.enabled": false,
  "enhancedRAG.backend": {
    "url": "http://localhost:8000",
    "timeout": 30000,
    "retries": 3
  },
  "enhancedRAG.ollama": {
    "url": "http://localhost:11434",
    "model": "legal-ai",
    "embeddingModel": "nomic-embed-text"
  },
  "enhancedRAG.postgres": {
    "connectionString": "postgresql://postgres:postgres@localhost:5432/prosecutor_db",
    "vectorDimensions": 384
  },
  "enhancedRAG.redis": {
    "url": "redis://localhost:6379"
  }
}
