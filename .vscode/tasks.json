{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Start Legal AI System",
      "type": "shell",
      "command": "${workspaceFolder}/START-LEGAL-AI-WINDOWS.bat",
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Start MCP Servers",
      "type": "shell",
      "command": "echo",
      "args": ["Starting MCP servers..."],
      "group": "build",
      "dependsOrder": "sequence",
      "dependsOn": [
        "MCP: Context7 Server",
        "MCP: Memory Server", 
        "MCP: Postgres Server"
      ]
    },
    {
      "label": "MCP: Context7 Server",
      "type": "shell",
      "command": "node",
      "args": ["${workspaceFolder}/mcp-servers/context7-server.js"],
      "options": {
        "env": {
          "STACK_CONFIG": "${workspaceFolder}/context7-docs/context7-mcp-config.json",
          "DOC_SOURCES": "${workspaceFolder}/context7-docs",
          "ENABLE_VLLM": "false",
          "SERVER_PORT": "4000"
        }
      },
      "group": "build",
      "isBackground": true,
      "problemMatcher": {
        "pattern": {
          "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        },
        "background": {
          "activeOnStart": true,
          "beginsPattern": "^.*Context7 server starting.*$",
          "endsPattern": "^.*Context7 server ready.*$"
        }
      }
    },
    {
      "label": "MCP: Memory Server",
      "type": "shell",
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-memory"],
      "group": "build",
      "isBackground": true
    },
    {
      "label": "MCP: Postgres Server",
      "type": "shell",
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-postgres"],
      "options": {
        "env": {
          "POSTGRES_CONNECTION_STRING": "postgresql://postgres:postgres@localhost:5432/prosecutor_db"
        }
      },
      "group": "build",
      "isBackground": true
    },
    {
      "label": "Start SvelteKit Dev",
      "type": "shell",
      "command": "npm",
      "args": ["run", "dev"],
      "options": {
        "cwd": "${workspaceFolder}/sveltekit-frontend"
      },
      "group": "build",
      "isBackground": true,
      "problemMatcher": {
        "pattern": {
          "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        },
        "background": {
          "activeOnStart": true,
          "beginsPattern": "^.*VITE.*$",
          "endsPattern": "^.*Local:.*$"
        }
      }
    },
    {
      "label": "Health Check Services",
      "type": "shell",
      "command": "echo",
      "args": ["Checking service health..."],
      "group": "test",
      "dependsOrder": "parallel",
      "dependsOn": [
        "Check PostgreSQL",
        "Check Ollama",
        "Check Redis",
        "Check Qdrant"
      ]
    },
    {
      "label": "Check PostgreSQL",
      "type": "shell",
      "command": "docker",
      "args": ["exec", "legal_ai_postgres", "pg_isready", "-U", "postgres"]
    },
    {
      "label": "Check Ollama", 
      "type": "shell",
      "command": "curl",
      "args": ["-f", "http://localhost:11434/api/version"]
    },
    {
      "label": "Check Redis",
      "type": "shell", 
      "command": "docker",
      "args": ["exec", "legal_ai_redis", "redis-cli", "ping"]
    },
    {
      "label": "Check Qdrant",
      "type": "shell",
      "command": "curl",
      "args": ["-f", "http://localhost:6333/collections"]
    }
  ]
}